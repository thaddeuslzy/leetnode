{"nodes": [{"id": 1787, "name": "Make the XOR of All Segments Equal to Zero", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/make-the-xor-of-all-segments-equal-to-zero", "submissions": 4592, "accepted_subsmissions": 1607, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "109", "downvotes": "5"}, {"id": 1786, "name": "Number of Restricted Paths From First to Last Node", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/number-of-restricted-paths-from-first-to-last-node", "submissions": 13256, "accepted_subsmissions": 4749, "group": 2, "topics": ["Dynamic Programming", "Graph"], "upvotes": "201", "downvotes": "37"}, {"id": 1785, "name": "Minimum Elements to Add to Form a Given Sum", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/minimum-elements-to-add-to-form-a-given-sum", "submissions": 21041, "accepted_subsmissions": 8136, "group": 2, "topics": ["Greedy"], "upvotes": "68", "downvotes": "67"}, {"id": 1784, "name": "Check if Binary String Has at Most One Segment of Ones", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/check-if-binary-string-has-at-most-one-segment-of-ones", "submissions": 25617, "accepted_subsmissions": 10742, "group": 2, "topics": ["Greedy"], "upvotes": "55", "downvotes": "148"}, {"id": 1776, "name": "Car Fleet II", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/car-fleet-ii", "submissions": 6277, "accepted_subsmissions": 2757, "group": 2, "topics": ["Math"], "upvotes": "138", "downvotes": "3"}, {"id": 1775, "name": "Equal Sum Arrays With Minimum Number of Operations", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/equal-sum-arrays-with-minimum-number-of-operations", "submissions": 12672, "accepted_subsmissions": 6411, "group": 2, "topics": ["Greedy"], "upvotes": "190", "downvotes": "4"}, {"id": 1774, "name": "Closest Dessert Cost", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/closest-dessert-cost", "submissions": 16247, "accepted_subsmissions": 9700, "group": 2, "topics": ["Greedy"], "upvotes": "163", "downvotes": "24"}, {"id": 1773, "name": "Count Items Matching a Rule", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/count-items-matching-a-rule", "submissions": 21972, "accepted_subsmissions": 18957, "group": 2, "topics": ["Array", "String"], "upvotes": "117", "downvotes": "23"}, {"id": 1771, "name": "Maximize Palindrome Length From Subsequences", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/maximize-palindrome-length-from-subsequences", "submissions": 12220, "accepted_subsmissions": 4156, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "161", "downvotes": "5"}, {"id": 1770, "name": "Maximum Score from Performing Multiplication Operations", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/maximum-score-from-performing-multiplication-operations", "submissions": 26735, "accepted_subsmissions": 7732, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "233", "downvotes": "77"}, {"id": 1769, "name": "Minimum Number of Operations to Move All Balls to Each Box", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/minimum-number-of-operations-to-move-all-balls-to-each-box", "submissions": 20510, "accepted_subsmissions": 17962, "group": 2, "topics": ["Array", "Greedy"], "upvotes": "221", "downvotes": "14"}, {"id": 1768, "name": "Merge Strings Alternately", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/merge-strings-alternately", "submissions": 21660, "accepted_subsmissions": 16734, "group": 2, "topics": ["String"], "upvotes": "121", "downvotes": "2"}, {"id": 1782, "name": "Count Pairs Of Nodes", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/count-pairs-of-nodes", "submissions": 5539, "accepted_subsmissions": 1718, "group": 2, "topics": ["Graph"], "upvotes": "87", "downvotes": "52"}, {"id": 1781, "name": "Sum of Beauty of All Substrings", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/sum-of-beauty-of-all-substrings", "submissions": 10422, "accepted_subsmissions": 5887, "group": 2, "topics": ["Hash Table", "String"], "upvotes": "91", "downvotes": "47"}, {"id": 1780, "name": "Check if Number is a Sum of Powers of Three", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/check-if-number-is-a-sum-of-powers-of-three", "submissions": 10037, "accepted_subsmissions": 6344, "group": 2, "topics": ["Math", "Backtracking", "Recursion"], "upvotes": "122", "downvotes": "5"}, {"id": 1779, "name": "Find Nearest Point That Has the Same X or Y Coordinate", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/find-nearest-point-that-has-the-same-x-or-y-coordinate", "submissions": 11821, "accepted_subsmissions": 8036, "group": 2, "topics": ["Array"], "upvotes": "47", "downvotes": "6"}, {"id": 1761, "name": "Minimum Degree of a Connected Trio in a Graph", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/minimum-degree-of-a-connected-trio-in-a-graph", "submissions": 14623, "accepted_subsmissions": 5449, "group": 2, "topics": ["Graph"], "upvotes": "62", "downvotes": "111"}, {"id": 1760, "name": "Minimum Limit of Balls in a Bag", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/minimum-limit-of-balls-in-a-bag", "submissions": 12857, "accepted_subsmissions": 6707, "group": 2, "topics": ["Binary Search", "Heap"], "upvotes": "327", "downvotes": "17"}, {"id": 1759, "name": "Count Number of Homogenous Substrings", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/count-number-of-homogenous-substrings", "submissions": 21963, "accepted_subsmissions": 9202, "group": 2, "topics": ["String", "Greedy"], "upvotes": "127", "downvotes": "17"}, {"id": 1758, "name": "Minimum Changes To Make Alternating Binary String", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/minimum-changes-to-make-alternating-binary-string", "submissions": 20745, "accepted_subsmissions": 12193, "group": 2, "topics": ["Array", "Greedy"], "upvotes": "149", "downvotes": "3"}, {"id": 1755, "name": "Closest Subsequence Sum", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/closest-subsequence-sum", "submissions": 11730, "accepted_subsmissions": 4176, "group": 2, "topics": ["Divide and Conquer", "Meet in the Middle"], "upvotes": "171", "downvotes": "40"}, {"id": 1754, "name": "Largest Merge Of Two Strings", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/largest-merge-of-two-strings", "submissions": 20318, "accepted_subsmissions": 8135, "group": 2, "topics": ["Greedy", "Suffix Array"], "upvotes": "157", "downvotes": "34"}, {"id": 1753, "name": "Maximum Score From Removing Stones", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/maximum-score-from-removing-stones", "submissions": 15764, "accepted_subsmissions": 9648, "group": 2, "topics": ["Math", "Heap"], "upvotes": "136", "downvotes": "17"}, {"id": 1752, "name": "Check if Array Is Sorted and Rotated", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/check-if-array-is-sorted-and-rotated", "submissions": 28604, "accepted_subsmissions": 18027, "group": 2, "topics": ["Array"], "upvotes": "145", "downvotes": "26"}, {"id": 1765, "name": "Map of Highest Peak", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/map-of-highest-peak", "submissions": 9536, "accepted_subsmissions": 5208, "group": 2, "topics": ["Breadth-first Search", "Graph"], "upvotes": "147", "downvotes": "11"}, {"id": 1766, "name": "Tree of Coprimes", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/tree-of-coprimes", "submissions": 6822, "accepted_subsmissions": 2503, "group": 2, "topics": ["Math", "Tree", "Depth-first Search", "Breadth-first Search"], "upvotes": "105", "downvotes": "8"}, {"id": 1764, "name": "Form Array by Concatenating Subarrays of Another Array", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/form-array-by-concatenating-subarrays-of-another-array", "submissions": 11231, "accepted_subsmissions": 6219, "group": 2, "topics": ["Array", "Greedy"], "upvotes": "91", "downvotes": "14"}, {"id": 1763, "name": "Longest Nice Substring", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/longest-nice-substring", "submissions": 12236, "accepted_subsmissions": 7548, "group": 2, "topics": ["String"], "upvotes": "110", "downvotes": "113"}, {"id": 1744, "name": "Can You Eat Your Favorite Candy on Your Favorite Day?", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/can-you-eat-your-favorite-candy-on-your-favorite-day", "submissions": 18503, "accepted_subsmissions": 5624, "group": 2, "topics": ["Math"], "upvotes": "53", "downvotes": "178"}, {"id": 1745, "name": "Palindrome Partitioning IV", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/palindrome-partitioning-iv", "submissions": 13957, "accepted_subsmissions": 6867, "group": 2, "topics": ["String", "Dynamic Programming"], "upvotes": "188", "downvotes": "3"}, {"id": 1743, "name": "Restore the Array From Adjacent Pairs", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/restore-the-array-from-adjacent-pairs", "submissions": 14638, "accepted_subsmissions": 9232, "group": 2, "topics": ["Greedy"], "upvotes": "211", "downvotes": "4"}, {"id": 1739, "name": "Building Boxes", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/building-boxes", "submissions": 6418, "accepted_subsmissions": 3184, "group": 2, "topics": ["Math", "Binary Search"], "upvotes": "124", "downvotes": "17"}, {"id": 1738, "name": "Find Kth Largest XOR Coordinate Value", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/find-kth-largest-xor-coordinate-value", "submissions": 12145, "accepted_subsmissions": 7540, "group": 2, "topics": ["Array"], "upvotes": "108", "downvotes": "19"}, {"id": 1737, "name": "Change Minimum Characters to Satisfy One of Three Conditions", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/change-minimum-characters-to-satisfy-one-of-three-conditions", "submissions": 19144, "accepted_subsmissions": 5654, "group": 2, "topics": ["String", "Greedy"], "upvotes": "133", "downvotes": "181"}, {"id": 1736, "name": "Latest Time by Replacing Hidden Digits", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/latest-time-by-replacing-hidden-digits", "submissions": 30412, "accepted_subsmissions": 12490, "group": 2, "topics": ["String", "Greedy"], "upvotes": "84", "downvotes": "49"}, {"id": 1751, "name": "Maximum Number of Events That Can Be Attended II", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/maximum-number-of-events-that-can-be-attended-ii", "submissions": 9034, "accepted_subsmissions": 4293, "group": 2, "topics": ["Binary Search", "Dynamic Programming"], "upvotes": "163", "downvotes": "4"}, {"id": 1750, "name": "Minimum Length of String After Deleting Similar Ends", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/minimum-length-of-string-after-deleting-similar-ends", "submissions": 16277, "accepted_subsmissions": 6923, "group": 2, "topics": ["Two Pointers"], "upvotes": "103", "downvotes": "9"}, {"id": 1749, "name": "Maximum Absolute Sum of Any Subarray", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/maximum-absolute-sum-of-any-subarray", "submissions": 14674, "accepted_subsmissions": 7585, "group": 2, "topics": ["Greedy"], "upvotes": "205", "downvotes": "5"}, {"id": 1748, "name": "Sum of Unique Elements", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/sum-of-unique-elements", "submissions": 25207, "accepted_subsmissions": 18983, "group": 2, "topics": ["Array", "Hash Table"], "upvotes": "157", "downvotes": "5"}, {"id": 1727, "name": "Largest Submatrix With Rearrangements", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/largest-submatrix-with-rearrangements", "submissions": 11733, "accepted_subsmissions": 6856, "group": 2, "topics": ["Greedy", "Sort"], "upvotes": "327", "downvotes": "9"}, {"id": 1742, "name": "Maximum Number of Balls in a Box", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/maximum-number-of-balls-in-a-box", "submissions": 22110, "accepted_subsmissions": 16472, "group": 2, "topics": ["Array"], "upvotes": "124", "downvotes": "15"}, {"id": 1725, "name": "Number Of Rectangles That Can Form The Largest Square", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/number-of-rectangles-that-can-form-the-largest-square", "submissions": 21838, "accepted_subsmissions": 16997, "group": 2, "topics": ["Greedy"], "upvotes": "127", "downvotes": "12"}, {"id": 1722, "name": "Minimize Hamming Distance After Swap Operations", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/minimize-hamming-distance-after-swap-operations", "submissions": 15732, "accepted_subsmissions": 8566, "group": 2, "topics": ["Greedy", "Depth-first Search", "Union Find"], "upvotes": "305", "downvotes": "11"}, {"id": 1720, "name": "Decode XORed Array", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/decode-xored-array", "submissions": 24129, "accepted_subsmissions": 20568, "group": 2, "topics": ["Bit Manipulation"], "upvotes": "175", "downvotes": "30"}, {"id": 1735, "name": "Count Ways to Make Array With Product", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/count-ways-to-make-array-with-product", "submissions": 4192, "accepted_subsmissions": 2022, "group": 2, "topics": ["Math"], "upvotes": "85", "downvotes": "18"}, {"id": 1734, "name": "Decode XORed Permutation", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/decode-xored-permutation", "submissions": 9193, "accepted_subsmissions": 4823, "group": 2, "topics": ["Bit Manipulation"], "upvotes": "246", "downvotes": "8"}, {"id": 1733, "name": "Minimum Number of People to Teach", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/minimum-number-of-people-to-teach", "submissions": 10033, "accepted_subsmissions": 3739, "group": 2, "topics": ["Array", "Greedy"], "upvotes": "78", "downvotes": "223"}, {"id": 1732, "name": "Find the Highest Altitude", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/find-the-highest-altitude", "submissions": 27530, "accepted_subsmissions": 22188, "group": 2, "topics": ["Array"], "upvotes": "183", "downvotes": "23"}, {"id": 1713, "name": "Minimum Operations to Make a Subsequence", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/minimum-operations-to-make-a-subsequence", "submissions": 8184, "accepted_subsmissions": 3727, "group": 2, "topics": ["Greedy"], "upvotes": "212", "downvotes": "3"}, {"id": 1712, "name": "Ways to Split Array Into Three Subarrays", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/ways-to-split-array-into-three-subarrays", "submissions": 25423, "accepted_subsmissions": 7484, "group": 2, "topics": ["Two Pointers", "Binary Search"], "upvotes": "321", "downvotes": "39"}, {"id": 1711, "name": "Count Good Meals", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/count-good-meals", "submissions": 43781, "accepted_subsmissions": 11402, "group": 2, "topics": ["Array", "Hash Table", "Two Pointers"], "upvotes": "194", "downvotes": "132"}, {"id": 1710, "name": "Maximum Units on a Truck", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/maximum-units-on-a-truck", "submissions": 33490, "accepted_subsmissions": 23522, "group": 2, "topics": ["Greedy", "Sort"], "upvotes": "236", "downvotes": "19"}, {"id": 1707, "name": "Maximum XOR With an Element From Array", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/maximum-xor-with-an-element-from-array", "submissions": 9861, "accepted_subsmissions": 4619, "group": 2, "topics": ["Bit Manipulation", "Trie"], "upvotes": "172", "downvotes": "9"}, {"id": 1723, "name": "Find Minimum Time to Finish All Jobs", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/find-minimum-time-to-finish-all-jobs", "submissions": 16622, "accepted_subsmissions": 7275, "group": 2, "topics": ["Backtracking", "Recursion"], "upvotes": "191", "downvotes": "10"}, {"id": 1705, "name": "Maximum Number of Eaten Apples", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/maximum-number-of-eaten-apples", "submissions": 25127, "accepted_subsmissions": 10553, "group": 2, "topics": ["Heap", "Greedy"], "upvotes": "248", "downvotes": "117"}, {"id": 1704, "name": "Determine if String Halves Are Alike", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/determine-if-string-halves-are-alike", "submissions": 31274, "accepted_subsmissions": 24079, "group": 2, "topics": ["String"], "upvotes": "154", "downvotes": "10"}, {"id": 1719, "name": "Number Of Ways To Reconstruct A Tree", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/number-of-ways-to-reconstruct-a-tree", "submissions": 3604, "accepted_subsmissions": 1428, "group": 2, "topics": ["Tree", "Graph"], "upvotes": "58", "downvotes": "43"}, {"id": 1718, "name": "Construct the Lexicographically Largest Valid Sequence", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/construct-the-lexicographically-largest-valid-sequence", "submissions": 9238, "accepted_subsmissions": 4286, "group": 2, "topics": ["Backtracking", "Recursion"], "upvotes": "180", "downvotes": "11"}, {"id": 1717, "name": "Maximum Score From Removing Substrings", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/maximum-score-from-removing-substrings", "submissions": 13036, "accepted_subsmissions": 5262, "group": 2, "topics": ["Greedy"], "upvotes": "203", "downvotes": "14"}, {"id": 1716, "name": "Calculate Money in Leetcode Bank", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/calculate-money-in-leetcode-bank", "submissions": 20931, "accepted_subsmissions": 13920, "group": 2, "topics": ["Math", "Greedy"], "upvotes": "186", "downvotes": "3"}, {"id": 1697, "name": "Checking Existence of Edge Length Limited Paths", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/checking-existence-of-edge-length-limited-paths", "submissions": 9281, "accepted_subsmissions": 5060, "group": 2, "topics": ["Sort", "Union Find"], "upvotes": "251", "downvotes": "6"}, {"id": 1696, "name": "Jump Game VI", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/jump-game-vi", "submissions": 22005, "accepted_subsmissions": 11645, "group": 2, "topics": ["Dequeue"], "upvotes": "317", "downvotes": "20"}, {"id": 1695, "name": "Maximum Erasure Value", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/maximum-erasure-value", "submissions": 22118, "accepted_subsmissions": 10952, "group": 2, "topics": ["Two Pointers"], "upvotes": "202", "downvotes": "7"}, {"id": 1694, "name": "Reformat Phone Number", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/reformat-phone-number", "submissions": 20120, "accepted_subsmissions": 13217, "group": 2, "topics": ["String"], "upvotes": "93", "downvotes": "89"}, {"id": 1690, "name": "Stone Game VII", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/stone-game-vii", "submissions": 13837, "accepted_subsmissions": 6696, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "199", "downvotes": "71"}, {"id": 1689, "name": "Partitioning Into Minimum Number Of Deci-Binary Numbers", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/partitioning-into-minimum-number-of-deci-binary-numbers", "submissions": 20964, "accepted_subsmissions": 18269, "group": 2, "topics": ["Greedy"], "upvotes": "155", "downvotes": "149"}, {"id": 1688, "name": "Count of Matches in Tournament", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/count-of-matches-in-tournament", "submissions": 35254, "accepted_subsmissions": 28745, "group": 2, "topics": ["Backtracking"], "upvotes": "228", "downvotes": "52"}, {"id": 1703, "name": "Minimum Adjacent Swaps for K Consecutive Ones", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/minimum-adjacent-swaps-for-k-consecutive-ones", "submissions": 6405, "accepted_subsmissions": 2544, "group": 2, "topics": ["Stack"], "upvotes": "170", "downvotes": "5"}, {"id": 1702, "name": "Maximum Binary String After Change", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/maximum-binary-string-after-change", "submissions": 12436, "accepted_subsmissions": 7453, "group": 2, "topics": ["Greedy"], "upvotes": "184", "downvotes": "22"}, {"id": 1701, "name": "Average Waiting Time", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/average-waiting-time", "submissions": 16020, "accepted_subsmissions": 9851, "group": 2, "topics": ["Array"], "upvotes": "141", "downvotes": "16"}, {"id": 1700, "name": "Number of Students Unable to Eat Lunch", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/number-of-students-unable-to-eat-lunch", "submissions": 18158, "accepted_subsmissions": 12372, "group": 2, "topics": ["Array"], "upvotes": "209", "downvotes": "18"}, {"id": 1680, "name": "Concatenation of Consecutive Binary Numbers", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/concatenation-of-consecutive-binary-numbers", "submissions": 52151, "accepted_subsmissions": 27268, "group": 2, "topics": ["Math"], "upvotes": "230", "downvotes": "165"}, {"id": 1681, "name": "Minimum Incompatibility", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/minimum-incompatibility", "submissions": 11928, "accepted_subsmissions": 4252, "group": 2, "topics": ["Backtracking", "Greedy"], "upvotes": "104", "downvotes": "77"}, {"id": 1679, "name": "Max Number of K-Sum Pairs", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/max-number-of-k-sum-pairs", "submissions": 65805, "accepted_subsmissions": 35508, "group": 2, "topics": ["Hash Table"], "upvotes": "379", "downvotes": "16"}, {"id": 1678, "name": "Goal Parser Interpretation", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/goal-parser-interpretation", "submissions": 45766, "accepted_subsmissions": 39081, "group": 2, "topics": ["String"], "upvotes": "206", "downvotes": "26"}, {"id": 1675, "name": "Minimize Deviation in Array", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/minimize-deviation-in-array", "submissions": 32087, "accepted_subsmissions": 15511, "group": 2, "topics": ["Heap", "Ordered Map"], "upvotes": "396", "downvotes": "18"}, {"id": 1674, "name": "Minimum Moves to Make Array Complementary", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/minimum-moves-to-make-array-complementary", "submissions": 10815, "accepted_subsmissions": 3779, "group": 2, "topics": ["Greedy"], "upvotes": "257", "downvotes": "35"}, {"id": 1673, "name": "Find the Most Competitive Subsequence", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/find-the-most-competitive-subsequence", "submissions": 62607, "accepted_subsmissions": 28440, "group": 2, "topics": ["Stack", "Heap", "Greedy", "Queue"], "upvotes": "679", "downvotes": "41"}, {"id": 1672, "name": "Richest Customer Wealth", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/richest-customer-wealth", "submissions": 91645, "accepted_subsmissions": 80870, "group": 2, "topics": ["Array"], "upvotes": "372", "downvotes": "81"}, {"id": 1687, "name": "Delivering Boxes from Storage to Ports", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/delivering-boxes-from-storage-to-ports", "submissions": 5697, "accepted_subsmissions": 1993, "group": 2, "topics": ["Two Pointers", "Dynamic Programming", "Segment Tree", "Dequeue"], "upvotes": "119", "downvotes": "11"}, {"id": 1686, "name": "Stone Game VI", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/stone-game-vi", "submissions": 10283, "accepted_subsmissions": 5095, "group": 2, "topics": ["Greedy"], "upvotes": "208", "downvotes": "11"}, {"id": 1685, "name": "Sum of Absolute Differences in a Sorted Array", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/sum-of-absolute-differences-in-a-sorted-array", "submissions": 14721, "accepted_subsmissions": 9243, "group": 2, "topics": ["Math", "Greedy"], "upvotes": "269", "downvotes": "7"}, {"id": 1684, "name": "Count the Number of Consistent Strings", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/count-the-number-of-consistent-strings", "submissions": 37798, "accepted_subsmissions": 31079, "group": 2, "topics": ["String"], "upvotes": "233", "downvotes": "17"}, {"id": 1665, "name": "Minimum Initial Energy to Finish Tasks", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/minimum-initial-energy-to-finish-tasks", "submissions": 13387, "accepted_subsmissions": 8816, "group": 2, "topics": ["Greedy"], "upvotes": "196", "downvotes": "23"}, {"id": 1664, "name": "Ways to Make a Fair Array", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/ways-to-make-a-fair-array", "submissions": 19559, "accepted_subsmissions": 12141, "group": 2, "topics": ["Dynamic Programming", "Greedy"], "upvotes": "367", "downvotes": "8"}, {"id": 1663, "name": "Smallest String With A Given Numeric Value", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/smallest-string-with-a-given-numeric-value", "submissions": 47326, "accepted_subsmissions": 30437, "group": 2, "topics": ["Greedy"], "upvotes": "377", "downvotes": "9"}, {"id": 1662, "name": "Check If Two String Arrays are Equivalent", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/check-if-two-string-arrays-are-equivalent", "submissions": 86179, "accepted_subsmissions": 71378, "group": 2, "topics": ["String"], "upvotes": "310", "downvotes": "76"}, {"id": 1659, "name": "Maximize Grid Happiness", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/maximize-grid-happiness", "submissions": 6950, "accepted_subsmissions": 2468, "group": 2, "topics": ["Dynamic Programming", "Backtracking"], "upvotes": "120", "downvotes": "39"}, {"id": 1657, "name": "Determine if Two Strings Are Close", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/determine-if-two-strings-are-close", "submissions": 56043, "accepted_subsmissions": 31018, "group": 2, "topics": ["Greedy"], "upvotes": "403", "downvotes": "26"}, {"id": 1658, "name": "Minimum Operations to Reduce X to Zero", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/minimum-operations-to-reduce-x-to-zero", "submissions": 89455, "accepted_subsmissions": 29837, "group": 2, "topics": ["Two Pointers", "Binary Search", "Greedy", "Sliding Window"], "upvotes": "745", "downvotes": "17"}, {"id": 1656, "name": "Design an Ordered Stream", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/design-an-ordered-stream", "submissions": 18223, "accepted_subsmissions": 14939, "group": 2, "topics": ["Array", "Design"], "upvotes": "77", "downvotes": "571"}, {"id": 1649, "name": "Create Sorted Array through Instructions", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/create-sorted-array-through-instructions", "submissions": 45986, "accepted_subsmissions": 16723, "group": 2, "topics": ["Binary Search", "Binary Indexed Tree", "Segment Tree", "Ordered Map"], "upvotes": "332", "downvotes": "49"}, {"id": 1648, "name": "Sell Diminishing-Valued Colored Balls", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/sell-diminishing-valued-colored-balls", "submissions": 23574, "accepted_subsmissions": 7212, "group": 2, "topics": ["Math", "Greedy", "Sort"], "upvotes": "218", "downvotes": "58"}, {"id": 1647, "name": "Minimum Deletions to Make Character Frequencies Unique", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/minimum-deletions-to-make-character-frequencies-unique", "submissions": 33276, "accepted_subsmissions": 18186, "group": 2, "topics": ["Greedy", "Sort"], "upvotes": "281", "downvotes": "10"}, {"id": 1646, "name": "Get Maximum in Generated Array", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/get-maximum-in-generated-array", "submissions": 60263, "accepted_subsmissions": 32141, "group": 2, "topics": ["Array"], "upvotes": "144", "downvotes": "224"}, {"id": 1670, "name": "Design Front Middle Back Queue", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/design-front-middle-back-queue", "submissions": 12105, "accepted_subsmissions": 6555, "group": 2, "topics": ["Linked List", "Design", "Dequeue"], "upvotes": "162", "downvotes": "37"}, {"id": 1671, "name": "Minimum Number of Removals to Make Mountain Array", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/minimum-number-of-removals-to-make-mountain-array", "submissions": 11062, "accepted_subsmissions": 5055, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "242", "downvotes": "4"}, {"id": 1669, "name": "Merge In Between Linked Lists", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/merge-in-between-linked-lists", "submissions": 21756, "accepted_subsmissions": 16563, "group": 2, "topics": ["Linked List"], "upvotes": "254", "downvotes": "44"}, {"id": 1668, "name": "Maximum Repeating Substring", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/maximum-repeating-substring", "submissions": 26024, "accepted_subsmissions": 10089, "group": 2, "topics": ["String"], "upvotes": "127", "downvotes": "36"}, {"id": 1642, "name": "Furthest Building You Can Reach", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/furthest-building-you-can-reach", "submissions": 28326, "accepted_subsmissions": 14246, "group": 2, "topics": ["Binary Search", "Heap"], "upvotes": "456", "downvotes": "29"}, {"id": 1641, "name": "Count Sorted Vowel Strings", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/count-sorted-vowel-strings", "submissions": 58538, "accepted_subsmissions": 44612, "group": 2, "topics": ["Math", "Dynamic Programming", "Backtracking"], "upvotes": "783", "downvotes": "22"}, {"id": 1640, "name": "Check Array Formation Through Concatenation", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/check-array-formation-through-concatenation", "submissions": 92568, "accepted_subsmissions": 55483, "group": 2, "topics": ["Array", "Hash Table", "Sort"], "upvotes": "438", "downvotes": "86"}, {"id": 1655, "name": "Distribute Repeating Integers", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/distribute-repeating-integers", "submissions": 10525, "accepted_subsmissions": 4205, "group": 2, "topics": ["Dynamic Programming", "Backtracking"], "upvotes": "105", "downvotes": "11"}, {"id": 1654, "name": "Minimum Jumps to Reach Home", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/minimum-jumps-to-reach-home", "submissions": 27231, "accepted_subsmissions": 6964, "group": 2, "topics": ["Dynamic Programming", "Breadth-first Search"], "upvotes": "221", "downvotes": "61"}, {"id": 1653, "name": "Minimum Deletions to Make String Balanced", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/minimum-deletions-to-make-string-balanced", "submissions": 14299, "accepted_subsmissions": 7352, "group": 2, "topics": ["String", "Greedy"], "upvotes": "269", "downvotes": "7"}, {"id": 1652, "name": "Defuse the Bomb", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/defuse-the-bomb", "submissions": 19472, "accepted_subsmissions": 12167, "group": 2, "topics": ["Array"], "upvotes": "182", "downvotes": "29"}, {"id": 1631, "name": "Path With Minimum Effort", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/path-with-minimum-effort", "submissions": 67672, "accepted_subsmissions": 33868, "group": 2, "topics": ["Binary Search", "Depth-first Search", "Union Find", "Graph"], "upvotes": "937", "downvotes": "44"}, {"id": 1630, "name": "Arithmetic Subarrays", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/arithmetic-subarrays", "submissions": 18738, "accepted_subsmissions": 14519, "group": 2, "topics": ["Sort"], "upvotes": "175", "downvotes": "27"}, {"id": 1629, "name": "Slowest Key", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/slowest-key", "submissions": 42160, "accepted_subsmissions": 24937, "group": 2, "topics": ["Array"], "upvotes": "169", "downvotes": "28"}, {"id": 1626, "name": "Best Team With No Conflicts", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/best-team-with-no-conflicts", "submissions": 25944, "accepted_subsmissions": 9893, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "385", "downvotes": "18"}, {"id": 1625, "name": "Lexicographically Smallest String After Applying Operations", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/lexicographically-smallest-string-after-applying-operations", "submissions": 10738, "accepted_subsmissions": 6899, "group": 2, "topics": ["Depth-first Search", "Breadth-first Search"], "upvotes": "131", "downvotes": "178"}, {"id": 1624, "name": "Largest Substring Between Two Equal Characters", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/largest-substring-between-two-equal-characters", "submissions": 30371, "accepted_subsmissions": 17838, "group": 2, "topics": ["String"], "upvotes": "190", "downvotes": "12"}, {"id": 1639, "name": "Number of Ways to Form a Target String Given a Dictionary", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/number-of-ways-to-form-a-target-string-given-a-dictionary", "submissions": 9385, "accepted_subsmissions": 3731, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "118", "downvotes": "6"}, {"id": 1638, "name": "Count Substrings That Differ by One Character", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/count-substrings-that-differ-by-one-character", "submissions": 10041, "accepted_subsmissions": 6983, "group": 2, "topics": ["Hash Table", "String", "Trie", "Rolling Hash"], "upvotes": "174", "downvotes": "100"}, {"id": 1637, "name": "Widest Vertical Area Between Two Points Containing No Points", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/widest-vertical-area-between-two-points-containing-no-points", "submissions": 16151, "accepted_subsmissions": 13499, "group": 2, "topics": ["Sort"], "upvotes": "66", "downvotes": "205"}, {"id": 1636, "name": "Sort Array by Increasing Frequency", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/sort-array-by-increasing-frequency", "submissions": 27732, "accepted_subsmissions": 18546, "group": 2, "topics": ["Array", "Sort"], "upvotes": "337", "downvotes": "16"}, {"id": 1617, "name": "Count Subtrees With Max Distance Between Cities", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/count-subtrees-with-max-distance-between-cities", "submissions": 6592, "accepted_subsmissions": 4164, "group": 2, "topics": ["Backtracking"], "upvotes": "150", "downvotes": "23"}, {"id": 1616, "name": "Split Two Strings to Make Palindrome", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/split-two-strings-to-make-palindrome", "submissions": 34679, "accepted_subsmissions": 12535, "group": 2, "topics": ["Two Pointers", "String", "Greedy"], "upvotes": "273", "downvotes": "154"}, {"id": 1615, "name": "Maximal Network Rank", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/maximal-network-rank", "submissions": 25602, "accepted_subsmissions": 13397, "group": 2, "topics": ["Graph"], "upvotes": "198", "downvotes": "39"}, {"id": 1614, "name": "Maximum Nesting Depth of the Parentheses", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/maximum-nesting-depth-of-the-parentheses", "submissions": 39487, "accepted_subsmissions": 32691, "group": 2, "topics": ["String"], "upvotes": "271", "downvotes": "62"}, {"id": 1610, "name": "Maximum Number of Visible Points", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/maximum-number-of-visible-points", "submissions": 21497, "accepted_subsmissions": 6430, "group": 2, "topics": ["Two Pointers", "Geometry"], "upvotes": "133", "downvotes": "203"}, {"id": 1611, "name": "Minimum One Bit Operations to Make Integers Zero", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/minimum-one-bit-operations-to-make-integers-zero", "submissions": 6326, "accepted_subsmissions": 3616, "group": 2, "topics": ["Dynamic Programming", "Bit Manipulation"], "upvotes": "128", "downvotes": "94"}, {"id": 1609, "name": "Even Odd Tree", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/even-odd-tree", "submissions": 31297, "accepted_subsmissions": 16451, "group": 2, "topics": ["Tree"], "upvotes": "255", "downvotes": "17"}, {"id": 1608, "name": "Special Array With X Elements Greater Than or Equal X", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/special-array-with-x-elements-greater-than-or-equal-x", "submissions": 29260, "accepted_subsmissions": 17955, "group": 2, "topics": ["Array"], "upvotes": "222", "downvotes": "41"}, {"id": 1622, "name": "Fancy Sequence", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/fancy-sequence", "submissions": 23006, "accepted_subsmissions": 3463, "group": 2, "topics": ["Math", "Design"], "upvotes": "156", "downvotes": "47"}, {"id": 1728, "name": "Cat and Mouse II", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/cat-and-mouse-ii", "submissions": 7044, "accepted_subsmissions": 2894, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "77", "downvotes": "18"}, {"id": 1620, "name": "Coordinate With Maximum Network Quality", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/coordinate-with-maximum-network-quality", "submissions": 13074, "accepted_subsmissions": 4850, "group": 2, "topics": ["Greedy"], "upvotes": "43", "downvotes": "143"}, {"id": 1621, "name": "Number of Sets of K Non-Overlapping Line Segments", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/number-of-sets-of-k-non-overlapping-line-segments", "submissions": 10069, "accepted_subsmissions": 4153, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "181", "downvotes": "21"}, {"id": 1601, "name": "Maximum Number of Achievable Transfer Requests", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/maximum-number-of-achievable-transfer-requests", "submissions": 11579, "accepted_subsmissions": 5532, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "167", "downvotes": "21"}, {"id": 1600, "name": "Throne Inheritance", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/throne-inheritance", "submissions": 12796, "accepted_subsmissions": 7737, "group": 2, "topics": ["Tree", "Design"], "upvotes": "102", "downvotes": "160"}, {"id": 1599, "name": "Maximum Profit of Operating a Centennial Wheel", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/maximum-profit-of-operating-a-centennial-wheel", "submissions": 18580, "accepted_subsmissions": 8119, "group": 2, "topics": ["Greedy"], "upvotes": "49", "downvotes": "178"}, {"id": 1598, "name": "Crawler Log Folder", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/crawler-log-folder", "submissions": 30856, "accepted_subsmissions": 19726, "group": 2, "topics": ["Stack"], "upvotes": "186", "downvotes": "19"}, {"id": 1595, "name": "Minimum Cost to Connect Two Groups of Points", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/minimum-cost-to-connect-two-groups-of-points", "submissions": 9741, "accepted_subsmissions": 4214, "group": 2, "topics": ["Dynamic Programming", "Graph"], "upvotes": "199", "downvotes": "8"}, {"id": 1594, "name": "Maximum Non Negative Product in a Matrix", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/maximum-non-negative-product-in-a-matrix", "submissions": 33440, "accepted_subsmissions": 10634, "group": 2, "topics": ["Dynamic Programming", "Greedy"], "upvotes": "293", "downvotes": "17"}, {"id": 1593, "name": "Split a String Into the Max Number of Unique Substrings", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/split-a-string-into-the-max-number-of-unique-substrings", "submissions": 23731, "accepted_subsmissions": 11711, "group": 2, "topics": ["Backtracking"], "upvotes": "289", "downvotes": "11"}, {"id": 1592, "name": "Rearrange Spaces Between Words", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/rearrange-spaces-between-words", "submissions": 42128, "accepted_subsmissions": 18437, "group": 2, "topics": ["String"], "upvotes": "120", "downvotes": "126"}, {"id": 1605, "name": "Find Valid Matrix Given Row and Column Sums", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/find-valid-matrix-given-row-and-column-sums", "submissions": 13857, "accepted_subsmissions": 10699, "group": 2, "topics": ["Greedy"], "upvotes": "389", "downvotes": "16"}, {"id": 1606, "name": "Find Servers That Handled Most Number of Requests", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/find-servers-that-handled-most-number-of-requests", "submissions": 10212, "accepted_subsmissions": 3802, "group": 2, "topics": ["Ordered Map"], "upvotes": "190", "downvotes": "7"}, {"id": 1604, "name": "Alert Using Same Key-Card Three or More Times in a One Hour Period", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/alert-using-same-key-card-three-or-more-times-in-a-one-hour-period", "submissions": 16708, "accepted_subsmissions": 7126, "group": 2, "topics": ["String", "Ordered Map"], "upvotes": "79", "downvotes": "146"}, {"id": 1603, "name": "Design Parking System", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/design-parking-system", "submissions": 52778, "accepted_subsmissions": 45538, "group": 2, "topics": ["Design"], "upvotes": "262", "downvotes": "106"}, {"id": 1585, "name": "Check If String Is Transformable With Substring Sort Operations", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/check-if-string-is-transformable-with-substring-sort-operations", "submissions": 9529, "accepted_subsmissions": 4604, "group": 2, "topics": ["String", "Greedy"], "upvotes": "230", "downvotes": "4"}, {"id": 1584, "name": "Min Cost to Connect All Points", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/min-cost-to-connect-all-points", "submissions": 26530, "accepted_subsmissions": 13887, "group": 2, "topics": ["Union Find"], "upvotes": "388", "downvotes": "25"}, {"id": 1583, "name": "Count Unhappy Friends", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/count-unhappy-friends", "submissions": 18688, "accepted_subsmissions": 10195, "group": 2, "topics": ["Array"], "upvotes": "98", "downvotes": "376"}, {"id": 1582, "name": "Special Positions in a Binary Matrix", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/special-positions-in-a-binary-matrix", "submissions": 30999, "accepted_subsmissions": 19947, "group": 2, "topics": ["Array"], "upvotes": "215", "downvotes": "7"}, {"id": 1579, "name": "Remove Max Number of Edges to Keep Graph Fully Traversable", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/remove-max-number-of-edges-to-keep-graph-fully-traversable", "submissions": 14049, "accepted_subsmissions": 6492, "group": 2, "topics": ["Union Find"], "upvotes": "300", "downvotes": "3"}, {"id": 1578, "name": "Minimum Deletion Cost to Avoid Repeating Letters", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/minimum-deletion-cost-to-avoid-repeating-letters", "submissions": 36724, "accepted_subsmissions": 22218, "group": 2, "topics": ["Greedy"], "upvotes": "334", "downvotes": "19"}, {"id": 1577, "name": "Number of Ways Where Square of Number Is Equal to Product of Two Numbers", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/number-of-ways-where-square-of-number-is-equal-to-product-of-two-numbers", "submissions": 29820, "accepted_subsmissions": 11171, "group": 2, "topics": ["Hash Table", "Math"], "upvotes": "133", "downvotes": "33"}, {"id": 1576, "name": "Replace All ?'s to Avoid Consecutive Repeating Characters", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/replace-all-s-to-avoid-consecutive-repeating-characters", "submissions": 47107, "accepted_subsmissions": 22955, "group": 2, "topics": ["String"], "upvotes": "183", "downvotes": "95"}, {"id": 1591, "name": "Strange Printer II", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/strange-printer-ii", "submissions": 6024, "accepted_subsmissions": 3315, "group": 2, "topics": ["Greedy"], "upvotes": "174", "downvotes": "5"}, {"id": 1589, "name": "Maximum Sum Obtained of Any Permutation", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/maximum-sum-obtained-of-any-permutation", "submissions": 21573, "accepted_subsmissions": 7514, "group": 2, "topics": ["Greedy"], "upvotes": "279", "downvotes": "19"}, {"id": 1590, "name": "Make Sum Divisible by P", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/make-sum-divisible-by-p", "submissions": 31433, "accepted_subsmissions": 8466, "group": 2, "topics": ["Array", "Hash Table", "Math", "Binary Search"], "upvotes": "426", "downvotes": "19"}, {"id": 1588, "name": "Sum of All Odd Length Subarrays", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/sum-of-all-odd-length-subarrays", "submissions": 45644, "accepted_subsmissions": 37238, "group": 2, "topics": ["Array"], "upvotes": "612", "downvotes": "73"}, {"id": 1569, "name": "Number of Ways to Reorder Array to Get Same BST", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/number-of-ways-to-reorder-array-to-get-same-bst", "submissions": 10330, "accepted_subsmissions": 5167, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "174", "downvotes": "25"}, {"id": 1568, "name": "Minimum Number of Days to Disconnect Island", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/minimum-number-of-days-to-disconnect-island", "submissions": 11197, "accepted_subsmissions": 5618, "group": 2, "topics": ["Greedy"], "upvotes": "175", "downvotes": "96"}, {"id": 1567, "name": "Maximum Length of Subarray With Positive Product", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/maximum-length-of-subarray-with-positive-product", "submissions": 33994, "accepted_subsmissions": 12484, "group": 2, "topics": ["Greedy"], "upvotes": "365", "downvotes": "6"}, {"id": 1566, "name": "Detect Pattern of Length M Repeated K or More Times", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/detect-pattern-of-length-m-repeated-k-or-more-times", "submissions": 38300, "accepted_subsmissions": 16277, "group": 2, "topics": ["Array"], "upvotes": "280", "downvotes": "48"}, {"id": 1563, "name": "Stone Game V", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/stone-game-v", "submissions": 20774, "accepted_subsmissions": 8291, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "194", "downvotes": "45"}, {"id": 1562, "name": "Find Latest Group of Size M", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/find-latest-group-of-size-m", "submissions": 24149, "accepted_subsmissions": 9543, "group": 2, "topics": ["Binary Search"], "upvotes": "309", "downvotes": "68"}, {"id": 1561, "name": "Maximum Number of Coins You Can Get", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/maximum-number-of-coins-you-can-get", "submissions": 30282, "accepted_subsmissions": 23465, "group": 2, "topics": ["Sort"], "upvotes": "221", "downvotes": "49"}, {"id": 1560, "name": "Most Visited Sector in  a Circular Track", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/most-visited-sector-in-a-circular-track", "submissions": 25661, "accepted_subsmissions": 14617, "group": 2, "topics": ["Array"], "upvotes": "117", "downvotes": "290"}, {"id": 1575, "name": "Count All Possible Routes", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/count-all-possible-routes", "submissions": 10799, "accepted_subsmissions": 6184, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "204", "downvotes": "10"}, {"id": 1574, "name": "Shortest Subarray to be Removed to Make Array Sorted", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/shortest-subarray-to-be-removed-to-make-array-sorted", "submissions": 29595, "accepted_subsmissions": 9924, "group": 2, "topics": ["Array", "Binary Search"], "upvotes": "502", "downvotes": "17"}, {"id": 1573, "name": "Number of Ways to Split a String", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/number-of-ways-to-split-a-string", "submissions": 37653, "accepted_subsmissions": 11773, "group": 2, "topics": ["String"], "upvotes": "245", "downvotes": "41"}, {"id": 1572, "name": "Matrix Diagonal Sum", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/matrix-diagonal-sum", "submissions": 57418, "accepted_subsmissions": 44696, "group": 2, "topics": ["Array"], "upvotes": "387", "downvotes": "8"}, {"id": 1553, "name": "Minimum Number of Days to Eat N Oranges", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/minimum-number-of-days-to-eat-n-oranges", "submissions": 46875, "accepted_subsmissions": 13942, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "393", "downvotes": "32"}, {"id": 1552, "name": "Magnetic Force Between Two Balls", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/magnetic-force-between-two-balls", "submissions": 25104, "accepted_subsmissions": 12288, "group": 2, "topics": ["Array", "Binary Search"], "upvotes": "479", "downvotes": "50"}, {"id": 1551, "name": "Minimum Operations to Make Array Equal", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/minimum-operations-to-make-array-equal", "submissions": 29756, "accepted_subsmissions": 23170, "group": 2, "topics": ["Math"], "upvotes": "237", "downvotes": "49"}, {"id": 1547, "name": "Minimum Cost to Cut a Stick", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/minimum-cost-to-cut-a-stick", "submissions": 19425, "accepted_subsmissions": 10256, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "391", "downvotes": "8"}, {"id": 1542, "name": "Find Longest Awesome Substring", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/find-longest-awesome-substring", "submissions": 14838, "accepted_subsmissions": 5437, "group": 2, "topics": ["String", "Bit Manipulation"], "upvotes": "310", "downvotes": "7"}, {"id": 1545, "name": "Find Kth Bit in Nth Binary String", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/find-kth-bit-in-nth-binary-string", "submissions": 25690, "accepted_subsmissions": 14769, "group": 2, "topics": ["String"], "upvotes": "205", "downvotes": "18"}, {"id": 1544, "name": "Make The String Great", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/make-the-string-great", "submissions": 51523, "accepted_subsmissions": 28595, "group": 2, "topics": ["String", "Stack"], "upvotes": "368", "downvotes": "38"}, {"id": 1559, "name": "Detect Cycles in 2D Grid", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/detect-cycles-in-2d-grid", "submissions": 20944, "accepted_subsmissions": 9337, "group": 2, "topics": ["Depth-first Search"], "upvotes": "255", "downvotes": "9"}, {"id": 1558, "name": "Minimum Numbers of Function Calls to Make Target Array", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/minimum-numbers-of-function-calls-to-make-target-array", "submissions": 16687, "accepted_subsmissions": 10579, "group": 2, "topics": ["Greedy"], "upvotes": "241", "downvotes": "15"}, {"id": 1557, "name": "Minimum Number of Vertices to Reach All Nodes", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/minimum-number-of-vertices-to-reach-all-nodes", "submissions": 30489, "accepted_subsmissions": 23023, "group": 2, "topics": ["Graph"], "upvotes": "467", "downvotes": "36"}, {"id": 1556, "name": "Thousand Separator", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/thousand-separator", "submissions": 36266, "accepted_subsmissions": 20836, "group": 2, "topics": ["String"], "upvotes": "182", "downvotes": "7"}, {"id": 1537, "name": "Get the Maximum Score", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/get-the-maximum-score", "submissions": 26188, "accepted_subsmissions": 9530, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "313", "downvotes": "22"}, {"id": 1536, "name": "Minimum Swaps to Arrange a Binary Grid", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/minimum-swaps-to-arrange-a-binary-grid", "submissions": 19395, "accepted_subsmissions": 8432, "group": 2, "topics": ["Greedy"], "upvotes": "269", "downvotes": "52"}, {"id": 1535, "name": "Find the Winner of an Array Game", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/find-the-winner-of-an-array-game", "submissions": 38793, "accepted_subsmissions": 18467, "group": 2, "topics": ["Array"], "upvotes": "305", "downvotes": "22"}, {"id": 1534, "name": "Count Good Triplets", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/count-good-triplets", "submissions": 55541, "accepted_subsmissions": 44596, "group": 2, "topics": ["Array"], "upvotes": "195", "downvotes": "542"}, {"id": 1530, "name": "Number of Good Leaf Nodes Pairs", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/number-of-good-leaf-nodes-pairs", "submissions": 27364, "accepted_subsmissions": 15389, "group": 2, "topics": ["Tree", "Depth-first Search"], "upvotes": "616", "downvotes": "11"}, {"id": 1529, "name": "Bulb Switcher IV", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/bulb-switcher-iv", "submissions": 29349, "accepted_subsmissions": 20793, "group": 2, "topics": ["String"], "upvotes": "347", "downvotes": "18"}, {"id": 1528, "name": "Shuffle String", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/shuffle-string", "submissions": 109855, "accepted_subsmissions": 94078, "group": 2, "topics": ["Sort"], "upvotes": "496", "downvotes": "130"}, {"id": 1546, "name": "Maximum Number of Non-Overlapping Subarrays With Sum Equals Target", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/maximum-number-of-non-overlapping-subarrays-with-sum-equals-target", "submissions": 29761, "accepted_subsmissions": 13032, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "447", "downvotes": "7"}, {"id": 1541, "name": "Minimum Insertions to Balance a Parentheses String", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/minimum-insertions-to-balance-a-parentheses-string", "submissions": 25418, "accepted_subsmissions": 10884, "group": 2, "topics": ["String", "Stack"], "upvotes": "276", "downvotes": "67"}, {"id": 1540, "name": "Can Convert String in K Moves", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/can-convert-string-in-k-moves", "submissions": 31149, "accepted_subsmissions": 9650, "group": 2, "topics": ["String", "Greedy"], "upvotes": "193", "downvotes": "155"}, {"id": 1539, "name": "Kth Missing Positive Number", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/kth-missing-positive-number", "submissions": 122390, "accepted_subsmissions": 67332, "group": 2, "topics": ["Array", "Hash Table"], "upvotes": "828", "downvotes": "40"}, {"id": 1521, "name": "Find a Value of a Mysterious Function Closest to Target", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/find-a-value-of-a-mysterious-function-closest-to-target", "submissions": 13506, "accepted_subsmissions": 5976, "group": 2, "topics": ["Binary Search", "Bit Manipulation", "Segment Tree"], "upvotes": "194", "downvotes": "8"}, {"id": 1520, "name": "Maximum Number of Non-Overlapping Substrings", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/maximum-number-of-non-overlapping-substrings", "submissions": 21704, "accepted_subsmissions": 7886, "group": 2, "topics": ["Greedy"], "upvotes": "334", "downvotes": "44"}, {"id": 1519, "name": "Number of Nodes in the Sub-Tree With the Same Label", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/number-of-nodes-in-the-sub-tree-with-the-same-label", "submissions": 31681, "accepted_subsmissions": 11744, "group": 2, "topics": ["Depth-first Search", "Breadth-first Search"], "upvotes": "225", "downvotes": "239"}, {"id": 1518, "name": "Water Bottles", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/water-bottles", "submissions": 52652, "accepted_subsmissions": 31891, "group": 2, "topics": ["Greedy"], "upvotes": "393", "downvotes": "39"}, {"id": 1515, "name": "Best Position for a Service Centre", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/best-position-for-a-service-centre", "submissions": 15860, "accepted_subsmissions": 6037, "group": 2, "topics": ["Geometry"], "upvotes": "106", "downvotes": "142"}, {"id": 1531, "name": "String Compression II", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/string-compression-ii", "submissions": 18098, "accepted_subsmissions": 6135, "group": 2, "topics": ["String", "Dynamic Programming"], "upvotes": "280", "downvotes": "29"}, {"id": 1513, "name": "Number of Substrings With Only 1s", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/number-of-substrings-with-only-1s", "submissions": 48076, "accepted_subsmissions": 20161, "group": 2, "topics": ["Math", "String"], "upvotes": "293", "downvotes": "13"}, {"id": 1512, "name": "Number of Good Pairs", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/number-of-good-pairs", "submissions": 166648, "accepted_subsmissions": 146117, "group": 2, "topics": ["Array", "Hash Table", "Math"], "upvotes": "982", "downvotes": "88"}, {"id": 1526, "name": "Minimum Number of Increments on Subarrays to Form a Target Array", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/minimum-number-of-increments-on-subarrays-to-form-a-target-array", "submissions": 12527, "accepted_subsmissions": 7518, "group": 2, "topics": ["Segment Tree"], "upvotes": "289", "downvotes": "17"}, {"id": 1525, "name": "Number of Good Ways to Split a String", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/number-of-good-ways-to-split-a-string", "submissions": 27432, "accepted_subsmissions": 18222, "group": 2, "topics": ["String", "Bit Manipulation"], "upvotes": "372", "downvotes": "11"}, {"id": 1524, "name": "Number of Sub-arrays With Odd Sum", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/number-of-sub-arrays-with-odd-sum", "submissions": 31225, "accepted_subsmissions": 12481, "group": 2, "topics": ["Array", "Math"], "upvotes": "339", "downvotes": "18"}, {"id": 1523, "name": "Count Odd Numbers in an Interval Range", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/count-odd-numbers-in-an-interval-range", "submissions": 38692, "accepted_subsmissions": 21090, "group": 2, "topics": ["Math"], "upvotes": "196", "downvotes": "22"}, {"id": 1505, "name": "Minimum Possible Integer After at Most K Adjacent Swaps On Digits", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/minimum-possible-integer-after-at-most-k-adjacent-swaps-on-digits", "submissions": 14912, "accepted_subsmissions": 5472, "group": 2, "topics": ["Greedy"], "upvotes": "207", "downvotes": "14"}, {"id": 1504, "name": "Count Submatrices With All Ones", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/count-submatrices-with-all-ones", "submissions": 33508, "accepted_subsmissions": 20393, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "794", "downvotes": "58"}, {"id": 1503, "name": "Last Moment Before All Ants Fall Out of a Plank", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/last-moment-before-all-ants-fall-out-of-a-plank", "submissions": 22193, "accepted_subsmissions": 11809, "group": 2, "topics": ["Array", "Brainteaser"], "upvotes": "216", "downvotes": "146"}, {"id": 1502, "name": "Can Make Arithmetic Progression From Sequence", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/can-make-arithmetic-progression-from-sequence", "submissions": 61071, "accepted_subsmissions": 43414, "group": 2, "topics": ["Array", "Sort"], "upvotes": "302", "downvotes": "23"}, {"id": 1499, "name": "Max Value of Equation", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/max-value-of-equation", "submissions": 21836, "accepted_subsmissions": 9803, "group": 2, "topics": ["Array", "Sliding Window"], "upvotes": "313", "downvotes": "12"}, {"id": 1498, "name": "Number of Subsequences That Satisfy the Given Sum Condition", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/number-of-subsequences-that-satisfy-the-given-sum-condition", "submissions": 40010, "accepted_subsmissions": 15413, "group": 2, "topics": ["Sort", "Sliding Window"], "upvotes": "513", "downvotes": "54"}, {"id": 1497, "name": "Check If Array Pairs Are Divisible by k", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/check-if-array-pairs-are-divisible-by-k", "submissions": 46649, "accepted_subsmissions": 18815, "group": 2, "topics": ["Array", "Math", "Greedy"], "upvotes": "420", "downvotes": "41"}, {"id": 1496, "name": "Path Crossing", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/path-crossing", "submissions": 42780, "accepted_subsmissions": 23625, "group": 2, "topics": ["String"], "upvotes": "274", "downvotes": "6"}, {"id": 1510, "name": "Stone Game IV", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/stone-game-iv", "submissions": 44343, "accepted_subsmissions": 26112, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "389", "downvotes": "25"}, {"id": 1509, "name": "Minimum Difference Between Largest and Smallest Value in Three Moves", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/minimum-difference-between-largest-and-smallest-value-in-three-moves", "submissions": 21166, "accepted_subsmissions": 11076, "group": 2, "topics": ["Array", "Sort"], "upvotes": "278", "downvotes": "33"}, {"id": 1508, "name": "Range Sum of Sorted Subarray Sums", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/range-sum-of-sorted-subarray-sums", "submissions": 26610, "accepted_subsmissions": 16174, "group": 2, "topics": ["Array", "Sort"], "upvotes": "279", "downvotes": "58"}, {"id": 1489, "name": "Find Critical and Pseudo-Critical Edges in Minimum Spanning Tree", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/find-critical-and-pseudo-critical-edges-in-minimum-spanning-tree", "submissions": 8584, "accepted_subsmissions": 4416, "group": 2, "topics": ["Depth-first Search", "Union Find"], "upvotes": "215", "downvotes": "32"}, {"id": 1488, "name": "Avoid Flood in The City", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/avoid-flood-in-the-city", "submissions": 60092, "accepted_subsmissions": 14740, "group": 2, "topics": ["Array", "Hash Table"], "upvotes": "529", "downvotes": "119"}, {"id": 1487, "name": "Making File Names Unique", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/making-file-names-unique", "submissions": 42835, "accepted_subsmissions": 13173, "group": 2, "topics": ["Hash Table", "String"], "upvotes": "208", "downvotes": "365"}, {"id": 1486, "name": "XOR Operation in an Array", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/xor-operation-in-an-array", "submissions": 91677, "accepted_subsmissions": 77087, "group": 2, "topics": ["Array", "Bit Manipulation"], "upvotes": "424", "downvotes": "194"}, {"id": 1482, "name": "Minimum Number of Days to Make m Bouquets", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/minimum-number-of-days-to-make-m-bouquets", "submissions": 37690, "accepted_subsmissions": 18986, "group": 2, "topics": ["Array", "Binary Search"], "upvotes": "778", "downvotes": "19"}, {"id": 1481, "name": "Least Number of Unique Integers after K Removals", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/least-number-of-unique-integers-after-k-removals", "submissions": 52903, "accepted_subsmissions": 29626, "group": 2, "topics": ["Array", "Sort"], "upvotes": "326", "downvotes": "36"}, {"id": 1480, "name": "Running Sum of 1d Array", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/running-sum-of-1d-array", "submissions": 300934, "accepted_subsmissions": 267480, "group": 2, "topics": ["Array"], "upvotes": "1081", "downvotes": "104"}, {"id": 1494, "name": "Parallel Courses II", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/parallel-courses-ii", "submissions": 19826, "accepted_subsmissions": 6177, "group": 2, "topics": ["Graph"], "upvotes": "337", "downvotes": "28"}, {"id": 1493, "name": "Longest Subarray of 1's After Deleting One Element", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/longest-subarray-of-1s-after-deleting-one-element", "submissions": 31885, "accepted_subsmissions": 18417, "group": 2, "topics": ["Array"], "upvotes": "349", "downvotes": "7"}, {"id": 1492, "name": "The kth Factor of n", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/the-kth-factor-of-n", "submissions": 69598, "accepted_subsmissions": 44053, "group": 2, "topics": ["Math"], "upvotes": "297", "downvotes": "121"}, {"id": 1491, "name": "Average Salary Excluding the Minimum and Maximum Salary", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/average-salary-excluding-the-minimum-and-maximum-salary", "submissions": 57496, "accepted_subsmissions": 39401, "group": 2, "topics": ["Array", "Sort"], "upvotes": "250", "downvotes": "48"}, {"id": 1473, "name": "Paint House III", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/paint-house-iii", "submissions": 17511, "accepted_subsmissions": 8487, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "324", "downvotes": "18"}, {"id": 1472, "name": "Design Browser History", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/design-browser-history", "submissions": 44716, "accepted_subsmissions": 31979, "group": 2, "topics": ["Design"], "upvotes": "428", "downvotes": "57"}, {"id": 1471, "name": "The k Strongest Values in an Array", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/the-k-strongest-values-in-an-array", "submissions": 35542, "accepted_subsmissions": 20767, "group": 2, "topics": ["Array", "Sort"], "upvotes": "230", "downvotes": "70"}, {"id": 1470, "name": "Shuffle the Array", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/shuffle-the-array", "submissions": 198922, "accepted_subsmissions": 175465, "group": 2, "topics": ["Array"], "upvotes": "1009", "downvotes": "120"}, {"id": 1467, "name": "Probability of a Two Boxes Having The Same Number of Distinct Balls", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/probability-of-a-two-boxes-having-the-same-number-of-distinct-balls", "submissions": 8006, "accepted_subsmissions": 4872, "group": 2, "topics": ["Math", "Backtracking"], "upvotes": "153", "downvotes": "116"}, {"id": 1466, "name": "Reorder Routes to Make All Paths Lead to the City Zero", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/reorder-routes-to-make-all-paths-lead-to-the-city-zero", "submissions": 42942, "accepted_subsmissions": 26543, "group": 2, "topics": ["Tree", "Depth-first Search"], "upvotes": "590", "downvotes": "15"}, {"id": 1465, "name": "Maximum Area of a Piece of Cake After Horizontal and Vertical Cuts", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/maximum-area-of-a-piece-of-cake-after-horizontal-and-vertical-cuts", "submissions": 64012, "accepted_subsmissions": 21285, "group": 2, "topics": ["Array"], "upvotes": "233", "downvotes": "98"}, {"id": 1464, "name": "Maximum Product of Two Elements in an Array", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/maximum-product-of-two-elements-in-an-array", "submissions": 95754, "accepted_subsmissions": 73874, "group": 2, "topics": ["Array"], "upvotes": "382", "downvotes": "79"}, {"id": 1477, "name": "Find Two Non-overlapping Sub-arrays Each With Target Sum", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/find-two-non-overlapping-sub-arrays-each-with-target-sum", "submissions": 64933, "accepted_subsmissions": 22488, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "691", "downvotes": "38"}, {"id": 1476, "name": "Subrectangle Queries", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/subrectangle-queries", "submissions": 42243, "accepted_subsmissions": 37260, "group": 2, "topics": ["Array"], "upvotes": "173", "downvotes": "477"}, {"id": 1478, "name": "Allocate Mailboxes", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/allocate-mailboxes", "submissions": 14642, "accepted_subsmissions": 7910, "group": 2, "topics": ["Math", "Dynamic Programming"], "upvotes": "409", "downvotes": "7"}, {"id": 1475, "name": "Final Prices With a Special Discount in a Shop", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/final-prices-with-a-special-discount-in-a-shop", "submissions": 53005, "accepted_subsmissions": 39826, "group": 2, "topics": ["Array"], "upvotes": "415", "downvotes": "37"}, {"id": 1458, "name": "Max Dot Product of Two Subsequences", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/max-dot-product-of-two-subsequences", "submissions": 28330, "accepted_subsmissions": 12234, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "397", "downvotes": "10"}, {"id": 1457, "name": "Pseudo-Palindromic Paths in a Binary Tree", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/pseudo-palindromic-paths-in-a-binary-tree", "submissions": 55889, "accepted_subsmissions": 39389, "group": 2, "topics": ["Bit Manipulation", "Tree", "Depth-first Search"], "upvotes": "619", "downvotes": "21"}, {"id": 1456, "name": "Maximum Number of Vowels in a Substring of Given Length", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/maximum-number-of-vowels-in-a-substring-of-given-length", "submissions": 49404, "accepted_subsmissions": 27006, "group": 2, "topics": ["String", "Sliding Window"], "upvotes": "368", "downvotes": "24"}, {"id": 1455, "name": "Check If a Word Occurs As a Prefix of Any Word in a Sentence", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/check-if-a-word-occurs-as-a-prefix-of-any-word-in-a-sentence", "submissions": 50246, "accepted_subsmissions": 32654, "group": 2, "topics": ["String"], "upvotes": "273", "downvotes": "8"}, {"id": 1453, "name": "Maximum Number of Darts Inside of a Circular Dartboard", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/maximum-number-of-darts-inside-of-a-circular-dartboard", "submissions": 10800, "accepted_subsmissions": 3821, "group": 2, "topics": ["Geometry"], "upvotes": "85", "downvotes": "208"}, {"id": 1452, "name": "People Whose List of Favorite Companies Is Not a Subset of Another List", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/people-whose-list-of-favorite-companies-is-not-a-subset-of-another-list", "submissions": 26551, "accepted_subsmissions": 14609, "group": 2, "topics": ["String", "Sort"], "upvotes": "157", "downvotes": "158"}, {"id": 1451, "name": "Rearrange Words in a Sentence", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/rearrange-words-in-a-sentence", "submissions": 44868, "accepted_subsmissions": 26763, "group": 2, "topics": ["String", "Sort"], "upvotes": "263", "downvotes": "49"}, {"id": 1450, "name": "Number of Students Doing Homework at a Given Time", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/number-of-students-doing-homework-at-a-given-time", "submissions": 76300, "accepted_subsmissions": 58845, "group": 2, "topics": ["Array"], "upvotes": "339", "downvotes": "86"}, {"id": 1463, "name": "Cherry Pickup II", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/cherry-pickup-ii", "submissions": 37115, "accepted_subsmissions": 25611, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "718", "downvotes": "9"}, {"id": 1462, "name": "Course Schedule IV", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/course-schedule-iv", "submissions": 36394, "accepted_subsmissions": 16259, "group": 2, "topics": ["Graph"], "upvotes": "348", "downvotes": "16"}, {"id": 1461, "name": "Check If a String Contains All Binary Codes of Size K", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/check-if-a-string-contains-all-binary-codes-of-size-k", "submissions": 69701, "accepted_subsmissions": 37961, "group": 2, "topics": ["String", "Bit Manipulation"], "upvotes": "491", "downvotes": "59"}, {"id": 1460, "name": "Make Two Arrays Equal by Reversing Sub-arrays", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/make-two-arrays-equal-by-reversing-sub-arrays", "submissions": 65697, "accepted_subsmissions": 47366, "group": 2, "topics": ["Array"], "upvotes": "341", "downvotes": "74"}, {"id": 1444, "name": "Number of Ways of Cutting a Pizza", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/number-of-ways-of-cutting-a-pizza", "submissions": 15211, "accepted_subsmissions": 8192, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "297", "downvotes": "8"}, {"id": 1443, "name": "Minimum Time to Collect All Apples in a Tree", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/minimum-time-to-collect-all-apples-in-a-tree", "submissions": 32693, "accepted_subsmissions": 17846, "group": 2, "topics": ["Tree", "Depth-first Search"], "upvotes": "534", "downvotes": "58"}, {"id": 1442, "name": "Count Triplets That Can Form Two Arrays of Equal XOR", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/count-triplets-that-can-form-two-arrays-of-equal-xor", "submissions": 23640, "accepted_subsmissions": 16882, "group": 2, "topics": ["Array", "Math", "Bit Manipulation"], "upvotes": "490", "downvotes": "26"}, {"id": 1441, "name": "Build an Array With Stack Operations", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/build-an-array-with-stack-operations", "submissions": 53332, "accepted_subsmissions": 37517, "group": 2, "topics": ["Stack"], "upvotes": "246", "downvotes": "413"}, {"id": 1439, "name": "Find the Kth Smallest Sum of a Matrix With Sorted Rows", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/find-the-kth-smallest-sum-of-a-matrix-with-sorted-rows", "submissions": 24104, "accepted_subsmissions": 14494, "group": 2, "topics": ["Heap"], "upvotes": "469", "downvotes": "7"}, {"id": 1438, "name": "Longest Continuous Subarray With Absolute Diff Less Than or Equal to Limit", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/longest-continuous-subarray-with-absolute-diff-less-than-or-equal-to-limit", "submissions": 115044, "accepted_subsmissions": 51093, "group": 2, "topics": ["Array", "Sliding Window"], "upvotes": "1219", "downvotes": "60"}, {"id": 1437, "name": "Check If All 1's Are at Least Length K Places Away", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/check-if-all-1s-are-at-least-length-k-places-away", "submissions": 72613, "accepted_subsmissions": 45253, "group": 2, "topics": ["Array"], "upvotes": "252", "downvotes": "176"}, {"id": 1436, "name": "Destination City", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/destination-city", "submissions": 83042, "accepted_subsmissions": 64185, "group": 2, "topics": ["String"], "upvotes": "545", "downvotes": "36"}, {"id": 1449, "name": "Form Largest Integer With Digits That Add up to Target", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/form-largest-integer-with-digits-that-add-up-to-target", "submissions": 19925, "accepted_subsmissions": 8805, "group": 2, "topics": ["String", "Dynamic Programming"], "upvotes": "330", "downvotes": "5"}, {"id": 1448, "name": "Count Good Nodes in Binary Tree", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/count-good-nodes-in-binary-tree", "submissions": 47653, "accepted_subsmissions": 33796, "group": 2, "topics": ["Tree", "Depth-first Search"], "upvotes": "568", "downvotes": "29"}, {"id": 1447, "name": "Simplified Fractions", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/simplified-fractions", "submissions": 23634, "accepted_subsmissions": 14684, "group": 2, "topics": ["Math"], "upvotes": "136", "downvotes": "27"}, {"id": 1446, "name": "Consecutive Characters", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/consecutive-characters", "submissions": 106707, "accepted_subsmissions": 65189, "group": 2, "topics": ["String"], "upvotes": "491", "downvotes": "14"}, {"id": 1424, "name": "Diagonal Traverse II", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/diagonal-traverse-ii", "submissions": 52955, "accepted_subsmissions": 24395, "group": 2, "topics": ["Array", "Sort"], "upvotes": "475", "downvotes": "59"}, {"id": 1423, "name": "Maximum Points You Can Obtain from Cards", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/maximum-points-you-can-obtain-from-cards", "submissions": 103113, "accepted_subsmissions": 48184, "group": 2, "topics": ["Array", "Dynamic Programming", "Sliding Window"], "upvotes": "1156", "downvotes": "56"}, {"id": 1422, "name": "Maximum Score After Splitting a String", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/maximum-score-after-splitting-a-string", "submissions": 48114, "accepted_subsmissions": 27114, "group": 2, "topics": ["String"], "upvotes": "305", "downvotes": "17"}, {"id": 1420, "name": "Build Array Where You Can Find The Maximum Exactly K Comparisons", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/build-array-where-you-can-find-the-maximum-exactly-k-comparisons", "submissions": 11215, "accepted_subsmissions": 7186, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "271", "downvotes": "7"}, {"id": 1419, "name": "Minimum Number of Frogs Croaking", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/minimum-number-of-frogs-croaking", "submissions": 34061, "accepted_subsmissions": 16176, "group": 2, "topics": ["String"], "upvotes": "417", "downvotes": "29"}, {"id": 1418, "name": "Display Table of Food Orders in a Restaurant", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/display-table-of-food-orders-in-a-restaurant", "submissions": 19594, "accepted_subsmissions": 13523, "group": 2, "topics": ["Hash Table"], "upvotes": "112", "downvotes": "228"}, {"id": 1417, "name": "Reformat The String", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/reformat-the-string", "submissions": 50405, "accepted_subsmissions": 27886, "group": 2, "topics": ["String"], "upvotes": "229", "downvotes": "51"}, {"id": 1434, "name": "Number of Ways to Wear Different Hats to Each Other", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/number-of-ways-to-wear-different-hats-to-each-other", "submissions": 15271, "accepted_subsmissions": 6014, "group": 2, "topics": ["Dynamic Programming", "Bit Manipulation"], "upvotes": "378", "downvotes": "4"}, {"id": 1433, "name": "Check If a String Can Break Another String", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/check-if-a-string-can-break-another-string", "submissions": 30207, "accepted_subsmissions": 20333, "group": 2, "topics": ["String", "Greedy"], "upvotes": "264", "downvotes": "76"}, {"id": 1432, "name": "Max Difference You Can Get From Changing an Integer", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/max-difference-you-can-get-from-changing-an-integer", "submissions": 22964, "accepted_subsmissions": 9853, "group": 2, "topics": ["String"], "upvotes": "101", "downvotes": "135"}, {"id": 1431, "name": "Kids With the Greatest Number of Candies", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/kids-with-the-greatest-number-of-candies", "submissions": 212129, "accepted_subsmissions": 187223, "group": 2, "topics": ["Array"], "upvotes": "696", "downvotes": "165"}, {"id": 1411, "name": "Number of Ways to Paint N \u00d7 3 Grid", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/number-of-ways-to-paint-n-3-grid", "submissions": 24877, "accepted_subsmissions": 15046, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "428", "downvotes": "24"}, {"id": 1410, "name": "HTML Entity Parser", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/html-entity-parser", "submissions": 28161, "accepted_subsmissions": 15275, "group": 2, "topics": ["String", "Stack"], "upvotes": "87", "downvotes": "201"}, {"id": 1409, "name": "Queries on a Permutation With Key", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/queries-on-a-permutation-with-key", "submissions": 32046, "accepted_subsmissions": 26151, "group": 2, "topics": ["Array"], "upvotes": "183", "downvotes": "359"}, {"id": 1408, "name": "String Matching in an Array", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/string-matching-in-an-array", "submissions": 58074, "accepted_subsmissions": 36741, "group": 2, "topics": ["String"], "upvotes": "291", "downvotes": "56"}, {"id": 1406, "name": "Stone Game III", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/stone-game-iii", "submissions": 28296, "accepted_subsmissions": 16279, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "497", "downvotes": "8"}, {"id": 1404, "name": "Number of Steps to Reduce a Number in Binary Representation to One", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/number-of-steps-to-reduce-a-number-in-binary-representation-to-one", "submissions": 34437, "accepted_subsmissions": 17162, "group": 2, "topics": ["String", "Bit Manipulation"], "upvotes": "283", "downvotes": "26"}, {"id": 1403, "name": "Minimum Subsequence in Non-Increasing Order", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/minimum-subsequence-in-non-increasing-order", "submissions": 47059, "accepted_subsmissions": 33405, "group": 2, "topics": ["Greedy", "Sort"], "upvotes": "198", "downvotes": "263"}, {"id": 1416, "name": "Restore The Array", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/restore-the-array", "submissions": 22087, "accepted_subsmissions": 8073, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "219", "downvotes": "6"}, {"id": 1415, "name": "The k-th Lexicographical String of All Happy Strings of Length n", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/the-k-th-lexicographical-string-of-all-happy-strings-of-length-n", "submissions": 23315, "accepted_subsmissions": 16289, "group": 2, "topics": ["Backtracking"], "upvotes": "373", "downvotes": "12"}, {"id": 1414, "name": "Find the Minimum Number of Fibonacci Numbers Whose Sum Is K", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/find-the-minimum-number-of-fibonacci-numbers-whose-sum-is-k", "submissions": 32252, "accepted_subsmissions": 20380, "group": 2, "topics": ["Array", "Greedy"], "upvotes": "392", "downvotes": "40"}, {"id": 1413, "name": "Minimum Value to Get Positive Step by Step Sum", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/minimum-value-to-get-positive-step-by-step-sum", "submissions": 41287, "accepted_subsmissions": 27062, "group": 2, "topics": ["Array"], "upvotes": "330", "downvotes": "95"}, {"id": 1397, "name": "Find All Good Strings", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/find-all-good-strings", "submissions": 7280, "accepted_subsmissions": 2808, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "176", "downvotes": "89"}, {"id": 1396, "name": "Design Underground System", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/design-underground-system", "submissions": 59899, "accepted_subsmissions": 41771, "group": 2, "topics": ["Design"], "upvotes": "551", "downvotes": "44"}, {"id": 1395, "name": "Count Number of Teams", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/count-number-of-teams", "submissions": 68029, "accepted_subsmissions": 52065, "group": 2, "topics": ["Array"], "upvotes": "847", "downvotes": "116"}, {"id": 1394, "name": "Find Lucky Integer in an Array", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/find-lucky-integer-in-an-array", "submissions": 74480, "accepted_subsmissions": 47080, "group": 2, "topics": ["Array"], "upvotes": "346", "downvotes": "10"}, {"id": 1392, "name": "Longest Happy Prefix", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/longest-happy-prefix", "submissions": 29140, "accepted_subsmissions": 12219, "group": 2, "topics": ["String"], "upvotes": "321", "downvotes": "19"}, {"id": 1391, "name": "Check if There is a Valid Path in a Grid", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/check-if-there-is-a-valid-path-in-a-grid", "submissions": 30850, "accepted_subsmissions": 13870, "group": 2, "topics": ["Depth-first Search", "Breadth-first Search"], "upvotes": "302", "downvotes": "167"}, {"id": 1389, "name": "Create Target Array in the Given Order", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/create-target-array-in-the-given-order", "submissions": 101035, "accepted_subsmissions": 85688, "group": 2, "topics": ["Array"], "upvotes": "446", "downvotes": "613"}, {"id": 1402, "name": "Reducing Dishes", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/reducing-dishes", "submissions": 27419, "accepted_subsmissions": 19775, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "398", "downvotes": "86"}, {"id": 1400, "name": "Construct K Palindrome Strings", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/construct-k-palindrome-strings", "submissions": 29551, "accepted_subsmissions": 18636, "group": 2, "topics": ["Greedy"], "upvotes": "314", "downvotes": "39"}, {"id": 1401, "name": "Circle and Rectangle Overlapping", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/circle-and-rectangle-overlapping", "submissions": 17070, "accepted_subsmissions": 7256, "group": 2, "topics": ["Geometry"], "upvotes": "151", "downvotes": "46"}, {"id": 1399, "name": "Count Largest Group", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/count-largest-group", "submissions": 32863, "accepted_subsmissions": 21454, "group": 2, "topics": ["Array"], "upvotes": "167", "downvotes": "436"}, {"id": 1383, "name": "Maximum Performance of a Team", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/maximum-performance-of-a-team", "submissions": 35326, "accepted_subsmissions": 12650, "group": 2, "topics": ["Greedy", "Sort"], "upvotes": "384", "downvotes": "27"}, {"id": 1379, "name": "Find a Corresponding Node of a Binary Tree in a Clone of That Tree", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/find-a-corresponding-node-of-a-binary-tree-in-a-clone-of-that-tree", "submissions": 82796, "accepted_subsmissions": 70087, "group": 2, "topics": ["Tree", "Depth-first Search", "Breadth-first Search", "Recursion"], "upvotes": "429", "downvotes": "577"}, {"id": 1381, "name": "Design a Stack With Increment Operation", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/design-a-stack-with-increment-operation", "submissions": 47981, "accepted_subsmissions": 36584, "group": 2, "topics": ["Stack", "Design"], "upvotes": "516", "downvotes": "47"}, {"id": 1380, "name": "Lucky Numbers in a Matrix", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/lucky-numbers-in-a-matrix", "submissions": 57872, "accepted_subsmissions": 40828, "group": 2, "topics": ["Array"], "upvotes": "451", "downvotes": "44"}, {"id": 1377, "name": "Frog Position After T Seconds", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/frog-position-after-t-seconds", "submissions": 34875, "accepted_subsmissions": 12278, "group": 2, "topics": ["Depth-first Search"], "upvotes": "183", "downvotes": "68"}, {"id": 1376, "name": "Time Needed to Inform All Employees", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/time-needed-to-inform-all-employees", "submissions": 82997, "accepted_subsmissions": 46904, "group": 2, "topics": ["Depth-first Search"], "upvotes": "730", "downvotes": "68"}, {"id": 1375, "name": "Bulb Switcher III", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/bulb-switcher-iii", "submissions": 40935, "accepted_subsmissions": 26275, "group": 2, "topics": ["Array"], "upvotes": "450", "downvotes": "75"}, {"id": 1374, "name": "Generate a String With Characters That Have Odd Counts", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/generate-a-string-with-characters-that-have-odd-counts", "submissions": 61486, "accepted_subsmissions": 47187, "group": 2, "topics": ["String"], "upvotes": "170", "downvotes": "725"}, {"id": 1388, "name": "Pizza With 3n Slices", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/pizza-with-3n-slices", "submissions": 11763, "accepted_subsmissions": 5396, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "337", "downvotes": "5"}, {"id": 1387, "name": "Sort Integers by The Power Value", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/sort-integers-by-the-power-value", "submissions": 41367, "accepted_subsmissions": 29159, "group": 2, "topics": ["Sort", "Graph"], "upvotes": "376", "downvotes": "54"}, {"id": 1386, "name": "Cinema Seat Allocation", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/cinema-seat-allocation", "submissions": 31932, "accepted_subsmissions": 11420, "group": 2, "topics": ["Array", "Greedy"], "upvotes": "221", "downvotes": "156"}, {"id": 1385, "name": "Find the Distance Value Between Two Arrays", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/find-the-distance-value-between-two-arrays", "submissions": 37683, "accepted_subsmissions": 25010, "group": 2, "topics": ["Array"], "upvotes": "163", "downvotes": "663"}, {"id": 1368, "name": "Minimum Cost to Make at Least One Valid Path in a Grid", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/minimum-cost-to-make-at-least-one-valid-path-in-a-grid", "submissions": 27336, "accepted_subsmissions": 15701, "group": 2, "topics": ["Breadth-first Search"], "upvotes": "495", "downvotes": "6"}, {"id": 1367, "name": "Linked List in Binary Tree", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/linked-list-in-binary-tree", "submissions": 67748, "accepted_subsmissions": 27829, "group": 2, "topics": ["Linked List", "Dynamic Programming", "Tree"], "upvotes": "742", "downvotes": "25"}, {"id": 1366, "name": "Rank Teams by Votes", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/rank-teams-by-votes", "submissions": 34465, "accepted_subsmissions": 19066, "group": 2, "topics": ["Array", "Sort"], "upvotes": "402", "downvotes": "53"}, {"id": 1365, "name": "How Many Numbers Are Smaller Than the Current Number", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/how-many-numbers-are-smaller-than-the-current-number", "submissions": 206885, "accepted_subsmissions": 177813, "group": 2, "topics": ["Array", "Hash Table"], "upvotes": "1470", "downvotes": "39"}, {"id": 1354, "name": "Construct Target Array With Multiple Sums", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/construct-target-array-with-multiple-sums", "submissions": 27602, "accepted_subsmissions": 8652, "group": 2, "topics": ["Greedy"], "upvotes": "252", "downvotes": "34"}, {"id": 1353, "name": "Maximum Number of Events That Can Be Attended", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/maximum-number-of-events-that-can-be-attended", "submissions": 72790, "accepted_subsmissions": 22194, "group": 2, "topics": ["Greedy", "Sort", "Segment Tree"], "upvotes": "763", "downvotes": "104"}, {"id": 1352, "name": "Product of the Last K Numbers", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/product-of-the-last-k-numbers", "submissions": 61990, "accepted_subsmissions": 27713, "group": 2, "topics": ["Array", "Design"], "upvotes": "494", "downvotes": "29"}, {"id": 1351, "name": "Count Negative Numbers in a Sorted Matrix", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/count-negative-numbers-in-a-sorted-matrix", "submissions": 128929, "accepted_subsmissions": 97849, "group": 2, "topics": ["Array", "Binary Search"], "upvotes": "867", "downvotes": "45"}, {"id": 1373, "name": "Maximum Sum BST in Binary Tree", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/maximum-sum-bst-in-binary-tree", "submissions": 38520, "accepted_subsmissions": 14359, "group": 2, "topics": ["Dynamic Programming", "Binary Search Tree"], "upvotes": "391", "downvotes": "63"}, {"id": 1372, "name": "Longest ZigZag Path in a Binary Tree", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/longest-zigzag-path-in-a-binary-tree", "submissions": 32498, "accepted_subsmissions": 17853, "group": 2, "topics": ["Dynamic Programming", "Tree"], "upvotes": "515", "downvotes": "10"}, {"id": 1371, "name": "Find the Longest Substring Containing Vowels in Even Counts", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/find-the-longest-substring-containing-vowels-in-even-counts", "submissions": 19186, "accepted_subsmissions": 11685, "group": 2, "topics": ["String"], "upvotes": "584", "downvotes": "24"}, {"id": 1370, "name": "Increasing Decreasing String", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/increasing-decreasing-string", "submissions": 47752, "accepted_subsmissions": 36859, "group": 2, "topics": ["String", "Sort"], "upvotes": "336", "downvotes": "351"}, {"id": 1349, "name": "Maximum Students Taking Exam", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/maximum-students-taking-exam", "submissions": 16411, "accepted_subsmissions": 7253, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "378", "downvotes": "10"}, {"id": 1348, "name": "Tweet Counts Per Frequency", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/tweet-counts-per-frequency", "submissions": 34563, "accepted_subsmissions": 12553, "group": 2, "topics": ["Design"], "upvotes": "103", "downvotes": "593"}, {"id": 1347, "name": "Minimum Number of Steps to Make Two Strings Anagram", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/minimum-number-of-steps-to-make-two-strings-anagram", "submissions": 64965, "accepted_subsmissions": 48787, "group": 2, "topics": ["String"], "upvotes": "520", "downvotes": "35"}, {"id": 1346, "name": "Check If N and Its Double Exist", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/check-if-n-and-its-double-exist", "submissions": 251172, "accepted_subsmissions": 90620, "group": 2, "topics": ["Array"], "upvotes": "302", "downvotes": "52"}, {"id": 1340, "name": "Jump Game V", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/jump-game-v", "submissions": 19387, "accepted_subsmissions": 11489, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "326", "downvotes": "13"}, {"id": 1339, "name": "Maximum Product of Splitted Binary Tree", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/maximum-product-of-splitted-binary-tree", "submissions": 60480, "accepted_subsmissions": 23157, "group": 2, "topics": ["Dynamic Programming", "Tree", "Depth-first Search"], "upvotes": "488", "downvotes": "42"}, {"id": 1338, "name": "Reduce Array Size to The Half", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/reduce-array-size-to-the-half", "submissions": 49846, "accepted_subsmissions": 33735, "group": 2, "topics": ["Array", "Greedy"], "upvotes": "399", "downvotes": "38"}, {"id": 1337, "name": "The K Weakest Rows in a Matrix", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/the-k-weakest-rows-in-a-matrix", "submissions": 95450, "accepted_subsmissions": 68735, "group": 2, "topics": ["Array", "Binary Search"], "upvotes": "759", "downvotes": "52"}, {"id": 1359, "name": "Count All Valid Pickup and Delivery Options", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/count-all-valid-pickup-and-delivery-options", "submissions": 19196, "accepted_subsmissions": 10812, "group": 2, "topics": ["Math", "Dynamic Programming"], "upvotes": "271", "downvotes": "30"}, {"id": 1358, "name": "Number of Substrings Containing All Three Characters", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/number-of-substrings-containing-all-three-characters", "submissions": 33207, "accepted_subsmissions": 20117, "group": 2, "topics": ["String"], "upvotes": "633", "downvotes": "15"}, {"id": 1357, "name": "Apply Discount Every n Orders", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/apply-discount-every-n-orders", "submissions": 15175, "accepted_subsmissions": 10147, "group": 2, "topics": ["Design"], "upvotes": "73", "downvotes": "108"}, {"id": 1356, "name": "Sort Integers by The Number of 1 Bits", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/sort-integers-by-the-number-of-1-bits", "submissions": 51238, "accepted_subsmissions": 35684, "group": 2, "topics": ["Sort", "Bit Manipulation"], "upvotes": "452", "downvotes": "19"}, {"id": 1335, "name": "Minimum Difficulty of a Job Schedule", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/minimum-difficulty-of-a-job-schedule", "submissions": 55182, "accepted_subsmissions": 31305, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "567", "downvotes": "66"}, {"id": 1334, "name": "Find the City With the Smallest Number of Neighbors at a Threshold Distance", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/find-the-city-with-the-smallest-number-of-neighbors-at-a-threshold-distance", "submissions": 43896, "accepted_subsmissions": 20662, "group": 2, "topics": ["Graph"], "upvotes": "510", "downvotes": "32"}, {"id": 1333, "name": "Filter Restaurants by Vegan-Friendly, Price and Distance", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/filter-restaurants-by-vegan-friendly-price-and-distance", "submissions": 26607, "accepted_subsmissions": 15216, "group": 2, "topics": ["Array", "Sort"], "upvotes": "128", "downvotes": "123"}, {"id": 1332, "name": "Remove Palindromic Subsequences", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/remove-palindromic-subsequences", "submissions": 60748, "accepted_subsmissions": 41371, "group": 2, "topics": ["String"], "upvotes": "3", "downvotes": "2"}, {"id": 1326, "name": "Minimum Number of Taps to Open to Water a Garden", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/minimum-number-of-taps-to-open-to-water-a-garden", "submissions": 49265, "accepted_subsmissions": 23444, "group": 2, "topics": ["Dynamic Programming", "Greedy"], "upvotes": "532", "downvotes": "56"}, {"id": 1325, "name": "Delete Leaves With a Given Value", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/delete-leaves-with-a-given-value", "submissions": 50122, "accepted_subsmissions": 36988, "group": 2, "topics": ["Tree"], "upvotes": "652", "downvotes": "15"}, {"id": 1324, "name": "Print Words Vertically", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/print-words-vertically", "submissions": 31665, "accepted_subsmissions": 18666, "group": 2, "topics": ["String"], "upvotes": "225", "downvotes": "63"}, {"id": 1323, "name": "Maximum 69 Number", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/maximum-69-number", "submissions": 96414, "accepted_subsmissions": 75108, "group": 2, "topics": ["Math"], "upvotes": "531", "downvotes": "88"}, {"id": 1345, "name": "Jump Game IV", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/jump-game-iv", "submissions": 73348, "accepted_subsmissions": 30766, "group": 2, "topics": ["Breadth-first Search"], "upvotes": "569", "downvotes": "42"}, {"id": 1344, "name": "Angle Between Hands of a Clock", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/angle-between-hands-of-a-clock", "submissions": 84376, "accepted_subsmissions": 51714, "group": 2, "topics": ["Math"], "upvotes": "484", "downvotes": "110"}, {"id": 1343, "name": "Number of Sub-arrays of Size K and Average Greater than or Equal to Threshold", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/number-of-sub-arrays-of-size-k-and-average-greater-than-or-equal-to-threshold", "submissions": 25330, "accepted_subsmissions": 16420, "group": 2, "topics": ["Array"], "upvotes": "204", "downvotes": "38"}, {"id": 1342, "name": "Number of Steps to Reduce a Number to Zero", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/number-of-steps-to-reduce-a-number-to-zero", "submissions": 207034, "accepted_subsmissions": 177569, "group": 2, "topics": ["Bit Manipulation"], "upvotes": "830", "downvotes": "80"}, {"id": 1320, "name": "Minimum Distance to Type a Word Using Two Fingers", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/minimum-distance-to-type-a-word-using-two-fingers", "submissions": 27676, "accepted_subsmissions": 17100, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "533", "downvotes": "23"}, {"id": 1319, "name": "Number of Operations to Make Network Connected", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/number-of-operations-to-make-network-connected", "submissions": 54508, "accepted_subsmissions": 30263, "group": 2, "topics": ["Depth-first Search", "Breadth-first Search", "Union Find"], "upvotes": "784", "downvotes": "15"}, {"id": 1318, "name": "Minimum Flips to Make a OR b Equal to c", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/minimum-flips-to-make-a-or-b-equal-to-c", "submissions": 25068, "accepted_subsmissions": 16021, "group": 2, "topics": ["Bit Manipulation"], "upvotes": "215", "downvotes": "24"}, {"id": 1317, "name": "Convert Integer to the Sum of Two No-Zero Integers", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/convert-integer-to-the-sum-of-two-no-zero-integers", "submissions": 38186, "accepted_subsmissions": 21671, "group": 2, "topics": ["Math"], "upvotes": "150", "downvotes": "152"}, {"id": 1312, "name": "Minimum Insertion Steps to Make a String Palindrome", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/minimum-insertion-steps-to-make-a-string-palindrome", "submissions": 35770, "accepted_subsmissions": 21376, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "678", "downvotes": "12"}, {"id": 1311, "name": "Get Watched Videos by Your Friends", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/get-watched-videos-by-your-friends", "submissions": 26845, "accepted_subsmissions": 11867, "group": 2, "topics": ["Hash Table", "String", "Breadth-first Search"], "upvotes": "144", "downvotes": "223"}, {"id": 1310, "name": "XOR Queries of a Subarray", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/xor-queries-of-a-subarray", "submissions": 32321, "accepted_subsmissions": 22401, "group": 2, "topics": ["Bit Manipulation"], "upvotes": "464", "downvotes": "23"}, {"id": 1309, "name": "Decrypt String from Alphabet to Integer Mapping", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/decrypt-string-from-alphabet-to-integer-mapping", "submissions": 67778, "accepted_subsmissions": 52578, "group": 2, "topics": ["String"], "upvotes": "513", "downvotes": "50"}, {"id": 1307, "name": "Verbal Arithmetic Puzzle", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/verbal-arithmetic-puzzle", "submissions": 14835, "accepted_subsmissions": 5461, "group": 2, "topics": ["Math", "Backtracking"], "upvotes": "200", "downvotes": "64"}, {"id": 1306, "name": "Jump Game III", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/jump-game-iii", "submissions": 106500, "accepted_subsmissions": 66361, "group": 2, "topics": ["Depth-first Search", "Breadth-first Search", "Recursion"], "upvotes": "1052", "downvotes": "33"}, {"id": 1305, "name": "All Elements in Two Binary Search Trees", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/all-elements-in-two-binary-search-trees", "submissions": 102685, "accepted_subsmissions": 79904, "group": 2, "topics": ["Sort", "Tree"], "upvotes": "851", "downvotes": "35"}, {"id": 1304, "name": "Find N Unique Integers Sum up to Zero", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/find-n-unique-integers-sum-up-to-zero", "submissions": 102398, "accepted_subsmissions": 78616, "group": 2, "topics": ["Array"], "upvotes": "515", "downvotes": "291"}, {"id": 1298, "name": "Maximum Candies You Can Get from Boxes", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/maximum-candies-you-can-get-from-boxes", "submissions": 12724, "accepted_subsmissions": 7599, "group": 2, "topics": ["Breadth-first Search"], "upvotes": "111", "downvotes": "92"}, {"id": 1297, "name": "Maximum Number of Occurrences of a Substring", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/maximum-number-of-occurrences-of-a-substring", "submissions": 37252, "accepted_subsmissions": 18731, "group": 2, "topics": ["String", "Bit Manipulation"], "upvotes": "316", "downvotes": "183"}, {"id": 1296, "name": "Divide Array in Sets of K Consecutive Numbers", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/divide-array-in-sets-of-k-consecutive-numbers", "submissions": 74180, "accepted_subsmissions": 41209, "group": 2, "topics": ["Array", "Greedy"], "upvotes": "652", "downvotes": "69"}, {"id": 1295, "name": "Find Numbers with Even Number of Digits", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/find-numbers-with-even-number-of-digits", "submissions": 309381, "accepted_subsmissions": 244197, "group": 2, "topics": ["Array"], "upvotes": "618", "downvotes": "73"}, {"id": 1293, "name": "Shortest Path in a Grid with Obstacles Elimination", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/shortest-path-in-a-grid-with-obstacles-elimination", "submissions": 58277, "accepted_subsmissions": 25106, "group": 2, "topics": ["Breadth-first Search"], "upvotes": "695", "downvotes": "12"}, {"id": 1292, "name": "Maximum Side Length of a Square with Sum Less than or Equal to Threshold", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/maximum-side-length-of-a-square-with-sum-less-than-or-equal-to-threshold", "submissions": 33699, "accepted_subsmissions": 17124, "group": 2, "topics": ["Array", "Binary Search"], "upvotes": "490", "downvotes": "35"}, {"id": 1290, "name": "Convert Binary Number in a Linked List to Integer", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/convert-binary-number-in-a-linked-list-to-integer", "submissions": 200136, "accepted_subsmissions": 163660, "group": 2, "topics": ["Linked List", "Bit Manipulation"], "upvotes": "1084", "downvotes": "62"}, {"id": 1284, "name": "Minimum Number of Flips to Convert Binary Matrix to Zero Matrix", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/minimum-number-of-flips-to-convert-binary-matrix-to-zero-matrix", "submissions": 15916, "accepted_subsmissions": 11148, "group": 2, "topics": ["Breadth-first Search"], "upvotes": "281", "downvotes": "33"}, {"id": 1283, "name": "Find the Smallest Divisor Given a Threshold", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/find-the-smallest-divisor-given-a-threshold", "submissions": 108645, "accepted_subsmissions": 53946, "group": 2, "topics": ["Binary Search"], "upvotes": "702", "downvotes": "127"}, {"id": 1282, "name": "Group the People Given the Group Size They Belong To", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/group-the-people-given-the-group-size-they-belong-to", "submissions": 63689, "accepted_subsmissions": 53721, "group": 2, "topics": ["Greedy"], "upvotes": "513", "downvotes": "360"}, {"id": 1281, "name": "Subtract the Product and Sum of Digits of an Integer", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/subtract-the-product-and-sum-of-digits-of-an-integer", "submissions": 153520, "accepted_subsmissions": 131361, "group": 2, "topics": ["Math"], "upvotes": "489", "downvotes": "131"}, {"id": 1278, "name": "Palindrome Partitioning III", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/palindrome-partitioning-iii", "submissions": 19698, "accepted_subsmissions": 12008, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "410", "downvotes": "8"}, {"id": 1277, "name": "Count Square Submatrices with All Ones", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/count-square-submatrices-with-all-ones", "submissions": 125545, "accepted_subsmissions": 91384, "group": 2, "topics": ["Array", "Dynamic Programming"], "upvotes": "1709", "downvotes": "32"}, {"id": 1276, "name": "Number of Burgers with No Waste of Ingredients", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/number-of-burgers-with-no-waste-of-ingredients", "submissions": 26945, "accepted_subsmissions": 13492, "group": 2, "topics": ["Math", "Greedy"], "upvotes": "138", "downvotes": "153"}, {"id": 1275, "name": "Find Winner on a Tic Tac Toe Game", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/find-winner-on-a-tic-tac-toe-game", "submissions": 48909, "accepted_subsmissions": 25881, "group": 2, "topics": ["Array"], "upvotes": "314", "downvotes": "96"}, {"id": 1269, "name": "Number of Ways to Stay in the Same Place After Some Steps", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/number-of-ways-to-stay-in-the-same-place-after-some-steps", "submissions": 42902, "accepted_subsmissions": 18527, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "349", "downvotes": "21"}, {"id": 1268, "name": "Search Suggestions System", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/search-suggestions-system", "submissions": 111535, "accepted_subsmissions": 72128, "group": 2, "topics": ["String"], "upvotes": "937", "downvotes": "90"}, {"id": 1267, "name": "Count Servers that Communicate", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/count-servers-that-communicate", "submissions": 49144, "accepted_subsmissions": 28367, "group": 2, "topics": ["Array", "Graph"], "upvotes": "524", "downvotes": "50"}, {"id": 1266, "name": "Minimum Time Visiting All Points", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/minimum-time-visiting-all-points", "submissions": 104842, "accepted_subsmissions": 83199, "group": 2, "topics": ["Array", "Geometry"], "upvotes": "743", "downvotes": "118"}, {"id": 1263, "name": "Minimum Moves to Move a Box to Their Target Location", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/minimum-moves-to-move-a-box-to-their-target-location", "submissions": 13445, "accepted_subsmissions": 5822, "group": 2, "topics": ["Breadth-first Search"], "upvotes": "278", "downvotes": "11"}, {"id": 1262, "name": "Greatest Sum Divisible by Three", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/greatest-sum-divisible-by-three", "submissions": 51609, "accepted_subsmissions": 25634, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "697", "downvotes": "20"}, {"id": 1261, "name": "Find Elements in a Contaminated Binary Tree", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/find-elements-in-a-contaminated-binary-tree", "submissions": 38797, "accepted_subsmissions": 28913, "group": 2, "topics": ["Hash Table", "Tree"], "upvotes": "328", "downvotes": "53"}, {"id": 1260, "name": "Shift 2D Grid", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/shift-2d-grid", "submissions": 39780, "accepted_subsmissions": 24605, "group": 2, "topics": ["Array"], "upvotes": "305", "downvotes": "120"}, {"id": 1255, "name": "Maximum Score Words Formed by Letters", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/maximum-score-words-formed-by-letters", "submissions": 16586, "accepted_subsmissions": 11614, "group": 2, "topics": ["Bit Manipulation"], "upvotes": "266", "downvotes": "25"}, {"id": 1254, "name": "Number of Closed Islands", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/number-of-closed-islands", "submissions": 63494, "accepted_subsmissions": 39187, "group": 2, "topics": ["Depth-first Search"], "upvotes": "744", "downvotes": "22"}, {"id": 1253, "name": "Reconstruct a 2-Row Binary Matrix", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/reconstruct-a-2-row-binary-matrix", "submissions": 34014, "accepted_subsmissions": 14165, "group": 2, "topics": ["Math", "Greedy"], "upvotes": "188", "downvotes": "17"}, {"id": 1252, "name": "Cells with Odd Values in a Matrix", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/cells-with-odd-values-in-a-matrix", "submissions": 73939, "accepted_subsmissions": 58288, "group": 2, "topics": ["Array"], "upvotes": "432", "downvotes": "725"}, {"id": 1250, "name": "Check If It Is a Good Array", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/check-if-it-is-a-good-array", "submissions": 15928, "accepted_subsmissions": 8944, "group": 2, "topics": ["Math"], "upvotes": "132", "downvotes": "203"}, {"id": 1249, "name": "Minimum Remove to Make Valid Parentheses", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/minimum-remove-to-make-valid-parentheses", "submissions": 271749, "accepted_subsmissions": 174341, "group": 2, "topics": ["String", "Stack"], "upvotes": "1889", "downvotes": "44"}, {"id": 1248, "name": "Count Number of Nice Subarrays", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/count-number-of-nice-subarrays", "submissions": 50055, "accepted_subsmissions": 28088, "group": 2, "topics": ["Two Pointers"], "upvotes": "769", "downvotes": "22"}, {"id": 1247, "name": "Minimum Swaps to Make Strings Equal", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/minimum-swaps-to-make-strings-equal", "submissions": 31064, "accepted_subsmissions": 19502, "group": 2, "topics": ["String", "Greedy"], "upvotes": "469", "downvotes": "165"}, {"id": 1691, "name": "Maximum Height by Stacking Cuboids ", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/maximum-height-by-stacking-cuboids", "submissions": 8471, "accepted_subsmissions": 4243, "group": 2, "topics": ["Dynamic Programming", "Sort"], "upvotes": "162", "downvotes": "9"}, {"id": 1726, "name": "Tuple with Same Product", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/tuple-with-same-product", "submissions": 19776, "accepted_subsmissions": 11106, "group": 2, "topics": ["Array", "Hash Table"], "upvotes": "189", "downvotes": "10"}, {"id": 1227, "name": "Airplane Seat Assignment Probability", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/airplane-seat-assignment-probability", "submissions": 25783, "accepted_subsmissions": 16031, "group": 2, "topics": ["Math", "Dynamic Programming", "Brainteaser"], "upvotes": "247", "downvotes": "438"}, {"id": 1240, "name": "Tiling a Rectangle with the Fewest Squares", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/tiling-a-rectangle-with-the-fewest-squares", "submissions": 21342, "accepted_subsmissions": 11228, "group": 2, "topics": ["Dynamic Programming", "Backtracking"], "upvotes": "282", "downvotes": "291"}, {"id": 1239, "name": "Maximum Length of a Concatenated String with Unique Characters", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/maximum-length-of-a-concatenated-string-with-unique-characters", "submissions": 103142, "accepted_subsmissions": 51292, "group": 2, "topics": ["Backtracking", "Bit Manipulation"], "upvotes": "794", "downvotes": "81"}, {"id": 1238, "name": "Circular Permutation in Binary Representation", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/circular-permutation-in-binary-representation", "submissions": 13410, "accepted_subsmissions": 8885, "group": 2, "topics": ["Math"], "upvotes": "136", "downvotes": "122"}, {"id": 1237, "name": "Find Positive Integer Solution for a Given Equation", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/find-positive-integer-solution-for-a-given-equation", "submissions": 48133, "accepted_subsmissions": 33425, "group": 2, "topics": ["Math", "Binary Search"], "upvotes": "214", "downvotes": "883"}, {"id": 1235, "name": "Maximum Profit in Job Scheduling", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/maximum-profit-in-job-scheduling", "submissions": 71836, "accepted_subsmissions": 34041, "group": 2, "topics": ["Binary Search", "Dynamic Programming", "Sort"], "upvotes": "1104", "downvotes": "11"}, {"id": 1234, "name": "Replace the Substring for Balanced String", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/replace-the-substring-for-balanced-string", "submissions": 45007, "accepted_subsmissions": 15531, "group": 2, "topics": ["Two Pointers", "String"], "upvotes": "467", "downvotes": "101"}, {"id": 1233, "name": "Remove Sub-Folders from the Filesystem", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/remove-sub-folders-from-the-filesystem", "submissions": 43646, "accepted_subsmissions": 27133, "group": 2, "topics": ["Array", "String"], "upvotes": "347", "downvotes": "58"}, {"id": 1232, "name": "Check If It Is a Straight Line", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/check-if-it-is-a-straight-line", "submissions": 208471, "accepted_subsmissions": 90578, "group": 2, "topics": ["Array", "Math", "Geometry"], "upvotes": "527", "downvotes": "86"}, {"id": 1224, "name": "Maximum Equal Frequency", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/maximum-equal-frequency", "submissions": 23004, "accepted_subsmissions": 8082, "group": 2, "topics": ["Hash Table"], "upvotes": "239", "downvotes": "29"}, {"id": 1223, "name": "Dice Roll Simulation", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/dice-roll-simulation", "submissions": 35978, "accepted_subsmissions": 16787, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "508", "downvotes": "160"}, {"id": 1222, "name": "Queens That Can Attack the King", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/queens-that-can-attack-the-king", "submissions": 33402, "accepted_subsmissions": 23205, "group": 2, "topics": ["Array"], "upvotes": "411", "downvotes": "83"}, {"id": 1221, "name": "Split a String in Balanced Strings", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/split-a-string-in-balanced-strings", "submissions": 160764, "accepted_subsmissions": 135492, "group": 2, "topics": ["String", "Greedy"], "upvotes": "968", "downvotes": "572"}, {"id": 1206, "name": "Design Skiplist", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/design-skiplist", "submissions": 12208, "accepted_subsmissions": 7197, "group": 2, "topics": ["Design"], "upvotes": "235", "downvotes": "25"}, {"id": 1220, "name": "Count Vowels Permutation", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/count-vowels-permutation", "submissions": 29614, "accepted_subsmissions": 16008, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "296", "downvotes": "55"}, {"id": 1219, "name": "Path with Maximum Gold", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/path-with-maximum-gold", "submissions": 73302, "accepted_subsmissions": 48215, "group": 2, "topics": ["Backtracking"], "upvotes": "896", "downvotes": "33"}, {"id": 1218, "name": "Longest Arithmetic Subsequence of Given Difference", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/longest-arithmetic-subsequence-of-given-difference", "submissions": 51021, "accepted_subsmissions": 23815, "group": 2, "topics": ["Hash Table", "Math", "Dynamic Programming"], "upvotes": "493", "downvotes": "31"}, {"id": 1217, "name": "Minimum Cost to Move Chips to The Same Position", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/minimum-cost-to-move-chips-to-the-same-position", "submissions": 71861, "accepted_subsmissions": 51088, "group": 2, "topics": ["Array", "Math", "Greedy"], "upvotes": "239", "downvotes": "37"}, {"id": 1514, "name": "Path with Maximum Probability", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/path-with-maximum-probability", "submissions": 45500, "accepted_subsmissions": 18500, "group": 2, "topics": ["Graph"], "upvotes": "530", "downvotes": "9"}, {"id": 1706, "name": "Where Will the Ball Fall", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/where-will-the-ball-fall", "submissions": 12728, "accepted_subsmissions": 7636, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "208", "downvotes": "20"}, {"id": 1210, "name": "Minimum Moves to Reach Target with Rotations", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/minimum-moves-to-reach-target-with-rotations", "submissions": 12594, "accepted_subsmissions": 5845, "group": 2, "topics": ["Breadth-first Search"], "upvotes": "150", "downvotes": "43"}, {"id": 1208, "name": "Get Equal Substrings Within Budget", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/get-equal-substrings-within-budget", "submissions": 46420, "accepted_subsmissions": 20431, "group": 2, "topics": ["Array", "Sliding Window"], "upvotes": "387", "downvotes": "29"}, {"id": 1209, "name": "Remove All Adjacent Duplicates in String II", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/remove-all-adjacent-duplicates-in-string-ii", "submissions": 120127, "accepted_subsmissions": 69240, "group": 2, "topics": ["Stack"], "upvotes": "1143", "downvotes": "28"}, {"id": 1207, "name": "Unique Number of Occurrences", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/unique-number-of-occurrences", "submissions": 107587, "accepted_subsmissions": 77242, "group": 2, "topics": ["Hash Table"], "upvotes": "634", "downvotes": "24"}, {"id": 1203, "name": "Sort Items by Groups Respecting Dependencies", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/sort-items-by-groups-respecting-dependencies", "submissions": 17997, "accepted_subsmissions": 8695, "group": 2, "topics": ["Depth-first Search", "Graph", "Topological Sort"], "upvotes": "376", "downvotes": "65"}, {"id": 1202, "name": "Smallest String With Swaps", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/smallest-string-with-swaps", "submissions": 45416, "accepted_subsmissions": 22178, "group": 2, "topics": ["Array", "Union Find"], "upvotes": "825", "downvotes": "30"}, {"id": 1201, "name": "Ugly Number III", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/ugly-number-iii", "submissions": 48538, "accepted_subsmissions": 12808, "group": 2, "topics": ["Math", "Binary Search"], "upvotes": "395", "downvotes": "283"}, {"id": 1200, "name": "Minimum Absolute Difference", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/minimum-absolute-difference", "submissions": 87580, "accepted_subsmissions": 58655, "group": 2, "topics": ["Array"], "upvotes": "553", "downvotes": "30"}, {"id": 1405, "name": "Longest Happy String", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/longest-happy-string", "submissions": 32491, "accepted_subsmissions": 17029, "group": 2, "topics": ["Dynamic Programming", "Greedy"], "upvotes": "497", "downvotes": "96"}, {"id": 1192, "name": "Critical Connections in a Network", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/critical-connections-in-a-network", "submissions": 196874, "accepted_subsmissions": 98778, "group": 2, "topics": ["Depth-first Search"], "upvotes": "2093", "downvotes": "109"}, {"id": 1191, "name": "K-Concatenation Maximum Sum", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/k-concatenation-maximum-sum", "submissions": 63956, "accepted_subsmissions": 16097, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "481", "downvotes": "45"}, {"id": 1190, "name": "Reverse Substrings Between Each Pair of Parentheses", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/reverse-substrings-between-each-pair-of-parentheses", "submissions": 47469, "accepted_subsmissions": 30447, "group": 2, "topics": ["Stack"], "upvotes": "675", "downvotes": "24"}, {"id": 1189, "name": "Maximum Number of Balloons", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/maximum-number-of-balloons", "submissions": 92204, "accepted_subsmissions": 57110, "group": 2, "topics": ["Hash Table", "String"], "upvotes": "485", "downvotes": "47"}, {"id": 1483, "name": "Kth Ancestor of a Tree Node", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/kth-ancestor-of-a-tree-node", "submissions": 35202, "accepted_subsmissions": 10795, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "385", "downvotes": "54"}, {"id": 1550, "name": "Three Consecutive Odds", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/three-consecutive-odds", "submissions": 48259, "accepted_subsmissions": 31200, "group": 2, "topics": ["Array"], "upvotes": "190", "downvotes": "33"}, {"id": 1187, "name": "Make Array Strictly Increasing", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/make-array-strictly-increasing", "submissions": 17288, "accepted_subsmissions": 7272, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "363", "downvotes": "10"}, {"id": 1185, "name": "Day of the Week", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/day-of-the-week", "submissions": 50178, "accepted_subsmissions": 30742, "group": 2, "topics": ["Array"], "upvotes": "154", "downvotes": "1418"}, {"id": 1186, "name": "Maximum Subarray Sum with One Deletion", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/maximum-subarray-sum-with-one-deletion", "submissions": 53995, "accepted_subsmissions": 20956, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "746", "downvotes": "29"}, {"id": 1184, "name": "Distance Between Bus Stops", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/distance-between-bus-stops", "submissions": 56469, "accepted_subsmissions": 30492, "group": 2, "topics": ["Array"], "upvotes": "328", "downvotes": "36"}, {"id": 1425, "name": "Constrained Subsequence Sum", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/constrained-subsequence-sum", "submissions": 26313, "accepted_subsmissions": 11830, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "481", "downvotes": "22"}, {"id": 1382, "name": "Balance a Binary Search Tree", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/balance-a-binary-search-tree", "submissions": 40835, "accepted_subsmissions": 31101, "group": 2, "topics": ["Binary Search Tree"], "upvotes": "583", "downvotes": "29"}, {"id": 1390, "name": "Four Divisors", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/four-divisors", "submissions": 36927, "accepted_subsmissions": 14500, "group": 2, "topics": ["Math"], "upvotes": "97", "downvotes": "110"}, {"id": 1507, "name": "Reformat Date", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/reformat-date", "submissions": 31530, "accepted_subsmissions": 18950, "group": 2, "topics": ["String"], "upvotes": "109", "downvotes": "204"}, {"id": 1178, "name": "Number of Valid Words for Each Puzzle", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/number-of-valid-words-for-each-puzzle", "submissions": 21621, "accepted_subsmissions": 8516, "group": 2, "topics": ["Hash Table", "Bit Manipulation"], "upvotes": "279", "downvotes": "33"}, {"id": 1177, "name": "Can Make Palindrome from Substring", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/can-make-palindrome-from-substring", "submissions": 42428, "accepted_subsmissions": 15297, "group": 2, "topics": ["Array", "String"], "upvotes": "334", "downvotes": "192"}, {"id": 1175, "name": "Prime Arrangements", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/prime-arrangements", "submissions": 28677, "accepted_subsmissions": 14908, "group": 2, "topics": ["Math"], "upvotes": "157", "downvotes": "274"}, {"id": 1363, "name": "Largest Multiple of Three", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/largest-multiple-of-three", "submissions": 28861, "accepted_subsmissions": 9836, "group": 2, "topics": ["Math", "Dynamic Programming"], "upvotes": "235", "downvotes": "39"}, {"id": 1362, "name": "Closest Divisors", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/closest-divisors", "submissions": 20517, "accepted_subsmissions": 11832, "group": 2, "topics": ["Math"], "upvotes": "101", "downvotes": "65"}, {"id": 1361, "name": "Validate Binary Tree Nodes", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/validate-binary-tree-nodes", "submissions": 44142, "accepted_subsmissions": 19268, "group": 2, "topics": ["Graph"], "upvotes": "328", "downvotes": "117"}, {"id": 1360, "name": "Number of Days Between Two Dates", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/number-of-days-between-two-dates", "submissions": 39524, "accepted_subsmissions": 18445, "group": 2, "topics": [], "upvotes": "93", "downvotes": "518"}, {"id": 1170, "name": "Compare Strings by Frequency of the Smallest Character", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/compare-strings-by-frequency-of-the-smallest-character", "submissions": 89782, "accepted_subsmissions": 53785, "group": 2, "topics": ["Array", "String", "Binary Search"], "upvotes": "337", "downvotes": "791"}, {"id": 1169, "name": "Invalid Transactions", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/invalid-transactions", "submissions": 81033, "accepted_subsmissions": 25055, "group": 2, "topics": ["Array", "String"], "upvotes": "141", "downvotes": "880"}, {"id": 1172, "name": "Dinner Plate Stacks", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/dinner-plate-stacks", "submissions": 28159, "accepted_subsmissions": 10614, "group": 2, "topics": ["Design"], "upvotes": "229", "downvotes": "30"}, {"id": 1171, "name": "Remove Zero Sum Consecutive Nodes from Linked List", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/remove-zero-sum-consecutive-nodes-from-linked-list", "submissions": 56529, "accepted_subsmissions": 23474, "group": 2, "topics": ["Linked List"], "upvotes": "800", "downvotes": "51"}, {"id": 1155, "name": "Number of Dice Rolls With Target Sum", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/number-of-dice-rolls-with-target-sum", "submissions": 139295, "accepted_subsmissions": 66256, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "1195", "downvotes": "57"}, {"id": 1157, "name": "Online Majority Element In Subarray", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/online-majority-element-in-subarray", "submissions": 22594, "accepted_subsmissions": 8992, "group": 2, "topics": ["Array", "Binary Search", "Segment Tree"], "upvotes": "290", "downvotes": "34"}, {"id": 1156, "name": "Swap For Longest Repeated Character Substring", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/swap-for-longest-repeated-character-substring", "submissions": 33570, "accepted_subsmissions": 15811, "group": 2, "topics": ["String"], "upvotes": "448", "downvotes": "42"}, {"id": 1154, "name": "Day of the Year", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/day-of-the-year", "submissions": 45556, "accepted_subsmissions": 22396, "group": 2, "topics": ["Math"], "upvotes": "144", "downvotes": "212"}, {"id": 1632, "name": "Rank Transform of a Matrix", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/rank-transform-of-a-matrix", "submissions": 10538, "accepted_subsmissions": 3245, "group": 2, "topics": ["Greedy", "Union Find"], "upvotes": "185", "downvotes": "6"}, {"id": 1331, "name": "Rank Transform of an Array", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/rank-transform-of-an-array", "submissions": 51009, "accepted_subsmissions": 29295, "group": 2, "topics": ["Array"], "upvotes": "412", "downvotes": "34"}, {"id": 1330, "name": "Reverse Subarray To Maximize Array Value", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/reverse-subarray-to-maximize-array-value", "submissions": 7753, "accepted_subsmissions": 2845, "group": 2, "topics": ["Array", "Math"], "upvotes": "216", "downvotes": "27"}, {"id": 1302, "name": "Deepest Leaves Sum", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/deepest-leaves-sum", "submissions": 94227, "accepted_subsmissions": 79334, "group": 2, "topics": ["Tree", "Depth-first Search"], "upvotes": "1024", "downvotes": "54"}, {"id": 1329, "name": "Sort the Matrix Diagonally", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/sort-the-matrix-diagonally", "submissions": 65054, "accepted_subsmissions": 53175, "group": 2, "topics": ["Array", "Sort"], "upvotes": "870", "downvotes": "151"}, {"id": 1328, "name": "Break a Palindrome", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/break-a-palindrome", "submissions": 62248, "accepted_subsmissions": 29232, "group": 2, "topics": ["String"], "upvotes": "290", "downvotes": "293"}, {"id": 1147, "name": "Longest Chunked Palindrome Decomposition", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/longest-chunked-palindrome-decomposition", "submissions": 20156, "accepted_subsmissions": 11989, "group": 2, "topics": ["Dynamic Programming", "Rolling Hash"], "upvotes": "260", "downvotes": "15"}, {"id": 1143, "name": "Longest Common Subsequence", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/longest-common-subsequence", "submissions": 314301, "accepted_subsmissions": 184352, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "2669", "downvotes": "34"}, {"id": 1146, "name": "Snapshot Array", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/snapshot-array", "submissions": 134084, "accepted_subsmissions": 49399, "group": 2, "topics": ["Array"], "upvotes": "776", "downvotes": "150"}, {"id": 1145, "name": "Binary Tree Coloring Game", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/binary-tree-coloring-game", "submissions": 49445, "accepted_subsmissions": 25378, "group": 2, "topics": ["Tree", "Depth-first Search"], "upvotes": "611", "downvotes": "131"}, {"id": 1144, "name": "Decrease Elements To Make Array Zigzag", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/decrease-elements-to-make-array-zigzag", "submissions": 23620, "accepted_subsmissions": 10918, "group": 2, "topics": ["Array"], "upvotes": "163", "downvotes": "119"}, {"id": 1316, "name": "Distinct Echo Substrings", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/distinct-echo-substrings", "submissions": 17057, "accepted_subsmissions": 8484, "group": 2, "topics": ["String", "Rolling Hash"], "upvotes": "106", "downvotes": "134"}, {"id": 1315, "name": "Sum of Nodes with Even-Valued Grandparent", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/sum-of-nodes-with-even-valued-grandparent", "submissions": 72291, "accepted_subsmissions": 60952, "group": 2, "topics": ["Tree", "Depth-first Search"], "upvotes": "857", "downvotes": "31"}, {"id": 1314, "name": "Matrix Block Sum", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/matrix-block-sum", "submissions": 43539, "accepted_subsmissions": 32027, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "829", "downvotes": "145"}, {"id": 1313, "name": "Decompress Run-Length Encoded List", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/decompress-run-length-encoded-list", "submissions": 140891, "accepted_subsmissions": 120334, "group": 2, "topics": ["Array"], "upvotes": "413", "downvotes": "760"}, {"id": 1140, "name": "Stone Game II", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/stone-game-ii", "submissions": 39282, "accepted_subsmissions": 25395, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "736", "downvotes": "180"}, {"id": 1139, "name": "Largest 1-Bordered Square", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/largest-1-bordered-square", "submissions": 26788, "accepted_subsmissions": 13010, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "291", "downvotes": "60"}, {"id": 1138, "name": "Alphabet Board Path", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/alphabet-board-path", "submissions": 50277, "accepted_subsmissions": 25706, "group": 2, "topics": ["Hash Table", "String"], "upvotes": "398", "downvotes": "98"}, {"id": 1137, "name": "N-th Tribonacci Number", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/n-th-tribonacci-number", "submissions": 122246, "accepted_subsmissions": 68340, "group": 2, "topics": ["Recursion"], "upvotes": "486", "downvotes": "52"}, {"id": 1301, "name": "Number of Paths with Max Score", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/number-of-paths-with-max-score", "submissions": 17524, "accepted_subsmissions": 6704, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "194", "downvotes": "11"}, {"id": 1300, "name": "Sum of Mutated Array Closest to Target", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/sum-of-mutated-array-closest-to-target", "submissions": 38114, "accepted_subsmissions": 16384, "group": 2, "topics": ["Array", "Binary Search"], "upvotes": "451", "downvotes": "66"}, {"id": 1299, "name": "Replace Elements with Greatest Element on Right Side", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/replace-elements-with-greatest-element-on-right-side", "submissions": 155075, "accepted_subsmissions": 115593, "group": 2, "topics": ["Array"], "upvotes": "688", "downvotes": "140"}, {"id": 1131, "name": "Maximum of Absolute Value Expression", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/maximum-of-absolute-value-expression", "submissions": 22212, "accepted_subsmissions": 11515, "group": 2, "topics": ["Math", "Bit Manipulation"], "upvotes": "289", "downvotes": "252"}, {"id": 1129, "name": "Shortest Path with Alternating Colors", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/shortest-path-with-alternating-colors", "submissions": 52550, "accepted_subsmissions": 21161, "group": 2, "topics": ["Breadth-first Search", "Graph"], "upvotes": "629", "downvotes": "35"}, {"id": 1130, "name": "Minimum Cost Tree From Leaf Values", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/minimum-cost-tree-from-leaf-values", "submissions": 73784, "accepted_subsmissions": 49642, "group": 2, "topics": ["Dynamic Programming", "Stack", "Tree"], "upvotes": "1963", "downvotes": "150"}, {"id": 1128, "name": "Number of Equivalent Domino Pairs", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/number-of-equivalent-domino-pairs", "submissions": 70605, "accepted_subsmissions": 32769, "group": 2, "topics": ["Array"], "upvotes": "303", "downvotes": "151"}, {"id": 1289, "name": "Minimum Falling Path Sum II", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/minimum-falling-path-sum-ii", "submissions": 25303, "accepted_subsmissions": 15808, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "350", "downvotes": "37"}, {"id": 1627, "name": "Graph Connectivity With Threshold", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/graph-connectivity-with-threshold", "submissions": 14332, "accepted_subsmissions": 5622, "group": 2, "topics": ["Math", "Union Find"], "upvotes": "156", "downvotes": "19"}, {"id": 1288, "name": "Remove Covered Intervals", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/remove-covered-intervals", "submissions": 78407, "accepted_subsmissions": 44928, "group": 2, "topics": ["Greedy", "Sort", "Line Sweep"], "upvotes": "619", "downvotes": "26"}, {"id": 1287, "name": "Element Appearing More Than 25% In Sorted Array", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/element-appearing-more-than-25-in-sorted-array", "submissions": 66020, "accepted_subsmissions": 39697, "group": 2, "topics": ["Array"], "upvotes": "420", "downvotes": "29"}, {"id": 1125, "name": "Smallest Sufficient Team", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/smallest-sufficient-team", "submissions": 24392, "accepted_subsmissions": 11482, "group": 2, "topics": ["Dynamic Programming", "Bit Manipulation"], "upvotes": "462", "downvotes": "9"}, {"id": 1124, "name": "Longest Well-Performing Interval", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/longest-well-performing-interval", "submissions": 45396, "accepted_subsmissions": 15111, "group": 2, "topics": ["Stack"], "upvotes": "571", "downvotes": "72"}, {"id": 1123, "name": "Lowest Common Ancestor of Deepest Leaves", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/lowest-common-ancestor-of-deepest-leaves", "submissions": 68920, "accepted_subsmissions": 46829, "group": 2, "topics": ["Tree", "Depth-first Search"], "upvotes": "643", "downvotes": "621"}, {"id": 1122, "name": "Relative Sort Array", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/relative-sort-array", "submissions": 127731, "accepted_subsmissions": 86971, "group": 2, "topics": ["Array", "Sort"], "upvotes": "1003", "downvotes": "69"}, {"id": 1291, "name": "Sequential Digits", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/sequential-digits", "submissions": 63729, "accepted_subsmissions": 36606, "group": 2, "topics": ["Backtracking"], "upvotes": "519", "downvotes": "53"}, {"id": 1286, "name": "Iterator for Combination", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/iterator-for-combination", "submissions": 54746, "accepted_subsmissions": 38834, "group": 2, "topics": ["Backtracking", "Design"], "upvotes": "570", "downvotes": "46"}, {"id": 1619, "name": "Mean of Array After Removing Some Elements", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/mean-of-array-after-removing-some-elements", "submissions": 23065, "accepted_subsmissions": 14988, "group": 2, "topics": ["Array"], "upvotes": "123", "downvotes": "25"}, {"id": 1111, "name": "Maximum Nesting Depth of Two Valid Parentheses Strings", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/maximum-nesting-depth-of-two-valid-parentheses-strings", "submissions": 18596, "accepted_subsmissions": 13510, "group": 2, "topics": ["Binary Search", "Greedy"], "upvotes": "178", "downvotes": "834"}, {"id": 1110, "name": "Delete Nodes And Return Forest", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/delete-nodes-and-return-forest", "submissions": 137198, "accepted_subsmissions": 92984, "group": 2, "topics": ["Tree", "Depth-first Search"], "upvotes": "1679", "downvotes": "53"}, {"id": 1109, "name": "Corporate Flight Bookings", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/corporate-flight-bookings", "submissions": 44391, "accepted_subsmissions": 24093, "group": 2, "topics": ["Array", "Math"], "upvotes": "648", "downvotes": "121"}, {"id": 1108, "name": "Defanging an IP Address", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/defanging-an-ip-address", "submissions": 324467, "accepted_subsmissions": 286810, "group": 2, "topics": ["String"], "upvotes": "630", "downvotes": "1108"}, {"id": 1106, "name": "Parsing A Boolean Expression", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/parsing-a-boolean-expression", "submissions": 21753, "accepted_subsmissions": 12899, "group": 2, "topics": ["String"], "upvotes": "331", "downvotes": "21"}, {"id": 1105, "name": "Filling Bookcase Shelves", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/filling-bookcase-shelves", "submissions": 38892, "accepted_subsmissions": 22385, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "821", "downvotes": "52"}, {"id": 1103, "name": "Distribute Candies to People", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/distribute-candies-to-people", "submissions": 89296, "accepted_subsmissions": 56676, "group": 2, "topics": ["Math"], "upvotes": "499", "downvotes": "148"}, {"id": 1104, "name": "Path In Zigzag Labelled Binary Tree", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/path-in-zigzag-labelled-binary-tree", "submissions": 31975, "accepted_subsmissions": 23380, "group": 2, "topics": ["Math", "Tree"], "upvotes": "582", "downvotes": "186"}, {"id": 1096, "name": "Brace Expansion II", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/brace-expansion-ii", "submissions": 21055, "accepted_subsmissions": 13176, "group": 2, "topics": ["String"], "upvotes": "256", "downvotes": "159"}, {"id": 1095, "name": "Find in Mountain Array", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/find-in-mountain-array", "submissions": 67488, "accepted_subsmissions": 24372, "group": 2, "topics": ["Binary Search"], "upvotes": "478", "downvotes": "36"}, {"id": 1094, "name": "Car Pooling", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/car-pooling", "submissions": 115647, "accepted_subsmissions": 69024, "group": 2, "topics": ["Greedy"], "upvotes": "1151", "downvotes": "38"}, {"id": 1093, "name": "Statistics from a Large Sample", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/statistics-from-a-large-sample", "submissions": 20733, "accepted_subsmissions": 10212, "group": 2, "topics": ["Math", "Two Pointers"], "upvotes": "0", "downvotes": "2"}, {"id": 1091, "name": "Shortest Path in Binary Matrix", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/shortest-path-in-binary-matrix", "submissions": 198078, "accepted_subsmissions": 79307, "group": 2, "topics": ["Breadth-first Search"], "upvotes": "1097", "downvotes": "75"}, {"id": 1092, "name": "Shortest Common Supersequence ", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/shortest-common-supersequence", "submissions": 40032, "accepted_subsmissions": 21260, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "890", "downvotes": "24"}, {"id": 1090, "name": "Largest Values From Labels", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/largest-values-from-labels", "submissions": 32315, "accepted_subsmissions": 19409, "group": 2, "topics": ["Hash Table", "Greedy"], "upvotes": "173", "downvotes": "421"}, {"id": 1089, "name": "Duplicate Zeros", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/duplicate-zeros", "submissions": 261263, "accepted_subsmissions": 135176, "group": 2, "topics": ["Array"], "upvotes": "863", "downvotes": "287"}, {"id": 1079, "name": "Letter Tile Possibilities", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/letter-tile-possibilities", "submissions": 59762, "accepted_subsmissions": 45361, "group": 2, "topics": ["Backtracking"], "upvotes": "955", "downvotes": "35"}, {"id": 1081, "name": "Smallest Subsequence of Distinct Characters", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/smallest-subsequence-of-distinct-characters", "submissions": 39244, "accepted_subsmissions": 20990, "group": 2, "topics": ["String", "Stack", "Greedy"], "upvotes": "830", "downvotes": "109"}, {"id": 1080, "name": "Insufficient Nodes in Root to Leaf Paths", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/insufficient-nodes-in-root-to-leaf-paths", "submissions": 35597, "accepted_subsmissions": 17783, "group": 2, "topics": ["Depth-first Search"], "upvotes": "241", "downvotes": "379"}, {"id": 1078, "name": "Occurrences After Bigram", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/occurrences-after-bigram", "submissions": 57865, "accepted_subsmissions": 37572, "group": 2, "topics": ["Hash Table"], "upvotes": "208", "downvotes": "223"}, {"id": 1073, "name": "Adding Two Negabinary Numbers", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/adding-two-negabinary-numbers", "submissions": 24790, "accepted_subsmissions": 8629, "group": 2, "topics": ["Math"], "upvotes": "150", "downvotes": "67"}, {"id": 1072, "name": "Flip Columns For Maximum Number of Equal Rows", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/flip-columns-for-maximum-number-of-equal-rows", "submissions": 20854, "accepted_subsmissions": 12817, "group": 2, "topics": ["Hash Table"], "upvotes": "344", "downvotes": "31"}, {"id": 1071, "name": "Greatest Common Divisor of Strings", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/greatest-common-divisor-of-strings", "submissions": 84747, "accepted_subsmissions": 43385, "group": 2, "topics": ["String"], "upvotes": "744", "downvotes": "172"}, {"id": 1074, "name": "Number of Submatrices That Sum to Target", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/number-of-submatrices-that-sum-to-target", "submissions": 39131, "accepted_subsmissions": 24205, "group": 2, "topics": ["Array", "Dynamic Programming", "Sliding Window"], "upvotes": "782", "downvotes": "31"}, {"id": 1054, "name": "Distant Barcodes", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/distant-barcodes", "submissions": 49173, "accepted_subsmissions": 21743, "group": 2, "topics": ["Heap", "Sort"], "upvotes": "544", "downvotes": "23"}, {"id": 1053, "name": "Previous Permutation With One Swap", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/previous-permutation-with-one-swap", "submissions": 37454, "accepted_subsmissions": 19140, "group": 2, "topics": ["Array", "Greedy"], "upvotes": "244", "downvotes": "283"}, {"id": 1052, "name": "Grumpy Bookstore Owner", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/grumpy-bookstore-owner", "submissions": 65591, "accepted_subsmissions": 36594, "group": 2, "topics": ["Array", "Sliding Window"], "upvotes": "682", "downvotes": "68"}, {"id": 1051, "name": "Height Checker", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/height-checker", "submissions": 155485, "accepted_subsmissions": 112121, "group": 2, "topics": ["Array"], "upvotes": "386", "downvotes": "1799"}, {"id": 1163, "name": "Last Substring in Lexicographical Order", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/last-substring-in-lexicographical-order", "submissions": 64913, "accepted_subsmissions": 23564, "group": 2, "topics": ["String", "Suffix Array"], "upvotes": "306", "downvotes": "349"}, {"id": 1049, "name": "Last Stone Weight II", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/last-stone-weight-ii", "submissions": 64285, "accepted_subsmissions": 29217, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "1134", "downvotes": "47"}, {"id": 1048, "name": "Longest String Chain", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/longest-string-chain", "submissions": 168266, "accepted_subsmissions": 93398, "group": 2, "topics": ["Hash Table", "Dynamic Programming"], "upvotes": "1504", "downvotes": "96"}, {"id": 1047, "name": "Remove All Adjacent Duplicates In String", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/remove-all-adjacent-duplicates-in-string", "submissions": 185180, "accepted_subsmissions": 131351, "group": 2, "topics": ["Stack"], "upvotes": "1392", "downvotes": "93"}, {"id": 1046, "name": "Last Stone Weight", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/last-stone-weight", "submissions": 261803, "accepted_subsmissions": 163496, "group": 2, "topics": ["Heap", "Greedy"], "upvotes": "1253", "downvotes": "35"}, {"id": 1044, "name": "Longest Duplicate Substring", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/longest-duplicate-substring", "submissions": 106268, "accepted_subsmissions": 33393, "group": 2, "topics": ["Hash Table", "Binary Search", "Suffix Array"], "upvotes": "786", "downvotes": "246"}, {"id": 1043, "name": "Partition Array for Maximum Sum", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/partition-array-for-maximum-sum", "submissions": 41804, "accepted_subsmissions": 28084, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "1081", "downvotes": "132"}, {"id": 1042, "name": "Flower Planting With No Adjacent", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/flower-planting-with-no-adjacent", "submissions": 81118, "accepted_subsmissions": 39571, "group": 2, "topics": ["Graph"], "upvotes": "511", "downvotes": "547"}, {"id": 1041, "name": "Robot Bounded In Circle", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/robot-bounded-in-circle", "submissions": 111982, "accepted_subsmissions": 61628, "group": 2, "topics": ["Math"], "upvotes": "918", "downvotes": "278"}, {"id": 1162, "name": "As Far from Land as Possible", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/as-far-from-land-as-possible", "submissions": 70017, "accepted_subsmissions": 31842, "group": 2, "topics": ["Breadth-first Search", "Graph"], "upvotes": "795", "downvotes": "34"}, {"id": 1161, "name": "Maximum Level Sum of a Binary Tree", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/maximum-level-sum-of-a-binary-tree", "submissions": 91860, "accepted_subsmissions": 63660, "group": 2, "topics": ["Tree", "Breadth-first Search"], "upvotes": "716", "downvotes": "36"}, {"id": 1037, "name": "Valid Boomerang", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/valid-boomerang", "submissions": 60644, "accepted_subsmissions": 22911, "group": 2, "topics": ["Math"], "upvotes": "149", "downvotes": "281"}, {"id": 1038, "name": "Binary Search Tree to Greater Sum Tree", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/binary-search-tree-to-greater-sum-tree", "submissions": 90057, "accepted_subsmissions": 74188, "group": 2, "topics": ["Tree", "Depth-first Search", "Binary Search Tree", "Recursion"], "upvotes": "1353", "downvotes": "112"}, {"id": 1040, "name": "Moving Stones Until Consecutive II", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/moving-stones-until-consecutive-ii", "submissions": 11620, "accepted_subsmissions": 6287, "group": 2, "topics": ["Array", "Sliding Window"], "upvotes": "216", "downvotes": "398"}, {"id": 1160, "name": "Find Words That Can Be Formed by Characters", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/find-words-that-can-be-formed-by-characters", "submissions": 108886, "accepted_subsmissions": 73947, "group": 2, "topics": ["Array", "Hash Table"], "upvotes": "566", "downvotes": "89"}, {"id": 1039, "name": "Minimum Score Triangulation of Polygon", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/minimum-score-triangulation-of-polygon", "submissions": 28572, "accepted_subsmissions": 14330, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "618", "downvotes": "83"}, {"id": 1036, "name": "Escape a Large Maze", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/escape-a-large-maze", "submissions": 34335, "accepted_subsmissions": 11813, "group": 2, "topics": ["Breadth-first Search"], "upvotes": "281", "downvotes": "116"}, {"id": 1035, "name": "Uncrossed Lines", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/uncrossed-lines", "submissions": 92262, "accepted_subsmissions": 51778, "group": 2, "topics": ["Array"], "upvotes": "1088", "downvotes": "23"}, {"id": 1034, "name": "Coloring A Border", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/coloring-a-border", "submissions": 28681, "accepted_subsmissions": 13109, "group": 2, "topics": ["Depth-first Search"], "upvotes": "182", "downvotes": "331"}, {"id": 1033, "name": "Moving Stones Until Consecutive", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/moving-stones-until-consecutive", "submissions": 36869, "accepted_subsmissions": 15943, "group": 2, "topics": ["Brainteaser"], "upvotes": "99", "downvotes": "507"}, {"id": 1032, "name": "Stream of Characters", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/stream-of-characters", "submissions": 93070, "accepted_subsmissions": 45252, "group": 2, "topics": ["Trie"], "upvotes": "767", "downvotes": "113"}, {"id": 1031, "name": "Maximum Sum of Two Non-Overlapping Subarrays", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/maximum-sum-of-two-non-overlapping-subarrays", "submissions": 58804, "accepted_subsmissions": 34666, "group": 2, "topics": ["Array"], "upvotes": "972", "downvotes": "49"}, {"id": 1029, "name": "Two City Scheduling", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/two-city-scheduling", "submissions": 188594, "accepted_subsmissions": 109524, "group": 2, "topics": ["Greedy"], "upvotes": "1784", "downvotes": "192"}, {"id": 1030, "name": "Matrix Cells in Distance Order", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/matrix-cells-in-distance-order", "submissions": 44728, "accepted_subsmissions": 30001, "group": 2, "topics": ["Sort"], "upvotes": "283", "downvotes": "140"}, {"id": 1028, "name": "Recover a Tree From Preorder Traversal", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/recover-a-tree-from-preorder-traversal", "submissions": 34938, "accepted_subsmissions": 24786, "group": 2, "topics": ["Tree", "Depth-first Search"], "upvotes": "621", "downvotes": "21"}, {"id": 1026, "name": "Maximum Difference Between Node and Ancestor", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/maximum-difference-between-node-and-ancestor", "submissions": 113059, "accepted_subsmissions": 78635, "group": 2, "topics": ["Tree", "Depth-first Search"], "upvotes": "1158", "downvotes": "42"}, {"id": 1027, "name": "Longest Arithmetic Subsequence", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/longest-arithmetic-subsequence", "submissions": 116042, "accepted_subsmissions": 57746, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "1189", "downvotes": "66"}, {"id": 1025, "name": "Divisor Game", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/divisor-game", "submissions": 144832, "accepted_subsmissions": 95753, "group": 2, "topics": ["Math", "Dynamic Programming"], "upvotes": "704", "downvotes": "1922"}, {"id": 1024, "name": "Video Stitching", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/video-stitching", "submissions": 62718, "accepted_subsmissions": 30725, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "687", "downvotes": "34"}, {"id": 1023, "name": "Camelcase Matching", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/camelcase-matching", "submissions": 38757, "accepted_subsmissions": 22312, "group": 2, "topics": ["String", "Trie"], "upvotes": "327", "downvotes": "166"}, {"id": 1022, "name": "Sum of Root To Leaf Binary Numbers", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/sum-of-root-to-leaf-binary-numbers", "submissions": 124418, "accepted_subsmissions": 89006, "group": 2, "topics": ["Tree"], "upvotes": "1088", "downvotes": "86"}, {"id": 1021, "name": "Remove Outermost Parentheses", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/remove-outermost-parentheses", "submissions": 160298, "accepted_subsmissions": 126792, "group": 2, "topics": ["Stack"], "upvotes": "757", "downvotes": "816"}, {"id": 1020, "name": "Number of Enclaves", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/number-of-enclaves", "submissions": 42300, "accepted_subsmissions": 24981, "group": 2, "topics": ["Depth-first Search"], "upvotes": "471", "downvotes": "24"}, {"id": 1019, "name": "Next Greater Node In Linked List", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/next-greater-node-in-linked-list", "submissions": 113793, "accepted_subsmissions": 66311, "group": 2, "topics": ["Linked List", "Stack"], "upvotes": "1247", "downvotes": "71"}, {"id": 1018, "name": "Binary Prefix Divisible By 5", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/binary-prefix-divisible-by-5", "submissions": 62617, "accepted_subsmissions": 29919, "group": 2, "topics": ["Array"], "upvotes": "350", "downvotes": "109"}, {"id": 1017, "name": "Convert to Base -2", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/convert-to-base-2", "submissions": 23138, "accepted_subsmissions": 13831, "group": 2, "topics": ["Math"], "upvotes": "223", "downvotes": "186"}, {"id": 1016, "name": "Binary String With Substrings Representing 1 To N", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/binary-string-with-substrings-representing-1-to-n", "submissions": 36264, "accepted_subsmissions": 21347, "group": 2, "topics": ["String"], "upvotes": "157", "downvotes": "381"}, {"id": 1015, "name": "Smallest Integer Divisible by K", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/smallest-integer-divisible-by-k", "submissions": 64858, "accepted_subsmissions": 27146, "group": 2, "topics": ["Math"], "upvotes": "364", "downvotes": "384"}, {"id": 1014, "name": "Best Sightseeing Pair", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/best-sightseeing-pair", "submissions": 40773, "accepted_subsmissions": 21584, "group": 2, "topics": ["Array"], "upvotes": "593", "downvotes": "27"}, {"id": 1013, "name": "Partition Array Into Three Parts With Equal Sum", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/partition-array-into-three-parts-with-equal-sum", "submissions": 92015, "accepted_subsmissions": 44721, "group": 2, "topics": ["Array"], "upvotes": "642", "downvotes": "80"}, {"id": 1012, "name": "Numbers With Repeated Digits", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/numbers-with-repeated-digits", "submissions": 18164, "accepted_subsmissions": 6863, "group": 2, "topics": ["Math", "Dynamic Programming"], "upvotes": "273", "downvotes": "51"}, {"id": 1011, "name": "Capacity To Ship Packages Within D Days", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/capacity-to-ship-packages-within-d-days", "submissions": 113132, "accepted_subsmissions": 67599, "group": 2, "topics": ["Array", "Binary Search"], "upvotes": "1886", "downvotes": "56"}, {"id": 1010, "name": "Pairs of Songs With Total Durations Divisible by 60", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/pairs-of-songs-with-total-durations-divisible-by-60", "submissions": 179173, "accepted_subsmissions": 90336, "group": 2, "topics": ["Array"], "upvotes": "1265", "downvotes": "77"}, {"id": 1009, "name": "Complement of Base 10 Integer", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/complement-of-base-10-integer", "submissions": 103556, "accepted_subsmissions": 63651, "group": 2, "topics": ["Math"], "upvotes": "426", "downvotes": "44"}, {"id": 1008, "name": "Construct Binary Search Tree from Preorder Traversal", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/construct-binary-search-tree-from-preorder-traversal", "submissions": 198341, "accepted_subsmissions": 156289, "group": 2, "topics": ["Tree"], "upvotes": "1747", "downvotes": "48"}, {"id": 1007, "name": "Minimum Domino Rotations For Equal Row", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/minimum-domino-rotations-for-equal-row", "submissions": 229754, "accepted_subsmissions": 116931, "group": 2, "topics": ["Array", "Greedy"], "upvotes": "1207", "downvotes": "192"}, {"id": 1006, "name": "Clumsy Factorial", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/clumsy-factorial", "submissions": 28391, "accepted_subsmissions": 15202, "group": 2, "topics": ["Math"], "upvotes": "117", "downvotes": "165"}, {"id": 1005, "name": "Maximize Sum Of Array After K Negations", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/maximize-sum-of-array-after-k-negations", "submissions": 69723, "accepted_subsmissions": 36447, "group": 2, "topics": ["Greedy"], "upvotes": "524", "downvotes": "54"}, {"id": 1004, "name": "Max Consecutive Ones III", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/max-consecutive-ones-iii", "submissions": 152003, "accepted_subsmissions": 92524, "group": 2, "topics": ["Two Pointers", "Sliding Window"], "upvotes": "1944", "downvotes": "29"}, {"id": 1003, "name": "Check If Word Is Valid After Substitutions", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/check-if-word-is-valid-after-substitutions", "submissions": 50697, "accepted_subsmissions": 28639, "group": 2, "topics": ["String", "Stack"], "upvotes": "320", "downvotes": "376"}, {"id": 1002, "name": "Find Common Characters", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/find-common-characters", "submissions": 146411, "accepted_subsmissions": 100484, "group": 2, "topics": ["Array", "Hash Table"], "upvotes": "1358", "downvotes": "136"}, {"id": 1001, "name": "Grid Illumination", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/grid-illumination", "submissions": 30283, "accepted_subsmissions": 11045, "group": 2, "topics": ["Hash Table"], "upvotes": "248", "downvotes": "70"}, {"id": 1000, "name": "Minimum Cost to Merge Stones", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/minimum-cost-to-merge-stones", "submissions": 47311, "accepted_subsmissions": 19163, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "869", "downvotes": "57"}, {"id": 999, "name": "Available Captures for Rook", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/available-captures-for-rook", "submissions": 58066, "accepted_subsmissions": 39357, "group": 2, "topics": ["Array"], "upvotes": "301", "downvotes": "489"}, {"id": 998, "name": "Maximum Binary Tree II", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/maximum-binary-tree-ii", "submissions": 31646, "accepted_subsmissions": 20257, "group": 2, "topics": ["Tree"], "upvotes": "234", "downvotes": "489"}, {"id": 997, "name": "Find the Town Judge", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/find-the-town-judge", "submissions": 323308, "accepted_subsmissions": 161017, "group": 2, "topics": ["Graph"], "upvotes": "1440", "downvotes": "115"}, {"id": 996, "name": "Number of Squareful Arrays", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/number-of-squareful-arrays", "submissions": 37401, "accepted_subsmissions": 18142, "group": 2, "topics": ["Math", "Backtracking", "Graph"], "upvotes": "452", "downvotes": "23"}, {"id": 995, "name": "Minimum Number of K Consecutive Bit Flips", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/minimum-number-of-k-consecutive-bit-flips", "submissions": 37152, "accepted_subsmissions": 18544, "group": 2, "topics": ["Greedy", "Sliding Window"], "upvotes": "495", "downvotes": "38"}, {"id": 994, "name": "Rotting Oranges", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/rotting-oranges", "submissions": 403515, "accepted_subsmissions": 200182, "group": 2, "topics": ["Breadth-first Search"], "upvotes": "3119", "downvotes": "213"}, {"id": 993, "name": "Cousins in Binary Tree", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/cousins-in-binary-tree", "submissions": 265762, "accepted_subsmissions": 139092, "group": 2, "topics": ["Tree", "Breadth-first Search"], "upvotes": "1362", "downvotes": "72"}, {"id": 992, "name": "Subarrays with K Different Integers", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/subarrays-with-k-different-integers", "submissions": 81936, "accepted_subsmissions": 41570, "group": 2, "topics": ["Hash Table", "Two Pointers", "Sliding Window"], "upvotes": "1600", "downvotes": "28"}, {"id": 991, "name": "Broken Calculator", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/broken-calculator", "submissions": 83155, "accepted_subsmissions": 41340, "group": 2, "topics": ["Math", "Greedy"], "upvotes": "849", "downvotes": "129"}, {"id": 990, "name": "Satisfiability of Equality Equations", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/satisfiability-of-equality-equations", "submissions": 57052, "accepted_subsmissions": 26746, "group": 2, "topics": ["Union Find", "Graph"], "upvotes": "761", "downvotes": "6"}, {"id": 989, "name": "Add to Array-Form of Integer", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/add-to-array-form-of-integer", "submissions": 143899, "accepted_subsmissions": 64633, "group": 2, "topics": ["Array"], "upvotes": "555", "downvotes": "88"}, {"id": 988, "name": "Smallest String Starting From Leaf", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/smallest-string-starting-from-leaf", "submissions": 74765, "accepted_subsmissions": 34945, "group": 2, "topics": ["Tree", "Depth-first Search"], "upvotes": "575", "downvotes": "112"}, {"id": 987, "name": "Vertical Order Traversal of a Binary Tree", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/vertical-order-traversal-of-a-binary-tree", "submissions": 339104, "accepted_subsmissions": 131868, "group": 2, "topics": ["Hash Table", "Tree", "Depth-first Search", "Breadth-first Search"], "upvotes": "1350", "downvotes": "2344"}, {"id": 986, "name": "Interval List Intersections", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/interval-list-intersections", "submissions": 249316, "accepted_subsmissions": 170483, "group": 2, "topics": ["Two Pointers"], "upvotes": "2090", "downvotes": "59"}, {"id": 985, "name": "Sum of Even Numbers After Queries", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/sum-of-even-numbers-after-queries", "submissions": 85886, "accepted_subsmissions": 52136, "group": 2, "topics": ["Array"], "upvotes": "488", "downvotes": "183"}, {"id": 984, "name": "String Without AAA or BBB", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/string-without-aaa-or-bbb", "submissions": 56073, "accepted_subsmissions": 21721, "group": 2, "topics": ["Greedy"], "upvotes": "277", "downvotes": "277"}, {"id": 983, "name": "Minimum Cost For Tickets", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/minimum-cost-for-tickets", "submissions": 148907, "accepted_subsmissions": 93469, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "2605", "downvotes": "48"}, {"id": 982, "name": "Triples with Bitwise AND Equal To Zero", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/triples-with-bitwise-and-equal-to-zero", "submissions": 17100, "accepted_subsmissions": 9625, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "143", "downvotes": "155"}, {"id": 981, "name": "Time Based Key-Value Store", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/time-based-key-value-store", "submissions": 180582, "accepted_subsmissions": 97785, "group": 2, "topics": ["Hash Table", "Binary Search"], "upvotes": "1117", "downvotes": "139"}, {"id": 980, "name": "Unique Paths III", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/unique-paths-iii", "submissions": 86610, "accepted_subsmissions": 66752, "group": 2, "topics": ["Backtracking", "Depth-first Search"], "upvotes": "1331", "downvotes": "88"}, {"id": 979, "name": "Distribute Coins in Binary Tree", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/distribute-coins-in-binary-tree", "submissions": 79681, "accepted_subsmissions": 55604, "group": 2, "topics": ["Tree", "Depth-first Search"], "upvotes": "2275", "downvotes": "79"}, {"id": 978, "name": "Longest Turbulent Subarray", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/longest-turbulent-subarray", "submissions": 81289, "accepted_subsmissions": 37919, "group": 2, "topics": ["Array", "Dynamic Programming", "Sliding Window"], "upvotes": "576", "downvotes": "119"}, {"id": 977, "name": "Squares of a Sorted Array", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/squares-of-a-sorted-array", "submissions": 605856, "accepted_subsmissions": 435911, "group": 2, "topics": ["Array", "Two Pointers"], "upvotes": "2140", "downvotes": "114"}, {"id": 976, "name": "Largest Perimeter Triangle", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/largest-perimeter-triangle", "submissions": 72198, "accepted_subsmissions": 42290, "group": 2, "topics": ["Math", "Sort"], "upvotes": "499", "downvotes": "53"}, {"id": 975, "name": "Odd Even Jump", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/odd-even-jump", "submissions": 94499, "accepted_subsmissions": 39249, "group": 2, "topics": ["Dynamic Programming", "Stack", "Ordered Map"], "upvotes": "889", "downvotes": "274"}, {"id": 974, "name": "Subarray Sums Divisible by K", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/subarray-sums-divisible-by-k", "submissions": 108282, "accepted_subsmissions": 55118, "group": 2, "topics": ["Array", "Hash Table"], "upvotes": "1491", "downvotes": "112"}, {"id": 973, "name": "K Closest Points to Origin", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/k-closest-points-to-origin", "submissions": 668388, "accepted_subsmissions": 431522, "group": 2, "topics": ["Divide and Conquer", "Heap", "Sort"], "upvotes": "2807", "downvotes": "147"}, {"id": 509, "name": "Fibonacci Number", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/fibonacci-number", "submissions": 481569, "accepted_subsmissions": 324838, "group": 2, "topics": ["Array"], "upvotes": "1123", "downvotes": "219"}, {"id": 972, "name": "Equal Rational Numbers", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/equal-rational-numbers", "submissions": 10728, "accepted_subsmissions": 4517, "group": 2, "topics": ["Math"], "upvotes": "53", "downvotes": "159"}, {"id": 971, "name": "Flip Binary Tree To Match Preorder Traversal", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/flip-binary-tree-to-match-preorder-traversal", "submissions": 33835, "accepted_subsmissions": 15595, "group": 2, "topics": ["Tree", "Depth-first Search"], "upvotes": "337", "downvotes": "161"}, {"id": 970, "name": "Powerful Integers", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/powerful-integers", "submissions": 67547, "accepted_subsmissions": 27016, "group": 2, "topics": ["Hash Table", "Math"], "upvotes": "9", "downvotes": "8"}, {"id": 969, "name": "Pancake Sorting", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/pancake-sorting", "submissions": 82748, "accepted_subsmissions": 56841, "group": 2, "topics": ["Array", "Sort"], "upvotes": "730", "downvotes": "941"}, {"id": 968, "name": "Binary Tree Cameras", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/binary-tree-cameras", "submissions": 77648, "accepted_subsmissions": 30170, "group": 2, "topics": ["Dynamic Programming", "Tree", "Depth-first Search"], "upvotes": "1206", "downvotes": "19"}, {"id": 967, "name": "Numbers With Same Consecutive Differences", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/numbers-with-same-consecutive-differences", "submissions": 93309, "accepted_subsmissions": 41930, "group": 2, "topics": ["Backtracking", "Depth-first Search", "Breadth-first Search", "Recursion"], "upvotes": "610", "downvotes": "118"}, {"id": 966, "name": "Vowel Spellchecker", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/vowel-spellchecker", "submissions": 31329, "accepted_subsmissions": 15017, "group": 2, "topics": ["Hash Table", "String"], "upvotes": "193", "downvotes": "354"}, {"id": 965, "name": "Univalued Binary Tree", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/univalued-binary-tree", "submissions": 169411, "accepted_subsmissions": 114955, "group": 2, "topics": ["Tree"], "upvotes": "772", "downvotes": "46"}, {"id": 964, "name": "Least Operators to Express Number", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/least-operators-to-express-number", "submissions": 13750, "accepted_subsmissions": 6197, "group": 2, "topics": ["Math", "Dynamic Programming"], "upvotes": "205", "downvotes": "54"}, {"id": 963, "name": "Minimum Area Rectangle II", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/minimum-area-rectangle-ii", "submissions": 29686, "accepted_subsmissions": 15419, "group": 2, "topics": ["Math", "Geometry"], "upvotes": "198", "downvotes": "296"}, {"id": 962, "name": "Maximum Width Ramp", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/maximum-width-ramp", "submissions": 52436, "accepted_subsmissions": 24416, "group": 2, "topics": ["Array"], "upvotes": "736", "downvotes": "20"}, {"id": 961, "name": "N-Repeated Element in Size 2N Array", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/n-repeated-element-in-size-2n-array", "submissions": 189662, "accepted_subsmissions": 141341, "group": 2, "topics": ["Hash Table"], "upvotes": "603", "downvotes": "262"}, {"id": 960, "name": "Delete Columns to Make Sorted III", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/delete-columns-to-make-sorted-iii", "submissions": 14558, "accepted_subsmissions": 7990, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "301", "downvotes": "8"}, {"id": 959, "name": "Regions Cut By Slashes", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/regions-cut-by-slashes", "submissions": 37991, "accepted_subsmissions": 25529, "group": 2, "topics": ["Depth-first Search", "Union Find", "Graph"], "upvotes": "1208", "downvotes": "233"}, {"id": 958, "name": "Check Completeness of a Binary Tree", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/check-completeness-of-a-binary-tree", "submissions": 143347, "accepted_subsmissions": 75263, "group": 2, "topics": ["Tree"], "upvotes": "1161", "downvotes": "14"}, {"id": 957, "name": "Prison Cells After N Days", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/prison-cells-after-n-days", "submissions": 291905, "accepted_subsmissions": 117163, "group": 2, "topics": ["Hash Table"], "upvotes": "950", "downvotes": "1246"}, {"id": 956, "name": "Tallest Billboard", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/tallest-billboard", "submissions": 23880, "accepted_subsmissions": 9512, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "428", "downvotes": "16"}, {"id": 955, "name": "Delete Columns to Make Sorted II", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/delete-columns-to-make-sorted-ii", "submissions": 35983, "accepted_subsmissions": 12172, "group": 2, "topics": ["Greedy"], "upvotes": "325", "downvotes": "53"}, {"id": 954, "name": "Array of Doubled Pairs", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/array-of-doubled-pairs", "submissions": 66885, "accepted_subsmissions": 23495, "group": 2, "topics": ["Array", "Hash Table"], "upvotes": "396", "downvotes": "61"}, {"id": 953, "name": "Verifying an Alien Dictionary", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/verifying-an-alien-dictionary", "submissions": 382498, "accepted_subsmissions": 198798, "group": 2, "topics": ["Hash Table"], "upvotes": "1428", "downvotes": "610"}, {"id": 952, "name": "Largest Component Size by Common Factor", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/largest-component-size-by-common-factor", "submissions": 70983, "accepted_subsmissions": 25698, "group": 2, "topics": ["Math", "Union Find"], "upvotes": "556", "downvotes": "67"}, {"id": 951, "name": "Flip Equivalent Binary Trees", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/flip-equivalent-binary-trees", "submissions": 106033, "accepted_subsmissions": 69717, "group": 2, "topics": ["Tree"], "upvotes": "950", "downvotes": "47"}, {"id": 950, "name": "Reveal Cards In Increasing Order", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/reveal-cards-in-increasing-order", "submissions": 58044, "accepted_subsmissions": 43762, "group": 2, "topics": ["Array"], "upvotes": "1175", "downvotes": "198"}, {"id": 949, "name": "Largest Time for Given Digits", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/largest-time-for-given-digits", "submissions": 166660, "accepted_subsmissions": 60300, "group": 2, "topics": ["Math"], "upvotes": "436", "downvotes": "818"}, {"id": 948, "name": "Bag of Tokens", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/bag-of-tokens", "submissions": 70043, "accepted_subsmissions": 32300, "group": 2, "topics": ["Two Pointers", "Greedy", "Sort"], "upvotes": "475", "downvotes": "257"}, {"id": 947, "name": "Most Stones Removed with Same Row or Column", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/most-stones-removed-with-same-row-or-column", "submissions": 119862, "accepted_subsmissions": 66465, "group": 2, "topics": ["Depth-first Search", "Union Find"], "upvotes": "1360", "downvotes": "456"}, {"id": 946, "name": "Validate Stack Sequences", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/validate-stack-sequences", "submissions": 153225, "accepted_subsmissions": 98716, "group": 2, "topics": ["Stack"], "upvotes": "1614", "downvotes": "34"}, {"id": 945, "name": "Minimum Increment to Make Array Unique", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/minimum-increment-to-make-array-unique", "submissions": 71979, "accepted_subsmissions": 33658, "group": 2, "topics": ["Array"], "upvotes": "599", "downvotes": "27"}, {"id": 944, "name": "Delete Columns to Make Sorted", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/delete-columns-to-make-sorted", "submissions": 71751, "accepted_subsmissions": 50871, "group": 2, "topics": ["Greedy"], "upvotes": "212", "downvotes": "1816"}, {"id": 943, "name": "Find the Shortest Superstring", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/find-the-shortest-superstring", "submissions": 28971, "accepted_subsmissions": 12585, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "497", "downvotes": "78"}, {"id": 942, "name": "DI String Match", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/di-string-match", "submissions": 106666, "accepted_subsmissions": 78518, "group": 2, "topics": ["Math"], "upvotes": "1096", "downvotes": "422"}, {"id": 941, "name": "Valid Mountain Array", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/valid-mountain-array", "submissions": 432880, "accepted_subsmissions": 143499, "group": 2, "topics": ["Array"], "upvotes": "853", "downvotes": "94"}, {"id": 940, "name": "Distinct Subsequences II", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/distinct-subsequences-ii", "submissions": 32507, "accepted_subsmissions": 13512, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "506", "downvotes": "17"}, {"id": 939, "name": "Minimum Area Rectangle", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/minimum-area-rectangle", "submissions": 125086, "accepted_subsmissions": 64996, "group": 2, "topics": ["Hash Table"], "upvotes": "905", "downvotes": "171"}, {"id": 938, "name": "Range Sum of BST", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/range-sum-of-bst", "submissions": 416291, "accepted_subsmissions": 345856, "group": 2, "topics": ["Tree", "Depth-first Search", "Recursion"], "upvotes": "2142", "downvotes": "286"}, {"id": 937, "name": "Reorder Data in Log Files", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/reorder-data-in-log-files", "submissions": 359772, "accepted_subsmissions": 196145, "group": 2, "topics": ["String"], "upvotes": "1024", "downvotes": "2819"}, {"id": 936, "name": "Stamping The Sequence", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/stamping-the-sequence", "submissions": 23414, "accepted_subsmissions": 11123, "group": 2, "topics": ["String", "Greedy"], "upvotes": "247", "downvotes": "60"}, {"id": 935, "name": "Knight Dialer", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/knight-dialer", "submissions": 100827, "accepted_subsmissions": 46926, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "793", "downvotes": "284"}, {"id": 934, "name": "Shortest Bridge", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/shortest-bridge", "submissions": 92247, "accepted_subsmissions": 45856, "group": 2, "topics": ["Depth-first Search", "Breadth-first Search"], "upvotes": "1224", "downvotes": "83"}, {"id": 933, "name": "Number of Recent Calls", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/number-of-recent-calls", "submissions": 134766, "accepted_subsmissions": 97506, "group": 2, "topics": ["Queue"], "upvotes": "549", "downvotes": "2128"}, {"id": 932, "name": "Beautiful Array", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/beautiful-array", "submissions": 25159, "accepted_subsmissions": 15444, "group": 2, "topics": ["Divide and Conquer"], "upvotes": "456", "downvotes": "552"}, {"id": 931, "name": "Minimum Falling Path Sum", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/minimum-falling-path-sum", "submissions": 107846, "accepted_subsmissions": 68549, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "1120", "downvotes": "82"}, {"id": 930, "name": "Binary Subarrays With Sum", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/binary-subarrays-with-sum", "submissions": 66374, "accepted_subsmissions": 29619, "group": 2, "topics": ["Hash Table", "Two Pointers"], "upvotes": "741", "downvotes": "32"}, {"id": 929, "name": "Unique Email Addresses", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/unique-email-addresses", "submissions": 367861, "accepted_subsmissions": 247209, "group": 2, "topics": ["String"], "upvotes": "1120", "downvotes": "217"}, {"id": 928, "name": "Minimize Malware Spread II", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/minimize-malware-spread-ii", "submissions": 28857, "accepted_subsmissions": 11979, "group": 2, "topics": ["Depth-first Search", "Union Find", "Graph"], "upvotes": "268", "downvotes": "58"}, {"id": 927, "name": "Three Equal Parts", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/three-equal-parts", "submissions": 26011, "accepted_subsmissions": 9011, "group": 2, "topics": ["Math", "Binary Search", "Greedy"], "upvotes": "286", "downvotes": "61"}, {"id": 926, "name": "Flip String to Monotone Increasing", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/flip-string-to-monotone-increasing", "submissions": 49564, "accepted_subsmissions": 26440, "group": 2, "topics": ["Array"], "upvotes": "758", "downvotes": "24"}, {"id": 925, "name": "Long Pressed Name", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/long-pressed-name", "submissions": 162840, "accepted_subsmissions": 61473, "group": 2, "topics": ["Two Pointers", "String"], "upvotes": "902", "downvotes": "166"}, {"id": 924, "name": "Minimize Malware Spread", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/minimize-malware-spread", "submissions": 70038, "accepted_subsmissions": 29357, "group": 2, "topics": ["Depth-first Search", "Union Find"], "upvotes": "399", "downvotes": "301"}, {"id": 923, "name": "3Sum With Multiplicity", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/3sum-with-multiplicity", "submissions": 63073, "accepted_subsmissions": 22890, "group": 2, "topics": ["Two Pointers"], "upvotes": "457", "downvotes": "93"}, {"id": 922, "name": "Sort Array By Parity II", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/sort-array-by-parity-ii", "submissions": 170655, "accepted_subsmissions": 120502, "group": 2, "topics": ["Array", "Sort"], "upvotes": "955", "downvotes": "57"}, {"id": 921, "name": "Minimum Add to Make Parentheses Valid", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/minimum-add-to-make-parentheses-valid", "submissions": 126978, "accepted_subsmissions": 95057, "group": 2, "topics": ["Stack", "Greedy"], "upvotes": "1101", "downvotes": "80"}, {"id": 920, "name": "Number of Music Playlists", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/number-of-music-playlists", "submissions": 28820, "accepted_subsmissions": 13766, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "528", "downvotes": "52"}, {"id": 919, "name": "Complete Binary Tree Inserter", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/complete-binary-tree-inserter", "submissions": 37731, "accepted_subsmissions": 22233, "group": 2, "topics": ["Tree"], "upvotes": "403", "downvotes": "58"}, {"id": 918, "name": "Maximum Sum Circular Subarray", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/maximum-sum-circular-subarray", "submissions": 200156, "accepted_subsmissions": 68544, "group": 2, "topics": ["Array"], "upvotes": "1536", "downvotes": "73"}, {"id": 917, "name": "Reverse Only Letters", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/reverse-only-letters", "submissions": 130937, "accepted_subsmissions": 77293, "group": 2, "topics": ["String"], "upvotes": "776", "downvotes": "43"}, {"id": 916, "name": "Word Subsets", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/word-subsets", "submissions": 53997, "accepted_subsmissions": 25970, "group": 2, "topics": ["String"], "upvotes": "494", "downvotes": "89"}, {"id": 915, "name": "Partition Array into Disjoint Intervals", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/partition-array-into-disjoint-intervals", "submissions": 53539, "accepted_subsmissions": 24718, "group": 2, "topics": ["Array"], "upvotes": "452", "downvotes": "34"}, {"id": 914, "name": "X of a Kind in a Deck of Cards", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/x-of-a-kind-in-a-deck-of-cards", "submissions": 180951, "accepted_subsmissions": 61816, "group": 2, "topics": ["Array", "Math"], "upvotes": "764", "downvotes": "196"}, {"id": 913, "name": "Cat and Mouse", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/cat-and-mouse", "submissions": 32313, "accepted_subsmissions": 11252, "group": 2, "topics": ["Breadth-first Search", "Minimax"], "upvotes": "430", "downvotes": "85"}, {"id": 912, "name": "Sort an Array", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/sort-an-array", "submissions": 206742, "accepted_subsmissions": 133535, "group": 2, "topics": [], "upvotes": "758", "downvotes": "358"}, {"id": 911, "name": "Online Election", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/online-election", "submissions": 57349, "accepted_subsmissions": 29478, "group": 2, "topics": ["Binary Search"], "upvotes": "451", "downvotes": "372"}, {"id": 910, "name": "Smallest Range II", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/smallest-range-ii", "submissions": 80255, "accepted_subsmissions": 25064, "group": 2, "topics": ["Math", "Greedy"], "upvotes": "648", "downvotes": "280"}, {"id": 909, "name": "Snakes and Ladders", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/snakes-and-ladders", "submissions": 114042, "accepted_subsmissions": 44795, "group": 2, "topics": ["Breadth-first Search"], "upvotes": "547", "downvotes": "1085"}, {"id": 908, "name": "Smallest Range I", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/smallest-range-i", "submissions": 72771, "accepted_subsmissions": 48318, "group": 2, "topics": ["Math"], "upvotes": "294", "downvotes": "1286"}, {"id": 907, "name": "Sum of Subarray Minimums", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/sum-of-subarray-minimums", "submissions": 114810, "accepted_subsmissions": 38018, "group": 2, "topics": ["Array", "Stack"], "upvotes": "1830", "downvotes": "119"}, {"id": 906, "name": "Super Palindromes", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/super-palindromes", "submissions": 19438, "accepted_subsmissions": 6372, "group": 2, "topics": ["Math"], "upvotes": "94", "downvotes": "174"}, {"id": 905, "name": "Sort Array By Parity", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/sort-array-by-parity", "submissions": 407551, "accepted_subsmissions": 305681, "group": 2, "topics": ["Array"], "upvotes": "1588", "downvotes": "86"}, {"id": 904, "name": "Fruit Into Baskets", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/fruit-into-baskets", "submissions": 293696, "accepted_subsmissions": 126312, "group": 2, "topics": ["Two Pointers"], "upvotes": "1131", "downvotes": "1635"}, {"id": 903, "name": "Valid Permutations for DI Sequence", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/valid-permutations-for-di-sequence", "submissions": 14866, "accepted_subsmissions": 8048, "group": 2, "topics": ["Divide and Conquer", "Dynamic Programming"], "upvotes": "345", "downvotes": "30"}, {"id": 902, "name": "Numbers At Most N Given Digit Set", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/numbers-at-most-n-given-digit-set", "submissions": 55676, "accepted_subsmissions": 20095, "group": 2, "topics": ["Math", "Dynamic Programming"], "upvotes": "484", "downvotes": "68"}, {"id": 901, "name": "Online Stock Span", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/online-stock-span", "submissions": 141614, "accepted_subsmissions": 86902, "group": 2, "topics": ["Stack"], "upvotes": "1351", "downvotes": "157"}, {"id": 900, "name": "RLE Iterator", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/rle-iterator", "submissions": 53895, "accepted_subsmissions": 29889, "group": 2, "topics": ["Array"], "upvotes": "317", "downvotes": "96"}, {"id": 899, "name": "Orderly Queue", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/orderly-queue", "submissions": 17463, "accepted_subsmissions": 9295, "group": 2, "topics": ["Math", "String"], "upvotes": "248", "downvotes": "223"}, {"id": 898, "name": "Bitwise ORs of Subarrays", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/bitwise-ors-of-subarrays", "submissions": 54648, "accepted_subsmissions": 18760, "group": 2, "topics": ["Dynamic Programming", "Bit Manipulation"], "upvotes": "664", "downvotes": "141"}, {"id": 897, "name": "Increasing Order Search Tree", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/increasing-order-search-tree", "submissions": 157128, "accepted_subsmissions": 117229, "group": 2, "topics": ["Tree", "Depth-first Search", "Recursion"], "upvotes": "1276", "downvotes": "522"}, {"id": 896, "name": "Monotonic Array", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/monotonic-array", "submissions": 247991, "accepted_subsmissions": 143749, "group": 2, "topics": ["Array"], "upvotes": "921", "downvotes": "43"}, {"id": 895, "name": "Maximum Frequency Stack", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/maximum-frequency-stack", "submissions": 102657, "accepted_subsmissions": 64833, "group": 2, "topics": ["Hash Table", "Stack"], "upvotes": "1715", "downvotes": "36"}, {"id": 894, "name": "All Possible Full Binary Trees", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/all-possible-full-binary-trees", "submissions": 63815, "accepted_subsmissions": 49200, "group": 2, "topics": ["Tree", "Recursion"], "upvotes": "1314", "downvotes": "107"}, {"id": 893, "name": "Groups of Special-Equivalent Strings", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/groups-of-special-equivalent-strings", "submissions": 49539, "accepted_subsmissions": 34303, "group": 2, "topics": ["String"], "upvotes": "323", "downvotes": "1243"}, {"id": 892, "name": "Surface Area of 3D Shapes", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/surface-area-of-3d-shapes", "submissions": 37187, "accepted_subsmissions": 22247, "group": 2, "topics": ["Math", "Geometry"], "upvotes": "298", "downvotes": "448"}, {"id": 891, "name": "Sum of Subsequence Widths", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/sum-of-subsequence-widths", "submissions": 31031, "accepted_subsmissions": 10274, "group": 2, "topics": ["Array", "Math"], "upvotes": "306", "downvotes": "108"}, {"id": 890, "name": "Find and Replace Pattern", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/find-and-replace-pattern", "submissions": 83554, "accepted_subsmissions": 61979, "group": 2, "topics": ["String"], "upvotes": "926", "downvotes": "86"}, {"id": 889, "name": "Construct Binary Tree from Preorder and Postorder Traversal", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/construct-binary-tree-from-preorder-and-postorder-traversal", "submissions": 71499, "accepted_subsmissions": 48369, "group": 2, "topics": ["Tree"], "upvotes": "1144", "downvotes": "62"}, {"id": 888, "name": "Fair Candy Swap", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/fair-candy-swap", "submissions": 101252, "accepted_subsmissions": 59821, "group": 2, "topics": ["Array"], "upvotes": "715", "downvotes": "162"}, {"id": 887, "name": "Super Egg Drop", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/super-egg-drop", "submissions": 103333, "accepted_subsmissions": 27905, "group": 2, "topics": ["Math", "Binary Search", "Dynamic Programming"], "upvotes": "1283", "downvotes": "97"}, {"id": 886, "name": "Possible Bipartition", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/possible-bipartition", "submissions": 159669, "accepted_subsmissions": 72092, "group": 2, "topics": ["Depth-first Search", "Graph"], "upvotes": "1334", "downvotes": "37"}, {"id": 885, "name": "Spiral Matrix III", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/spiral-matrix-iii", "submissions": 36326, "accepted_subsmissions": 25744, "group": 2, "topics": ["Math"], "upvotes": "305", "downvotes": "374"}, {"id": 884, "name": "Uncommon Words from Two Sentences", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/uncommon-words-from-two-sentences", "submissions": 111060, "accepted_subsmissions": 71287, "group": 2, "topics": ["Hash Table"], "upvotes": "572", "downvotes": "102"}, {"id": 883, "name": "Projection Area of 3D Shapes", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/projection-area-of-3d-shapes", "submissions": 48356, "accepted_subsmissions": 33034, "group": 2, "topics": ["Math"], "upvotes": "296", "downvotes": "949"}, {"id": 882, "name": "Reachable Nodes In Subdivided Graph", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/reachable-nodes-in-subdivided-graph", "submissions": 16773, "accepted_subsmissions": 7205, "group": 2, "topics": ["Heap", "Breadth-first Search"], "upvotes": "182", "downvotes": "153"}, {"id": 881, "name": "Boats to Save People", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/boats-to-save-people", "submissions": 139926, "accepted_subsmissions": 68501, "group": 2, "topics": ["Two Pointers", "Greedy"], "upvotes": "1214", "downvotes": "48"}, {"id": 880, "name": "Decoded String at Index", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/decoded-string-at-index", "submissions": 100971, "accepted_subsmissions": 28466, "group": 2, "topics": ["Stack"], "upvotes": "868", "downvotes": "155"}, {"id": 478, "name": "Generate Random Point in a Circle", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/generate-random-point-in-a-circle", "submissions": 35097, "accepted_subsmissions": 13666, "group": 2, "topics": ["Math", "Random", "Rejection Sampling"], "upvotes": "198", "downvotes": "315"}, {"id": 497, "name": "Random Point in Non-overlapping Rectangles", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/random-point-in-non-overlapping-rectangles", "submissions": 77854, "accepted_subsmissions": 30441, "group": 2, "topics": ["Binary Search", "Random"], "upvotes": "322", "downvotes": "521"}, {"id": 519, "name": "Random Flip Matrix", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/random-flip-matrix", "submissions": 26729, "accepted_subsmissions": 10105, "group": 2, "topics": ["Random"], "upvotes": "216", "downvotes": "72"}, {"id": 528, "name": "Random Pick with Weight", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/random-pick-with-weight", "submissions": 358367, "accepted_subsmissions": 160019, "group": 2, "topics": ["Binary Search", "Random"], "upvotes": "1160", "downvotes": "2725"}, {"id": 879, "name": "Profitable Schemes", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/profitable-schemes", "submissions": 28139, "accepted_subsmissions": 11241, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "290", "downvotes": "32"}, {"id": 878, "name": "Nth Magical Number", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/nth-magical-number", "submissions": 39624, "accepted_subsmissions": 11410, "group": 2, "topics": ["Math", "Binary Search"], "upvotes": "261", "downvotes": "66"}, {"id": 877, "name": "Stone Game", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/stone-game", "submissions": 123489, "accepted_subsmissions": 82675, "group": 2, "topics": ["Math", "Dynamic Programming", "Minimax"], "upvotes": "1033", "downvotes": "1271"}, {"id": 876, "name": "Middle of the Linked List", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/middle-of-the-linked-list", "submissions": 443109, "accepted_subsmissions": 306403, "group": 2, "topics": ["Linked List"], "upvotes": "2157", "downvotes": "72"}, {"id": 875, "name": "Koko Eating Bananas", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/koko-eating-bananas", "submissions": 119142, "accepted_subsmissions": 63702, "group": 2, "topics": ["Binary Search"], "upvotes": "1328", "downvotes": "83"}, {"id": 874, "name": "Walking Robot Simulation", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/walking-robot-simulation", "submissions": 66057, "accepted_subsmissions": 24300, "group": 2, "topics": ["Greedy"], "upvotes": "226", "downvotes": "951"}, {"id": 873, "name": "Length of Longest Fibonacci Subsequence", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/length-of-longest-fibonacci-subsequence", "submissions": 76720, "accepted_subsmissions": 36969, "group": 2, "topics": ["Array", "Dynamic Programming"], "upvotes": "945", "downvotes": "37"}, {"id": 872, "name": "Leaf-Similar Trees", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/leaf-similar-trees", "submissions": 183621, "accepted_subsmissions": 118494, "group": 2, "topics": ["Tree", "Depth-first Search"], "upvotes": "1078", "downvotes": "45"}, {"id": 470, "name": "Implement Rand10() Using Rand7()", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/implement-rand10-using-rand7", "submissions": 103826, "accepted_subsmissions": 47824, "group": 2, "topics": ["Random", "Rejection Sampling"], "upvotes": "679", "downvotes": "228"}, {"id": 871, "name": "Minimum Number of Refueling Stops", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/minimum-number-of-refueling-stops", "submissions": 83954, "accepted_subsmissions": 27154, "group": 2, "topics": ["Dynamic Programming", "Heap"], "upvotes": "1105", "downvotes": "24"}, {"id": 870, "name": "Advantage Shuffle", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/advantage-shuffle", "submissions": 55996, "accepted_subsmissions": 26272, "group": 2, "topics": ["Array", "Greedy"], "upvotes": "682", "downvotes": "42"}, {"id": 869, "name": "Reordered Power of 2", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/reordered-power-of-2", "submissions": 31493, "accepted_subsmissions": 17111, "group": 2, "topics": ["Math"], "upvotes": "252", "downvotes": "97"}, {"id": 868, "name": "Binary Gap", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/binary-gap", "submissions": 74528, "accepted_subsmissions": 45434, "group": 2, "topics": ["Math"], "upvotes": "281", "downvotes": "545"}, {"id": 867, "name": "Transpose Matrix", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/transpose-matrix", "submissions": 153458, "accepted_subsmissions": 95223, "group": 2, "topics": ["Array"], "upvotes": "604", "downvotes": "328"}, {"id": 866, "name": "Prime Palindrome", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/prime-palindrome", "submissions": 84182, "accepted_subsmissions": 21117, "group": 2, "topics": ["Math"], "upvotes": "234", "downvotes": "615"}, {"id": 865, "name": "Smallest Subtree with all the Deepest Nodes", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/smallest-subtree-with-all-the-deepest-nodes", "submissions": 109181, "accepted_subsmissions": 70808, "group": 2, "topics": ["Tree", "Depth-first Search", "Breadth-first Search", "Recursion"], "upvotes": "1226", "downvotes": "286"}, {"id": 864, "name": "Shortest Path to Get All Keys", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/shortest-path-to-get-all-keys", "submissions": 35216, "accepted_subsmissions": 14841, "group": 2, "topics": ["Heap", "Breadth-first Search"], "upvotes": "526", "downvotes": "19"}, {"id": 710, "name": "Random Pick with Blacklist", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/random-pick-with-blacklist", "submissions": 52984, "accepted_subsmissions": 17475, "group": 2, "topics": ["Hash Table", "Binary Search", "Sort", "Random"], "upvotes": "409", "downvotes": "74"}, {"id": 863, "name": "All Nodes Distance K in Binary Tree", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/all-nodes-distance-k-in-binary-tree", "submissions": 213326, "accepted_subsmissions": 123707, "group": 2, "topics": ["Tree", "Depth-first Search", "Breadth-first Search"], "upvotes": "3298", "downvotes": "67"}, {"id": 862, "name": "Shortest Subarray with Sum at Least K", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/shortest-subarray-with-sum-at-least-k", "submissions": 174219, "accepted_subsmissions": 43921, "group": 2, "topics": ["Binary Search", "Queue"], "upvotes": "1668", "downvotes": "38"}, {"id": 861, "name": "Score After Flipping Matrix", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/score-after-flipping-matrix", "submissions": 35203, "accepted_subsmissions": 25937, "group": 2, "topics": ["Greedy"], "upvotes": "636", "downvotes": "139"}, {"id": 860, "name": "Lemonade Change", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/lemonade-change", "submissions": 132629, "accepted_subsmissions": 68751, "group": 2, "topics": ["Greedy"], "upvotes": "791", "downvotes": "93"}, {"id": 859, "name": "Buddy Strings", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/buddy-strings", "submissions": 293143, "accepted_subsmissions": 85846, "group": 2, "topics": ["String"], "upvotes": "900", "downvotes": "648"}, {"id": 858, "name": "Mirror Reflection", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/mirror-reflection", "submissions": 40226, "accepted_subsmissions": 23986, "group": 2, "topics": ["Math"], "upvotes": "325", "downvotes": "647"}, {"id": 857, "name": "Minimum Cost to Hire K Workers", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/minimum-cost-to-hire-k-workers", "submissions": 73310, "accepted_subsmissions": 36980, "group": 2, "topics": ["Heap"], "upvotes": "1115", "downvotes": "130"}, {"id": 856, "name": "Score of Parentheses", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/score-of-parentheses", "submissions": 109593, "accepted_subsmissions": 71043, "group": 2, "topics": ["String", "Stack"], "upvotes": "2019", "downvotes": "67"}, {"id": 855, "name": "Exam Room", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/exam-room", "submissions": 84963, "accepted_subsmissions": 36887, "group": 2, "topics": ["Ordered Map"], "upvotes": "702", "downvotes": "293"}, {"id": 854, "name": "K-Similar Strings", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/k-similar-strings", "submissions": 59374, "accepted_subsmissions": 22964, "group": 2, "topics": ["Breadth-first Search", "Graph"], "upvotes": "554", "downvotes": "43"}, {"id": 853, "name": "Car Fleet", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/car-fleet", "submissions": 81376, "accepted_subsmissions": 35868, "group": 2, "topics": ["Sort"], "upvotes": "630", "downvotes": "256"}, {"id": 852, "name": "Peak Index in a Mountain Array", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/peak-index-in-a-mountain-array", "submissions": 296650, "accepted_subsmissions": 212567, "group": 2, "topics": ["Binary Search"], "upvotes": "990", "downvotes": "1351"}, {"id": 851, "name": "Loud and Rich", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/loud-and-rich", "submissions": 28069, "accepted_subsmissions": 14785, "group": 2, "topics": ["Depth-first Search"], "upvotes": "313", "downvotes": "330"}, {"id": 850, "name": "Rectangle Area II", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/rectangle-area-ii", "submissions": 30956, "accepted_subsmissions": 14949, "group": 2, "topics": ["Segment Tree", "Line Sweep"], "upvotes": "439", "downvotes": "32"}, {"id": 849, "name": "Maximize Distance to Closest Person", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/maximize-distance-to-closest-person", "submissions": 227780, "accepted_subsmissions": 101317, "group": 2, "topics": ["Array"], "upvotes": "1244", "downvotes": "128"}, {"id": 848, "name": "Shifting Letters", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/shifting-letters", "submissions": 63559, "accepted_subsmissions": 28741, "group": 2, "topics": ["String"], "upvotes": "359", "downvotes": "69"}, {"id": 847, "name": "Shortest Path Visiting All Nodes", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/shortest-path-visiting-all-nodes", "submissions": 39045, "accepted_subsmissions": 21025, "group": 2, "topics": ["Dynamic Programming", "Breadth-first Search"], "upvotes": "753", "downvotes": "80"}, {"id": 846, "name": "Hand of Straights", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/hand-of-straights", "submissions": 121040, "accepted_subsmissions": 67090, "group": 2, "topics": ["Ordered Map"], "upvotes": "927", "downvotes": "96"}, {"id": 845, "name": "Longest Mountain in Array", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/longest-mountain-in-array", "submissions": 166007, "accepted_subsmissions": 64100, "group": 2, "topics": ["Two Pointers"], "upvotes": "1096", "downvotes": "43"}, {"id": 844, "name": "Backspace String Compare", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/backspace-string-compare", "submissions": 591549, "accepted_subsmissions": 278486, "group": 2, "topics": ["Two Pointers", "Stack"], "upvotes": "2324", "downvotes": "112"}, {"id": 843, "name": "Guess the Word", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/guess-the-word", "submissions": 148364, "accepted_subsmissions": 68931, "group": 2, "topics": ["Minimax"], "upvotes": "755", "downvotes": "769"}, {"id": 842, "name": "Split Array into Fibonacci Sequence", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/split-array-into-fibonacci-sequence", "submissions": 66606, "accepted_subsmissions": 24612, "group": 2, "topics": ["String", "Backtracking", "Greedy"], "upvotes": "604", "downvotes": "199"}, {"id": 841, "name": "Keys and Rooms", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/keys-and-rooms", "submissions": 157450, "accepted_subsmissions": 103042, "group": 2, "topics": ["Depth-first Search", "Graph"], "upvotes": "1495", "downvotes": "107"}, {"id": 840, "name": "Magic Squares In Grid", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/magic-squares-in-grid", "submissions": 73694, "accepted_subsmissions": 27900, "group": 2, "topics": ["Array"], "upvotes": "189", "downvotes": "1329"}, {"id": 839, "name": "Similar String Groups", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/similar-string-groups", "submissions": 82579, "accepted_subsmissions": 33898, "group": 2, "topics": ["Depth-first Search", "Union Find", "Graph"], "upvotes": "497", "downvotes": "147"}, {"id": 838, "name": "Push Dominoes", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/push-dominoes", "submissions": 53922, "accepted_subsmissions": 26902, "group": 2, "topics": ["Two Pointers", "Dynamic Programming"], "upvotes": "805", "downvotes": "79"}, {"id": 837, "name": "New 21 Game", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/new-21-game", "submissions": 60098, "accepted_subsmissions": 21272, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "679", "downvotes": "405"}, {"id": 836, "name": "Rectangle Overlap", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/rectangle-overlap", "submissions": 160475, "accepted_subsmissions": 70785, "group": 2, "topics": ["Math"], "upvotes": "960", "downvotes": "259"}, {"id": 835, "name": "Image Overlap", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/image-overlap", "submissions": 70077, "accepted_subsmissions": 43268, "group": 2, "topics": ["Array"], "upvotes": "570", "downvotes": "760"}, {"id": 834, "name": "Sum of Distances in Tree", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/sum-of-distances-in-tree", "submissions": 41445, "accepted_subsmissions": 19137, "group": 2, "topics": ["Tree", "Depth-first Search"], "upvotes": "1174", "downvotes": "44"}, {"id": 833, "name": "Find And Replace in String", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/find-and-replace-in-string", "submissions": 112889, "accepted_subsmissions": 58118, "group": 2, "topics": ["String"], "upvotes": "443", "downvotes": "513"}, {"id": 832, "name": "Flipping an Image", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/flipping-an-image", "submissions": 293447, "accepted_subsmissions": 229560, "group": 2, "topics": ["Array"], "upvotes": "1282", "downvotes": "175"}, {"id": 622, "name": "Design Circular Queue", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/design-circular-queue", "submissions": 206980, "accepted_subsmissions": 94926, "group": 2, "topics": ["Design", "Queue"], "upvotes": "837", "downvotes": "118"}, {"id": 641, "name": "Design Circular Deque", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/design-circular-deque", "submissions": 46667, "accepted_subsmissions": 26226, "group": 2, "topics": ["Design", "Queue"], "upvotes": "379", "downvotes": "42"}, {"id": 831, "name": "Masking Personal Information", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/masking-personal-information", "submissions": 26611, "accepted_subsmissions": 11924, "group": 2, "topics": ["String"], "upvotes": "90", "downvotes": "350"}, {"id": 830, "name": "Positions of Large Groups", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/positions-of-large-groups", "submissions": 108356, "accepted_subsmissions": 54632, "group": 2, "topics": ["Array"], "upvotes": "461", "downvotes": "99"}, {"id": 829, "name": "Consecutive Numbers Sum", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/consecutive-numbers-sum", "submissions": 110662, "accepted_subsmissions": 43460, "group": 2, "topics": ["Math"], "upvotes": "577", "downvotes": "728"}, {"id": 828, "name": "Count Unique Characters of All Substrings of a Given String", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/count-unique-characters-of-all-substrings-of-a-given-string", "submissions": 31559, "accepted_subsmissions": 14784, "group": 2, "topics": ["Two Pointers"], "upvotes": "597", "downvotes": "60"}, {"id": 827, "name": "Making A Large Island", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/making-a-large-island", "submissions": 61194, "accepted_subsmissions": 28966, "group": 2, "topics": ["Depth-first Search", "Breadth-first Search"], "upvotes": "663", "downvotes": "21"}, {"id": 826, "name": "Most Profit Assigning Work", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/most-profit-assigning-work", "submissions": 63945, "accepted_subsmissions": 25043, "group": 2, "topics": ["Two Pointers"], "upvotes": "481", "downvotes": "77"}, {"id": 825, "name": "Friends Of Appropriate Ages", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/friends-of-appropriate-ages", "submissions": 105549, "accepted_subsmissions": 46646, "group": 2, "topics": ["Array"], "upvotes": "386", "downvotes": "798"}, {"id": 824, "name": "Goat Latin", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/goat-latin", "submissions": 169819, "accepted_subsmissions": 113175, "group": 2, "topics": ["String"], "upvotes": "490", "downvotes": "923"}, {"id": 823, "name": "Binary Trees With Factors", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/binary-trees-with-factors", "submissions": 47143, "accepted_subsmissions": 19060, "group": 2, "topics": [], "upvotes": "644", "downvotes": "78"}, {"id": 822, "name": "Card Flipping Game", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/card-flipping-game", "submissions": 24158, "accepted_subsmissions": 10553, "group": 2, "topics": [], "upvotes": "85", "downvotes": "514"}, {"id": 821, "name": "Shortest Distance to a Character", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/shortest-distance-to-a-character", "submissions": 147781, "accepted_subsmissions": 103565, "group": 2, "topics": [], "upvotes": "1567", "downvotes": "96"}, {"id": 820, "name": "Short Encoding of Words", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/short-encoding-of-words", "submissions": 71409, "accepted_subsmissions": 39409, "group": 2, "topics": [], "upvotes": "586", "downvotes": "208"}, {"id": 707, "name": "Design Linked List", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/design-linked-list", "submissions": 394796, "accepted_subsmissions": 102387, "group": 2, "topics": ["Linked List", "Design"], "upvotes": "796", "downvotes": "845"}, {"id": 819, "name": "Most Common Word", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/most-common-word", "submissions": 486282, "accepted_subsmissions": 221262, "group": 2, "topics": ["String"], "upvotes": "917", "downvotes": "2046"}, {"id": 818, "name": "Race Car", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/race-car", "submissions": 58994, "accepted_subsmissions": 23609, "group": 2, "topics": ["Dynamic Programming", "Heap"], "upvotes": "620", "downvotes": "68"}, {"id": 817, "name": "Linked List Components", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/linked-list-components", "submissions": 92831, "accepted_subsmissions": 53652, "group": 2, "topics": ["Linked List"], "upvotes": "484", "downvotes": "1309"}, {"id": 816, "name": "Ambiguous Coordinates", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/ambiguous-coordinates", "submissions": 23132, "accepted_subsmissions": 11096, "group": 2, "topics": ["String"], "upvotes": "131", "downvotes": "245"}, {"id": 815, "name": "Bus Routes", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/bus-routes", "submissions": 107875, "accepted_subsmissions": 46820, "group": 2, "topics": ["Breadth-first Search"], "upvotes": "1023", "downvotes": "33"}, {"id": 814, "name": "Binary Tree Pruning", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/binary-tree-pruning", "submissions": 114731, "accepted_subsmissions": 82918, "group": 2, "topics": ["Tree"], "upvotes": "1368", "downvotes": "52"}, {"id": 813, "name": "Largest Sum of Averages", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/largest-sum-of-averages", "submissions": 59572, "accepted_subsmissions": 30458, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "1160", "downvotes": "53"}, {"id": 812, "name": "Largest Triangle Area", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/largest-triangle-area", "submissions": 43061, "accepted_subsmissions": 25391, "group": 2, "topics": ["Math"], "upvotes": "233", "downvotes": "1103"}, {"id": 811, "name": "Subdomain Visit Count", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/subdomain-visit-count", "submissions": 161047, "accepted_subsmissions": 115315, "group": 2, "topics": ["Hash Table"], "upvotes": "660", "downvotes": "821"}, {"id": 810, "name": "Chalkboard XOR Game", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/chalkboard-xor-game", "submissions": 9681, "accepted_subsmissions": 4815, "group": 2, "topics": ["Math"], "upvotes": "79", "downvotes": "196"}, {"id": 809, "name": "Expressive Words", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/expressive-words", "submissions": 137715, "accepted_subsmissions": 63983, "group": 2, "topics": ["String"], "upvotes": "447", "downvotes": "1097"}, {"id": 808, "name": "Soup Servings", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/soup-servings", "submissions": 28336, "accepted_subsmissions": 11627, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "190", "downvotes": "607"}, {"id": 807, "name": "Max Increase to Keep City Skyline", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/max-increase-to-keep-city-skyline", "submissions": 116207, "accepted_subsmissions": 98032, "group": 2, "topics": [], "upvotes": "1095", "downvotes": "325"}, {"id": 806, "name": "Number of Lines To Write String", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/number-of-lines-to-write-string", "submissions": 64864, "accepted_subsmissions": 42470, "group": 2, "topics": [], "upvotes": "279", "downvotes": "970"}, {"id": 805, "name": "Split Array With Same Average", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/split-array-with-same-average", "submissions": 70244, "accepted_subsmissions": 18908, "group": 2, "topics": ["Math"], "upvotes": "493", "downvotes": "91"}, {"id": 804, "name": "Unique Morse Code Words", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/unique-morse-code-words", "submissions": 227191, "accepted_subsmissions": 179438, "group": 2, "topics": ["String"], "upvotes": "893", "downvotes": "821"}, {"id": 803, "name": "Bricks Falling When Hit", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/bricks-falling-when-hit", "submissions": 55191, "accepted_subsmissions": 17385, "group": 2, "topics": ["Union Find"], "upvotes": "527", "downvotes": "150"}, {"id": 802, "name": "Find Eventual Safe States", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/find-eventual-safe-states", "submissions": 100044, "accepted_subsmissions": 49887, "group": 2, "topics": ["Depth-first Search", "Graph"], "upvotes": "1078", "downvotes": "209"}, {"id": 801, "name": "Minimum Swaps To Make Sequences Increasing", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/minimum-swaps-to-make-sequences-increasing", "submissions": 104741, "accepted_subsmissions": 40831, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "1445", "downvotes": "105"}, {"id": 706, "name": "Design HashMap", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/design-hashmap", "submissions": 264754, "accepted_subsmissions": 170067, "group": 2, "topics": ["Hash Table", "Design"], "upvotes": "1478", "downvotes": "160"}, {"id": 705, "name": "Design HashSet", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/design-hashset", "submissions": 180776, "accepted_subsmissions": 116781, "group": 2, "topics": ["Hash Table", "Design"], "upvotes": "677", "downvotes": "106"}, {"id": 799, "name": "Champagne Tower", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/champagne-tower", "submissions": 74797, "accepted_subsmissions": 32959, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "767", "downvotes": "57"}, {"id": 798, "name": "Smallest Rotation with Highest Score", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/smallest-rotation-with-highest-score", "submissions": 15253, "accepted_subsmissions": 6860, "group": 2, "topics": [], "upvotes": "260", "downvotes": "17"}, {"id": 797, "name": "All Paths From Source to Target", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/all-paths-from-source-to-target", "submissions": 158366, "accepted_subsmissions": 124296, "group": 2, "topics": ["Backtracking", "Depth-first Search", "Graph"], "upvotes": "1721", "downvotes": "87"}, {"id": 796, "name": "Rotate String", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/rotate-string", "submissions": 189573, "accepted_subsmissions": 93264, "group": 2, "topics": [], "upvotes": "1019", "downvotes": "59"}, {"id": 795, "name": "Number of Subarrays with Bounded Maximum", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/number-of-subarrays-with-bounded-maximum", "submissions": 48835, "accepted_subsmissions": 23313, "group": 2, "topics": ["Array"], "upvotes": "725", "downvotes": "49"}, {"id": 794, "name": "Valid Tic-Tac-Toe State", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/valid-tic-tac-toe-state", "submissions": 94590, "accepted_subsmissions": 31863, "group": 2, "topics": ["Math", "Recursion"], "upvotes": "255", "downvotes": "726"}, {"id": 793, "name": "Preimage Size of Factorial Zeroes Function", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/preimage-size-of-factorial-zeroes-function", "submissions": 23093, "accepted_subsmissions": 9381, "group": 2, "topics": ["Binary Search"], "upvotes": "213", "downvotes": "61"}, {"id": 792, "name": "Number of Matching Subsequences", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/number-of-matching-subsequences", "submissions": 113665, "accepted_subsmissions": 54773, "group": 2, "topics": ["Array"], "upvotes": "1295", "downvotes": "89"}, {"id": 791, "name": "Custom Sort String", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/custom-sort-string", "submissions": 130543, "accepted_subsmissions": 86044, "group": 2, "topics": ["String"], "upvotes": "980", "downvotes": "212"}, {"id": 790, "name": "Domino and Tromino Tiling", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/domino-and-tromino-tiling", "submissions": 45874, "accepted_subsmissions": 18423, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "518", "downvotes": "278"}, {"id": 789, "name": "Escape The Ghosts", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/escape-the-ghosts", "submissions": 29054, "accepted_subsmissions": 16970, "group": 2, "topics": ["Math"], "upvotes": "219", "downvotes": "364"}, {"id": 788, "name": "Rotated Digits", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/rotated-digits", "submissions": 109262, "accepted_subsmissions": 62480, "group": 2, "topics": ["String"], "upvotes": "411", "downvotes": "1367"}, {"id": 787, "name": "Cheapest Flights Within K Stops", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/cheapest-flights-within-k-stops", "submissions": 363778, "accepted_subsmissions": 143936, "group": 2, "topics": ["Dynamic Programming", "Heap", "Breadth-first Search"], "upvotes": "2838", "downvotes": "93"}, {"id": 786, "name": "K-th Smallest Prime Fraction", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/k-th-smallest-prime-fraction", "submissions": 41225, "accepted_subsmissions": 17665, "group": 2, "topics": ["Binary Search", "Heap"], "upvotes": "492", "downvotes": "29"}, {"id": 785, "name": "Is Graph Bipartite?", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/is-graph-bipartite", "submissions": 379590, "accepted_subsmissions": 184660, "group": 2, "topics": ["Depth-first Search", "Breadth-first Search", "Graph"], "upvotes": "2425", "downvotes": "220"}, {"id": 784, "name": "Letter Case Permutation", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/letter-case-permutation", "submissions": 197961, "accepted_subsmissions": 135772, "group": 2, "topics": ["Backtracking", "Bit Manipulation"], "upvotes": "1958", "downvotes": "123"}, {"id": 783, "name": "Minimum Distance Between BST Nodes", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/minimum-distance-between-bst-nodes", "submissions": 154329, "accepted_subsmissions": 83255, "group": 2, "topics": ["Tree", "Depth-first Search", "Recursion"], "upvotes": "960", "downvotes": "247"}, {"id": 782, "name": "Transform to Chessboard", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/transform-to-chessboard", "submissions": 13911, "accepted_subsmissions": 6545, "group": 2, "topics": ["Array", "Math"], "upvotes": "146", "downvotes": "152"}, {"id": 781, "name": "Rabbits in Forest", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/rabbits-in-forest", "submissions": 45450, "accepted_subsmissions": 25282, "group": 2, "topics": ["Hash Table", "Math"], "upvotes": "374", "downvotes": "357"}, {"id": 780, "name": "Reaching Points", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/reaching-points", "submissions": 98912, "accepted_subsmissions": 30089, "group": 2, "topics": ["Math"], "upvotes": "691", "downvotes": "123"}, {"id": 779, "name": "K-th Symbol in Grammar", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/k-th-symbol-in-grammar", "submissions": 128028, "accepted_subsmissions": 49379, "group": 2, "topics": ["Recursion"], "upvotes": "797", "downvotes": "192"}, {"id": 778, "name": "Swim in Rising Water", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/swim-in-rising-water", "submissions": 59636, "accepted_subsmissions": 32635, "group": 2, "topics": ["Binary Search", "Heap", "Depth-first Search", "Union Find"], "upvotes": "842", "downvotes": "65"}, {"id": 777, "name": "Swap Adjacent in LR String", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/swap-adjacent-in-lr-string", "submissions": 103357, "accepted_subsmissions": 36859, "group": 2, "topics": ["Brainteaser"], "upvotes": "509", "downvotes": "490"}, {"id": 704, "name": "Binary Search", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/binary-search", "submissions": 444592, "accepted_subsmissions": 240492, "group": 2, "topics": ["Binary Search"], "upvotes": "1200", "downvotes": "58"}, {"id": 775, "name": "Global and Local Inversions", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/global-and-local-inversions", "submissions": 62589, "accepted_subsmissions": 26673, "group": 2, "topics": ["Array", "Math"], "upvotes": "542", "downvotes": "198"}, {"id": 703, "name": "Kth Largest Element in a Stream", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/kth-largest-element-in-a-stream", "submissions": 243916, "accepted_subsmissions": 123816, "group": 2, "topics": ["Heap", "Design"], "upvotes": "1141", "downvotes": "697"}, {"id": 773, "name": "Sliding Puzzle", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/sliding-puzzle", "submissions": 83051, "accepted_subsmissions": 50640, "group": 2, "topics": ["Breadth-first Search"], "upvotes": "913", "downvotes": "30"}, {"id": 701, "name": "Insert into a Binary Search Tree", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/insert-into-a-binary-search-tree", "submissions": 227270, "accepted_subsmissions": 171589, "group": 2, "topics": ["Tree"], "upvotes": "1455", "downvotes": "96"}, {"id": 700, "name": "Search in a Binary Search Tree", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/search-in-a-binary-search-tree", "submissions": 353890, "accepted_subsmissions": 259906, "group": 2, "topics": ["Tree"], "upvotes": "1316", "downvotes": "129"}, {"id": 771, "name": "Jewels and Stones", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/jewels-and-stones", "submissions": 694135, "accepted_subsmissions": 603457, "group": 2, "topics": ["Hash Table"], "upvotes": "2546", "downvotes": "404"}, {"id": 770, "name": "Basic Calculator IV", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/basic-calculator-iv", "submissions": 11233, "accepted_subsmissions": 6095, "group": 2, "topics": ["Hash Table", "String", "Stack"], "upvotes": "89", "downvotes": "768"}, {"id": 769, "name": "Max Chunks To Make Sorted", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/max-chunks-to-make-sorted", "submissions": 83949, "accepted_subsmissions": 46774, "group": 2, "topics": ["Array"], "upvotes": "989", "downvotes": "141"}, {"id": 768, "name": "Max Chunks To Make Sorted II", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/max-chunks-to-make-sorted-ii", "submissions": 51345, "accepted_subsmissions": 25581, "group": 2, "topics": ["Array"], "upvotes": "545", "downvotes": "22"}, {"id": 767, "name": "Reorganize String", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/reorganize-string", "submissions": 261102, "accepted_subsmissions": 131002, "group": 2, "topics": ["String", "Heap", "Greedy", "Sort"], "upvotes": "2656", "downvotes": "123"}, {"id": 766, "name": "Toeplitz Matrix", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/toeplitz-matrix", "submissions": 184431, "accepted_subsmissions": 121507, "group": 2, "topics": ["Array"], "upvotes": "1313", "downvotes": "89"}, {"id": 590, "name": "N-ary Tree Postorder Traversal", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/n-ary-tree-postorder-traversal", "submissions": 168957, "accepted_subsmissions": 124061, "group": 2, "topics": ["Tree"], "upvotes": "930", "downvotes": "73"}, {"id": 589, "name": "N-ary Tree Preorder Traversal", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/n-ary-tree-preorder-traversal", "submissions": 189870, "accepted_subsmissions": 139404, "group": 2, "topics": ["Tree"], "upvotes": "864", "downvotes": "63"}, {"id": 559, "name": "Maximum Depth of N-ary Tree", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/maximum-depth-of-n-ary-tree", "submissions": 217831, "accepted_subsmissions": 151554, "group": 2, "topics": ["Tree", "Depth-first Search", "Breadth-first Search"], "upvotes": "1260", "downvotes": "58"}, {"id": 558, "name": "Logical OR of Two Binary Grids Represented as Quad-Trees", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/logical-or-of-two-binary-grids-represented-as-quad-trees", "submissions": 20976, "accepted_subsmissions": 9559, "group": 2, "topics": [], "upvotes": "110", "downvotes": "362"}, {"id": 427, "name": "Construct Quad Tree", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/construct-quad-tree", "submissions": 43146, "accepted_subsmissions": 27050, "group": 2, "topics": [], "upvotes": "309", "downvotes": "473"}, {"id": 765, "name": "Couples Holding Hands", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/couples-holding-hands", "submissions": 58176, "accepted_subsmissions": 32302, "group": 2, "topics": ["Greedy", "Union Find", "Graph"], "upvotes": "1001", "downvotes": "67"}, {"id": 764, "name": "Largest Plus Sign", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/largest-plus-sign", "submissions": 53180, "accepted_subsmissions": 24771, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "559", "downvotes": "116"}, {"id": 763, "name": "Partition Labels", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/partition-labels", "submissions": 309003, "accepted_subsmissions": 241277, "group": 2, "topics": ["Two Pointers", "Greedy"], "upvotes": "4268", "downvotes": "181"}, {"id": 762, "name": "Prime Number of Set Bits in Binary Representation", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/prime-number-of-set-bits-in-binary-representation", "submissions": 82170, "accepted_subsmissions": 52941, "group": 2, "topics": ["Bit Manipulation"], "upvotes": "304", "downvotes": "387"}, {"id": 430, "name": "Flatten a Multilevel Doubly Linked List", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/flatten-a-multilevel-doubly-linked-list", "submissions": 266172, "accepted_subsmissions": 151357, "group": 2, "topics": ["Linked List", "Depth-first Search"], "upvotes": "2125", "downvotes": "188"}, {"id": 429, "name": "N-ary Tree Level Order Traversal", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/n-ary-tree-level-order-traversal", "submissions": 147817, "accepted_subsmissions": 98679, "group": 2, "topics": ["Tree", "Breadth-first Search"], "upvotes": "878", "downvotes": "62"}, {"id": 761, "name": "Special Binary String", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/special-binary-string", "submissions": 18535, "accepted_subsmissions": 10876, "group": 2, "topics": ["String", "Recursion"], "upvotes": "391", "downvotes": "133"}, {"id": 757, "name": "Set Intersection Size At Least Two", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/set-intersection-size-at-least-two", "submissions": 28320, "accepted_subsmissions": 12067, "group": 2, "topics": ["Greedy"], "upvotes": "344", "downvotes": "42"}, {"id": 756, "name": "Pyramid Transition Matrix", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/pyramid-transition-matrix", "submissions": 42191, "accepted_subsmissions": 23455, "group": 2, "topics": ["Bit Manipulation", "Depth-first Search"], "upvotes": "354", "downvotes": "371"}, {"id": 754, "name": "Reach a Number", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/reach-a-number", "submissions": 75395, "accepted_subsmissions": 30552, "group": 2, "topics": ["Math"], "upvotes": "691", "downvotes": "535"}, {"id": 753, "name": "Cracking the Safe", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/cracking-the-safe", "submissions": 66758, "accepted_subsmissions": 34996, "group": 2, "topics": ["Math", "Depth-first Search"], "upvotes": "536", "downvotes": "790"}, {"id": 752, "name": "Open the Lock", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/open-the-lock", "submissions": 170368, "accepted_subsmissions": 90095, "group": 2, "topics": ["Breadth-first Search"], "upvotes": "1478", "downvotes": "55"}, {"id": 749, "name": "Contain Virus", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/contain-virus", "submissions": 13223, "accepted_subsmissions": 6378, "group": 2, "topics": ["Depth-first Search"], "upvotes": "136", "downvotes": "302"}, {"id": 748, "name": "Shortest Completing Word", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/shortest-completing-word", "submissions": 67370, "accepted_subsmissions": 38767, "group": 2, "topics": ["Hash Table"], "upvotes": "226", "downvotes": "698"}, {"id": 747, "name": "Largest Number At Least Twice of Others", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/largest-number-at-least-twice-of-others", "submissions": 256868, "accepted_subsmissions": 110650, "group": 2, "topics": ["Array"], "upvotes": "414", "downvotes": "660"}, {"id": 746, "name": "Min Cost Climbing Stairs", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/min-cost-climbing-stairs", "submissions": 430353, "accepted_subsmissions": 219098, "group": 2, "topics": ["Array", "Dynamic Programming"], "upvotes": "2924", "downvotes": "630"}, {"id": 745, "name": "Prefix and Suffix Search", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/prefix-and-suffix-search", "submissions": 62039, "accepted_subsmissions": 21970, "group": 2, "topics": ["Trie"], "upvotes": "455", "downvotes": "229"}, {"id": 744, "name": "Find Smallest Letter Greater Than Target", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/find-smallest-letter-greater-than-target", "submissions": 215704, "accepted_subsmissions": 98282, "group": 2, "topics": ["Binary Search"], "upvotes": "586", "downvotes": "686"}, {"id": 743, "name": "Network Delay Time", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/network-delay-time", "submissions": 304746, "accepted_subsmissions": 138960, "group": 2, "topics": ["Heap", "Depth-first Search", "Breadth-first Search", "Graph"], "upvotes": "2403", "downvotes": "244"}, {"id": 709, "name": "To Lower Case", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/to-lower-case", "submissions": 319889, "accepted_subsmissions": 256474, "group": 2, "topics": ["String"], "upvotes": "644", "downvotes": "1821"}, {"id": 741, "name": "Cherry Pickup", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/cherry-pickup", "submissions": 103005, "accepted_subsmissions": 36189, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "1530", "downvotes": "92"}, {"id": 740, "name": "Delete and Earn", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/delete-and-earn", "submissions": 96772, "accepted_subsmissions": 47916, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "1387", "downvotes": "100"}, {"id": 739, "name": "Daily Temperatures", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/daily-temperatures", "submissions": 347724, "accepted_subsmissions": 224917, "group": 2, "topics": ["Hash Table", "Stack"], "upvotes": "3950", "downvotes": "120"}, {"id": 738, "name": "Monotone Increasing Digits", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/monotone-increasing-digits", "submissions": 61709, "accepted_subsmissions": 28227, "group": 2, "topics": ["Greedy"], "upvotes": "591", "downvotes": "75"}, {"id": 736, "name": "Parse Lisp Expression", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/parse-lisp-expression", "submissions": 29606, "accepted_subsmissions": 14721, "group": 2, "topics": ["String"], "upvotes": "317", "downvotes": "237"}, {"id": 735, "name": "Asteroid Collision", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/asteroid-collision", "submissions": 250463, "accepted_subsmissions": 108287, "group": 2, "topics": ["Stack"], "upvotes": "1830", "downvotes": "161"}, {"id": 733, "name": "Flood Fill", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/flood-fill", "submissions": 392299, "accepted_subsmissions": 219339, "group": 2, "topics": ["Depth-first Search"], "upvotes": "1788", "downvotes": "235"}, {"id": 732, "name": "My Calendar III", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/my-calendar-iii", "submissions": 41768, "accepted_subsmissions": 25954, "group": 2, "topics": ["Segment Tree", "Ordered Map"], "upvotes": "456", "downvotes": "106"}, {"id": 731, "name": "My Calendar II", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/my-calendar-ii", "submissions": 103099, "accepted_subsmissions": 52267, "group": 2, "topics": ["Ordered Map"], "upvotes": "776", "downvotes": "101"}, {"id": 730, "name": "Count Different Palindromic Subsequences", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/count-different-palindromic-subsequences", "submissions": 43940, "accepted_subsmissions": 19080, "group": 2, "topics": ["String", "Dynamic Programming"], "upvotes": "745", "downvotes": "50"}, {"id": 729, "name": "My Calendar I", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/my-calendar-i", "submissions": 155213, "accepted_subsmissions": 82947, "group": 2, "topics": ["Array"], "upvotes": "997", "downvotes": "44"}, {"id": 728, "name": "Self Dividing Numbers", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/self-dividing-numbers", "submissions": 195705, "accepted_subsmissions": 147755, "group": 2, "topics": ["Math"], "upvotes": "824", "downvotes": "314"}, {"id": 726, "name": "Number of Atoms", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/number-of-atoms", "submissions": 61202, "accepted_subsmissions": 31204, "group": 2, "topics": ["Hash Table", "Stack", "Recursion"], "upvotes": "598", "downvotes": "157"}, {"id": 725, "name": "Split Linked List in Parts", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/split-linked-list-in-parts", "submissions": 109954, "accepted_subsmissions": 58318, "group": 2, "topics": ["Linked List"], "upvotes": "910", "downvotes": "149"}, {"id": 724, "name": "Find Pivot Index", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/find-pivot-index", "submissions": 405606, "accepted_subsmissions": 185446, "group": 2, "topics": ["Array"], "upvotes": "1636", "downvotes": "312"}, {"id": 722, "name": "Remove Comments", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/remove-comments", "submissions": 112592, "accepted_subsmissions": 40787, "group": 2, "topics": ["String"], "upvotes": "445", "downvotes": "1158"}, {"id": 721, "name": "Accounts Merge", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/accounts-merge", "submissions": 249539, "accepted_subsmissions": 129682, "group": 2, "topics": ["Depth-first Search", "Union Find"], "upvotes": "2215", "downvotes": "404"}, {"id": 720, "name": "Longest Word in Dictionary", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/longest-word-in-dictionary", "submissions": 161061, "accepted_subsmissions": 79397, "group": 2, "topics": ["Hash Table", "Trie"], "upvotes": "839", "downvotes": "1000"}, {"id": 719, "name": "Find K-th Smallest Pair Distance", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/find-k-th-smallest-pair-distance", "submissions": 127978, "accepted_subsmissions": 41738, "group": 2, "topics": ["Array", "Binary Search", "Heap"], "upvotes": "1266", "downvotes": "47"}, {"id": 718, "name": "Maximum Length of Repeated Subarray", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/maximum-length-of-repeated-subarray", "submissions": 171237, "accepted_subsmissions": 86240, "group": 2, "topics": ["Array", "Hash Table", "Binary Search", "Dynamic Programming"], "upvotes": "1875", "downvotes": "51"}, {"id": 717, "name": "1-bit and 2-bit Characters", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/1-bit-and-2-bit-characters", "submissions": 177205, "accepted_subsmissions": 83449, "group": 2, "topics": ["Array"], "upvotes": "542", "downvotes": "1376"}, {"id": 715, "name": "Range Module", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/range-module", "submissions": 64353, "accepted_subsmissions": 25931, "group": 2, "topics": ["Segment Tree", "Ordered Map"], "upvotes": "601", "downvotes": "50"}, {"id": 714, "name": "Best Time to Buy and Sell Stock with Transaction Fee", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-transaction-fee", "submissions": 156532, "accepted_subsmissions": 87953, "group": 2, "topics": ["Array", "Dynamic Programming", "Greedy"], "upvotes": "2133", "downvotes": "64"}, {"id": 713, "name": "Subarray Product Less Than K", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/subarray-product-less-than-k", "submissions": 241790, "accepted_subsmissions": 97975, "group": 2, "topics": ["Array", "Two Pointers"], "upvotes": "2201", "downvotes": "84"}, {"id": 712, "name": "Minimum ASCII Delete Sum for Two Strings", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/minimum-ascii-delete-sum-for-two-strings", "submissions": 74381, "accepted_subsmissions": 44256, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "1258", "downvotes": "54"}, {"id": 699, "name": "Falling Squares", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/falling-squares", "submissions": 36126, "accepted_subsmissions": 15395, "group": 2, "topics": ["Segment Tree", "Ordered Map"], "upvotes": "327", "downvotes": "62"}, {"id": 698, "name": "Partition to K Equal Sum Subsets", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/partition-to-k-equal-sum-subsets", "submissions": 260097, "accepted_subsmissions": 118936, "group": 2, "topics": ["Dynamic Programming", "Recursion"], "upvotes": "2707", "downvotes": "173"}, {"id": 697, "name": "Degree of an Array", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/degree-of-an-array", "submissions": 191090, "accepted_subsmissions": 104096, "group": 2, "topics": ["Array"], "upvotes": "1238", "downvotes": "920"}, {"id": 696, "name": "Count Binary Substrings", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/count-binary-substrings", "submissions": 97937, "accepted_subsmissions": 56561, "group": 2, "topics": ["String"], "upvotes": "1262", "downvotes": "206"}, {"id": 695, "name": "Max Area of Island", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/max-area-of-island", "submissions": 337583, "accepted_subsmissions": 219016, "group": 2, "topics": ["Array", "Depth-first Search"], "upvotes": "2839", "downvotes": "95"}, {"id": 693, "name": "Binary Number with Alternating Bits", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/binary-number-with-alternating-bits", "submissions": 120993, "accepted_subsmissions": 72474, "group": 2, "topics": ["Bit Manipulation"], "upvotes": "596", "downvotes": "91"}, {"id": 692, "name": "Top K Frequent Words", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/top-k-frequent-words", "submissions": 491832, "accepted_subsmissions": 261369, "group": 2, "topics": ["Hash Table", "Heap", "Trie"], "upvotes": "2798", "downvotes": "186"}, {"id": 691, "name": "Stickers to Spell Word", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/stickers-to-spell-word", "submissions": 43270, "accepted_subsmissions": 19382, "group": 2, "topics": ["Dynamic Programming", "Backtracking"], "upvotes": "489", "downvotes": "43"}, {"id": 690, "name": "Employee Importance", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/employee-importance", "submissions": 180097, "accepted_subsmissions": 105890, "group": 2, "topics": ["Hash Table", "Depth-first Search", "Breadth-first Search"], "upvotes": "920", "downvotes": "850"}, {"id": 689, "name": "Maximum Sum of 3 Non-Overlapping Subarrays", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/maximum-sum-of-3-non-overlapping-subarrays", "submissions": 110882, "accepted_subsmissions": 52366, "group": 2, "topics": ["Array", "Dynamic Programming"], "upvotes": "1192", "downvotes": "78"}, {"id": 688, "name": "Knight Probability in Chessboard", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/knight-probability-in-chessboard", "submissions": 113914, "accepted_subsmissions": 57160, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "1203", "downvotes": "225"}, {"id": 687, "name": "Longest Univalue Path", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/longest-univalue-path", "submissions": 295728, "accepted_subsmissions": 110385, "group": 2, "topics": ["Tree", "Recursion"], "upvotes": "2194", "downvotes": "547"}, {"id": 686, "name": "Repeated String Match", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/repeated-string-match", "submissions": 317184, "accepted_subsmissions": 104249, "group": 2, "topics": ["String"], "upvotes": "991", "downvotes": "834"}, {"id": 685, "name": "Redundant Connection II", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/redundant-connection-ii", "submissions": 124603, "accepted_subsmissions": 41170, "group": 2, "topics": ["Tree", "Depth-first Search", "Union Find", "Graph"], "upvotes": "1037", "downvotes": "242"}, {"id": 684, "name": "Redundant Connection", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/redundant-connection", "submissions": 208162, "accepted_subsmissions": 122842, "group": 2, "topics": ["Tree", "Union Find", "Graph"], "upvotes": "1940", "downvotes": "242"}, {"id": 682, "name": "Baseball Game", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/baseball-game", "submissions": 164226, "accepted_subsmissions": 110314, "group": 2, "topics": ["Stack"], "upvotes": "690", "downvotes": "1209"}, {"id": 680, "name": "Valid Palindrome II", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/valid-palindrome-ii", "submissions": 661215, "accepted_subsmissions": 245192, "group": 2, "topics": ["String"], "upvotes": "2392", "downvotes": "146"}, {"id": 679, "name": "24 Game", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/24-game", "submissions": 102447, "accepted_subsmissions": 48381, "group": 2, "topics": ["Depth-first Search"], "upvotes": "886", "downvotes": "175"}, {"id": 678, "name": "Valid Parenthesis String", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/valid-parenthesis-string", "submissions": 409547, "accepted_subsmissions": 129859, "group": 2, "topics": ["String"], "upvotes": "2288", "downvotes": "65"}, {"id": 677, "name": "Map Sum Pairs", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/map-sum-pairs", "submissions": 91502, "accepted_subsmissions": 49429, "group": 2, "topics": ["Trie"], "upvotes": "629", "downvotes": "93"}, {"id": 676, "name": "Implement Magic Dictionary", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/implement-magic-dictionary", "submissions": 87287, "accepted_subsmissions": 48269, "group": 2, "topics": ["Hash Table", "Trie"], "upvotes": "710", "downvotes": "156"}, {"id": 675, "name": "Cut Off Trees for Golf Event", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/cut-off-trees-for-golf-event", "submissions": 117189, "accepted_subsmissions": 41442, "group": 2, "topics": ["Breadth-first Search"], "upvotes": "651", "downvotes": "378"}, {"id": 674, "name": "Longest Continuous Increasing Subsequence", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/longest-continuous-increasing-subsequence", "submissions": 305856, "accepted_subsmissions": 140699, "group": 2, "topics": ["Array"], "upvotes": "1093", "downvotes": "139"}, {"id": 673, "name": "Number of Longest Increasing Subsequence", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/number-of-longest-increasing-subsequence", "submissions": 196288, "accepted_subsmissions": 75655, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "2137", "downvotes": "116"}, {"id": 672, "name": "Bulb Switcher II", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/bulb-switcher-ii", "submissions": 27740, "accepted_subsmissions": 14184, "group": 2, "topics": ["Math"], "upvotes": "163", "downvotes": "943"}, {"id": 671, "name": "Second Minimum Node In a Binary Tree", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/second-minimum-node-in-a-binary-tree", "submissions": 225418, "accepted_subsmissions": 96477, "group": 2, "topics": ["Tree"], "upvotes": "772", "downvotes": "1030"}, {"id": 670, "name": "Maximum Swap", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/maximum-swap", "submissions": 207613, "accepted_subsmissions": 93819, "group": 2, "topics": ["Array", "Math"], "upvotes": "1405", "downvotes": "88"}, {"id": 669, "name": "Trim a Binary Search Tree", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/trim-a-binary-search-tree", "submissions": 239217, "accepted_subsmissions": 153969, "group": 2, "topics": ["Tree", "Recursion"], "upvotes": "2709", "downvotes": "207"}, {"id": 668, "name": "Kth Smallest Number in Multiplication Table", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/kth-smallest-number-in-multiplication-table", "submissions": 53601, "accepted_subsmissions": 25635, "group": 2, "topics": ["Binary Search"], "upvotes": "686", "downvotes": "24"}, {"id": 667, "name": "Beautiful Arrangement II", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/beautiful-arrangement-ii", "submissions": 48834, "accepted_subsmissions": 26944, "group": 2, "topics": ["Array"], "upvotes": "388", "downvotes": "685"}, {"id": 665, "name": "Non-decreasing Array", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/non-decreasing-array", "submissions": 626052, "accepted_subsmissions": 123899, "group": 2, "topics": ["Array"], "upvotes": "2527", "downvotes": "600"}, {"id": 664, "name": "Strange Printer", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/strange-printer", "submissions": 42202, "accepted_subsmissions": 17516, "group": 2, "topics": ["Dynamic Programming", "Depth-first Search"], "upvotes": "552", "downvotes": "54"}, {"id": 662, "name": "Maximum Width of Binary Tree", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/maximum-width-of-binary-tree", "submissions": 269857, "accepted_subsmissions": 107472, "group": 2, "topics": ["Tree"], "upvotes": "2095", "downvotes": "376"}, {"id": 661, "name": "Image Smoother", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/image-smoother", "submissions": 102941, "accepted_subsmissions": 53818, "group": 2, "topics": ["Array"], "upvotes": "288", "downvotes": "1233"}, {"id": 659, "name": "Split Array into Consecutive Subsequences", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/split-array-into-consecutive-subsequences", "submissions": 126512, "accepted_subsmissions": 56178, "group": 2, "topics": ["Heap", "Greedy"], "upvotes": "1522", "downvotes": "472"}, {"id": 658, "name": "Find K Closest Elements", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/find-k-closest-elements", "submissions": 339189, "accepted_subsmissions": 142683, "group": 2, "topics": ["Binary Search"], "upvotes": "1943", "downvotes": "310"}, {"id": 657, "name": "Robot Return to Origin", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/robot-return-to-origin", "submissions": 371304, "accepted_subsmissions": 274421, "group": 2, "topics": ["String"], "upvotes": "1229", "downvotes": "692"}, {"id": 655, "name": "Print Binary Tree", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/print-binary-tree", "submissions": 67836, "accepted_subsmissions": 38120, "group": 2, "topics": ["Tree"], "upvotes": "416", "downvotes": "960"}, {"id": 654, "name": "Maximum Binary Tree", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/maximum-binary-tree", "submissions": 194798, "accepted_subsmissions": 158186, "group": 2, "topics": ["Tree"], "upvotes": "2376", "downvotes": "268"}, {"id": 653, "name": "Two Sum IV - Input is a BST", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/two-sum-iv-input-is-a-bst", "submissions": 326731, "accepted_subsmissions": 183957, "group": 2, "topics": ["Tree"], "upvotes": "1937", "downvotes": "150"}, {"id": 652, "name": "Find Duplicate Subtrees", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/find-duplicate-subtrees", "submissions": 164417, "accepted_subsmissions": 86540, "group": 2, "topics": ["Tree"], "upvotes": "1840", "downvotes": "237"}, {"id": 650, "name": "2 Keys Keyboard", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/2-keys-keyboard", "submissions": 145259, "accepted_subsmissions": 72823, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "1676", "downvotes": "119"}, {"id": 649, "name": "Dota2 Senate", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/dota2-senate", "submissions": 37601, "accepted_subsmissions": 14825, "group": 2, "topics": ["Greedy"], "upvotes": "313", "downvotes": "253"}, {"id": 648, "name": "Replace Words", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/replace-words", "submissions": 116113, "accepted_subsmissions": 68187, "group": 2, "topics": ["Hash Table", "Trie"], "upvotes": "946", "downvotes": "143"}, {"id": 647, "name": "Palindromic Substrings", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/palindromic-substrings", "submissions": 407558, "accepted_subsmissions": 252468, "group": 2, "topics": ["String", "Dynamic Programming"], "upvotes": "3787", "downvotes": "134"}, {"id": 646, "name": "Maximum Length of Pair Chain", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/maximum-length-of-pair-chain", "submissions": 137703, "accepted_subsmissions": 72947, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "1284", "downvotes": "87"}, {"id": 645, "name": "Set Mismatch", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/set-mismatch", "submissions": 292564, "accepted_subsmissions": 122528, "group": 2, "topics": ["Hash Table", "Math"], "upvotes": "1108", "downvotes": "423"}, {"id": 643, "name": "Maximum Average Subarray I", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/maximum-average-subarray-i", "submissions": 228629, "accepted_subsmissions": 96002, "group": 2, "topics": ["Array"], "upvotes": "930", "downvotes": "132"}, {"id": 640, "name": "Solve the Equation", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/solve-the-equation", "submissions": 65064, "accepted_subsmissions": 27816, "group": 2, "topics": ["Math"], "upvotes": "284", "downvotes": "584"}, {"id": 639, "name": "Decode Ways II", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/decode-ways-ii", "submissions": 136651, "accepted_subsmissions": 37680, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "567", "downvotes": "587"}, {"id": 638, "name": "Shopping Offers", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/shopping-offers", "submissions": 68042, "accepted_subsmissions": 36054, "group": 2, "topics": ["Dynamic Programming", "Depth-first Search"], "upvotes": "701", "downvotes": "513"}, {"id": 637, "name": "Average of Levels in Binary Tree", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/average-of-levels-in-binary-tree", "submissions": 280829, "accepted_subsmissions": 185363, "group": 2, "topics": ["Tree"], "upvotes": "1903", "downvotes": "200"}, {"id": 636, "name": "Exclusive Time of Functions", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/exclusive-time-of-functions", "submissions": 188747, "accepted_subsmissions": 103130, "group": 2, "topics": ["Stack"], "upvotes": "988", "downvotes": "1758"}, {"id": 633, "name": "Sum of Square Numbers", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/sum-of-square-numbers", "submissions": 248953, "accepted_subsmissions": 81135, "group": 2, "topics": ["Math"], "upvotes": "654", "downvotes": "375"}, {"id": 632, "name": "Smallest Range Covering Elements from K Lists", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/smallest-range-covering-elements-from-k-lists", "submissions": 83729, "accepted_subsmissions": 45479, "group": 2, "topics": ["Hash Table", "Two Pointers", "String"], "upvotes": "1359", "downvotes": "25"}, {"id": 630, "name": "Course Schedule III", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/course-schedule-iii", "submissions": 81030, "accepted_subsmissions": 27374, "group": 2, "topics": ["Greedy"], "upvotes": "991", "downvotes": "39"}, {"id": 629, "name": "K Inverse Pairs Array", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/k-inverse-pairs-array", "submissions": 39932, "accepted_subsmissions": 12669, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "383", "downvotes": "77"}, {"id": 628, "name": "Maximum Product of Three Numbers", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/maximum-product-of-three-numbers", "submissions": 311414, "accepted_subsmissions": 145907, "group": 2, "topics": ["Array", "Math"], "upvotes": "1530", "downvotes": "428"}, {"id": 623, "name": "Add One Row to Tree", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/add-one-row-to-tree", "submissions": 126063, "accepted_subsmissions": 66916, "group": 2, "topics": ["Tree"], "upvotes": "869", "downvotes": "159"}, {"id": 621, "name": "Task Scheduler", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/task-scheduler", "submissions": 479245, "accepted_subsmissions": 249184, "group": 2, "topics": ["Array", "Greedy", "Queue"], "upvotes": "4492", "downvotes": "860"}, {"id": 617, "name": "Merge Two Binary Trees", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/merge-two-binary-trees", "submissions": 493288, "accepted_subsmissions": 372033, "group": 2, "topics": ["Tree"], "upvotes": "4055", "downvotes": "193"}, {"id": 611, "name": "Valid Triangle Number", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/valid-triangle-number", "submissions": 160961, "accepted_subsmissions": 79435, "group": 2, "topics": ["Array"], "upvotes": "1334", "downvotes": "103"}, {"id": 609, "name": "Find Duplicate File in System", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/find-duplicate-file-in-system", "submissions": 108390, "accepted_subsmissions": 66233, "group": 2, "topics": ["Hash Table", "String"], "upvotes": "540", "downvotes": "694"}, {"id": 606, "name": "Construct String from Binary Tree", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/construct-string-from-binary-tree", "submissions": 177081, "accepted_subsmissions": 97872, "group": 2, "topics": ["String", "Tree"], "upvotes": "918", "downvotes": "1264"}, {"id": 605, "name": "Can Place Flowers", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/can-place-flowers", "submissions": 501007, "accepted_subsmissions": 159178, "group": 2, "topics": ["Array", "Greedy"], "upvotes": "1329", "downvotes": "448"}, {"id": 600, "name": "Non-negative Integers without Consecutive Ones", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/non-negative-integers-without-consecutive-ones", "submissions": 41239, "accepted_subsmissions": 14316, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "504", "downvotes": "77"}, {"id": 599, "name": "Minimum Index Sum of Two Lists", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/minimum-index-sum-of-two-lists", "submissions": 211418, "accepted_subsmissions": 109467, "group": 2, "topics": ["Hash Table"], "upvotes": "761", "downvotes": "236"}, {"id": 598, "name": "Range Addition II", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/range-addition-ii", "submissions": 91300, "accepted_subsmissions": 45792, "group": 2, "topics": ["Math"], "upvotes": "359", "downvotes": "603"}, {"id": 594, "name": "Longest Harmonious Subsequence", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/longest-harmonious-subsequence", "submissions": 184478, "accepted_subsmissions": 94440, "group": 2, "topics": ["Hash Table"], "upvotes": "1140", "downvotes": "121"}, {"id": 593, "name": "Valid Square", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/valid-square", "submissions": 135152, "accepted_subsmissions": 58508, "group": 2, "topics": ["Math"], "upvotes": "440", "downvotes": "587"}, {"id": 592, "name": "Fraction Addition and Subtraction", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/fraction-addition-and-subtraction", "submissions": 43311, "accepted_subsmissions": 21736, "group": 2, "topics": ["Math"], "upvotes": "223", "downvotes": "343"}, {"id": 591, "name": "Tag Validator", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/tag-validator", "submissions": 24535, "accepted_subsmissions": 8517, "group": 2, "topics": ["String", "Stack"], "upvotes": "98", "downvotes": "451"}, {"id": 587, "name": "Erect the Fence", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/erect-the-fence", "submissions": 29380, "accepted_subsmissions": 10715, "group": 2, "topics": ["Geometry"], "upvotes": "278", "downvotes": "198"}, {"id": 583, "name": "Delete Operation for Two Strings", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/delete-operation-for-two-strings", "submissions": 123221, "accepted_subsmissions": 61780, "group": 2, "topics": ["String"], "upvotes": "1422", "downvotes": "34"}, {"id": 581, "name": "Shortest Unsorted Continuous Subarray", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/shortest-unsorted-continuous-subarray", "submissions": 526903, "accepted_subsmissions": 173014, "group": 2, "topics": ["Array"], "upvotes": "3741", "downvotes": "174"}, {"id": 576, "name": "Out of Boundary Paths", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/out-of-boundary-paths", "submissions": 97678, "accepted_subsmissions": 35159, "group": 2, "topics": ["Dynamic Programming", "Depth-first Search"], "upvotes": "732", "downvotes": "148"}, {"id": 575, "name": "Distribute Candies", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/distribute-candies", "submissions": 241689, "accepted_subsmissions": 156054, "group": 2, "topics": ["Hash Table"], "upvotes": "714", "downvotes": "1009"}, {"id": 572, "name": "Subtree of Another Tree", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/subtree-of-another-tree", "submissions": 661980, "accepted_subsmissions": 294816, "group": 2, "topics": ["Tree"], "upvotes": "3210", "downvotes": "160"}, {"id": 567, "name": "Permutation in String", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/permutation-in-string", "submissions": 398985, "accepted_subsmissions": 177901, "group": 2, "topics": ["Two Pointers", "Sliding Window"], "upvotes": "2248", "downvotes": "78"}, {"id": 566, "name": "Reshape the Matrix", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/reshape-the-matrix", "submissions": 186499, "accepted_subsmissions": 113912, "group": 2, "topics": ["Array"], "upvotes": "952", "downvotes": "111"}, {"id": 565, "name": "Array Nesting", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/array-nesting", "submissions": 110734, "accepted_subsmissions": 61971, "group": 2, "topics": ["Array"], "upvotes": "998", "downvotes": "107"}, {"id": 564, "name": "Find the Closest Palindrome", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/find-the-closest-palindrome", "submissions": 122521, "accepted_subsmissions": 24883, "group": 2, "topics": ["String"], "upvotes": "343", "downvotes": "959"}, {"id": 563, "name": "Binary Tree Tilt", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/binary-tree-tilt", "submissions": 212558, "accepted_subsmissions": 112788, "group": 2, "topics": ["Tree", "Depth-first Search", "Recursion"], "upvotes": "840", "downvotes": "1546"}, {"id": 561, "name": "Array Partition I", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/array-partition-i", "submissions": 347604, "accepted_subsmissions": 254859, "group": 2, "topics": ["Array"], "upvotes": "161", "downvotes": "43"}, {"id": 560, "name": "Subarray Sum Equals K", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/subarray-sum-equals-k", "submissions": 1029085, "accepted_subsmissions": 449909, "group": 2, "topics": ["Array", "Hash Table"], "upvotes": "6783", "downvotes": "236"}, {"id": 557, "name": "Reverse Words in a String III", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/reverse-words-in-a-string-iii", "submissions": 344496, "accepted_subsmissions": 248504, "group": 2, "topics": ["String"], "upvotes": "1384", "downvotes": "102"}, {"id": 556, "name": "Next Greater Element III", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/next-greater-element-iii", "submissions": 195905, "accepted_subsmissions": 65627, "group": 2, "topics": ["String"], "upvotes": "1112", "downvotes": "259"}, {"id": 554, "name": "Brick Wall", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/brick-wall", "submissions": 133390, "accepted_subsmissions": 67685, "group": 2, "topics": ["Hash Table"], "upvotes": "1126", "downvotes": "56"}, {"id": 553, "name": "Optimal Division", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/optimal-division", "submissions": 47556, "accepted_subsmissions": 27330, "group": 2, "topics": ["Math", "String"], "upvotes": "193", "downvotes": "1201"}, {"id": 552, "name": "Student Attendance Record II", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/student-attendance-record-ii", "submissions": 78060, "accepted_subsmissions": 29270, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "705", "downvotes": "128"}, {"id": 551, "name": "Student Attendance Record I", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/student-attendance-record-i", "submissions": 228674, "accepted_subsmissions": 105216, "group": 2, "topics": ["String"], "upvotes": "1", "downvotes": "0"}, {"id": 547, "name": "Number of Provinces", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/number-of-provinces", "submissions": 410886, "accepted_subsmissions": 248777, "group": 2, "topics": ["Depth-first Search", "Union Find"], "upvotes": "2816", "downvotes": "173"}, {"id": 546, "name": "Remove Boxes", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/remove-boxes", "submissions": 41919, "accepted_subsmissions": 18495, "group": 2, "topics": ["Dynamic Programming", "Depth-first Search"], "upvotes": "831", "downvotes": "57"}, {"id": 543, "name": "Diameter of Binary Tree", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/diameter-of-binary-tree", "submissions": 908752, "accepted_subsmissions": 447259, "group": 2, "topics": ["Tree"], "upvotes": "4383", "downvotes": "275"}, {"id": 542, "name": "01 Matrix", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/01-matrix", "submissions": 287876, "accepted_subsmissions": 117946, "group": 2, "topics": ["Depth-first Search", "Breadth-first Search"], "upvotes": "2160", "downvotes": "124"}, {"id": 541, "name": "Reverse String II", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/reverse-string-ii", "submissions": 220406, "accepted_subsmissions": 108506, "group": 2, "topics": ["String"], "upvotes": "571", "downvotes": "1580"}, {"id": 540, "name": "Single Element in a Sorted Array", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/single-element-in-a-sorted-array", "submissions": 316026, "accepted_subsmissions": 183069, "group": 2, "topics": ["Binary Search"], "upvotes": "2287", "downvotes": "87"}, {"id": 539, "name": "Minimum Time Difference", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/minimum-time-difference", "submissions": 114067, "accepted_subsmissions": 59716, "group": 2, "topics": ["String"], "upvotes": "644", "downvotes": "171"}, {"id": 538, "name": "Convert BST to Greater Tree", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/convert-bst-to-greater-tree", "submissions": 271185, "accepted_subsmissions": 161484, "group": 2, "topics": ["Tree", "Depth-first Search", "Binary Search Tree", "Recursion"], "upvotes": "2536", "downvotes": "144"}, {"id": 537, "name": "Complex Number Multiplication", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/complex-number-multiplication", "submissions": 78549, "accepted_subsmissions": 53666, "group": 2, "topics": ["Math", "String"], "upvotes": "286", "downvotes": "799"}, {"id": 535, "name": "Encode and Decode TinyURL", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/encode-and-decode-tinyurl", "submissions": 151313, "accepted_subsmissions": 122584, "group": 2, "topics": ["Hash Table", "Math"], "upvotes": "793", "downvotes": "1654"}, {"id": 532, "name": "K-diff Pairs in an Array", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/k-diff-pairs-in-an-array", "submissions": 454398, "accepted_subsmissions": 160582, "group": 2, "topics": ["Array", "Two Pointers"], "upvotes": "1067", "downvotes": "1556"}, {"id": 530, "name": "Minimum Absolute Difference in BST", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/minimum-absolute-difference-in-bst", "submissions": 197278, "accepted_subsmissions": 108327, "group": 2, "topics": ["Tree"], "upvotes": "1158", "downvotes": "90"}, {"id": 529, "name": "Minesweeper", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/minesweeper", "submissions": 130290, "accepted_subsmissions": 79783, "group": 2, "topics": ["Depth-first Search", "Breadth-first Search"], "upvotes": "836", "downvotes": "631"}, {"id": 1721, "name": "Swapping Nodes in a Linked List", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/swapping-nodes-in-a-linked-list", "submissions": 29156, "accepted_subsmissions": 18788, "group": 2, "topics": ["Linked List"], "upvotes": "335", "downvotes": "24"}, {"id": 526, "name": "Beautiful Arrangement", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/beautiful-arrangement", "submissions": 140684, "accepted_subsmissions": 87140, "group": 2, "topics": ["Backtracking", "Depth-first Search"], "upvotes": "1174", "downvotes": "205"}, {"id": 525, "name": "Contiguous Array", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/contiguous-array", "submissions": 420487, "accepted_subsmissions": 183038, "group": 2, "topics": ["Hash Table"], "upvotes": "2700", "downvotes": "136"}, {"id": 524, "name": "Longest Word in Dictionary through Deleting", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/longest-word-in-dictionary-through-deleting", "submissions": 203813, "accepted_subsmissions": 102045, "group": 2, "topics": ["Two Pointers", "Sort"], "upvotes": "965", "downvotes": "295"}, {"id": 523, "name": "Continuous Subarray Sum", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/continuous-subarray-sum", "submissions": 724176, "accepted_subsmissions": 179087, "group": 2, "topics": ["Math", "Dynamic Programming"], "upvotes": "1863", "downvotes": "2602"}, {"id": 522, "name": "Longest Uncommon Subsequence II", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/longest-uncommon-subsequence-ii", "submissions": 70941, "accepted_subsmissions": 24269, "group": 2, "topics": ["String"], "upvotes": "213", "downvotes": "648"}, {"id": 521, "name": "Longest Uncommon Subsequence I", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/longest-uncommon-subsequence-i", "submissions": 116230, "accepted_subsmissions": 68293, "group": 2, "topics": ["String", "Brainteaser"], "upvotes": "391", "downvotes": "4666"}, {"id": 520, "name": "Detect Capital", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/detect-capital", "submissions": 346066, "accepted_subsmissions": 186689, "group": 2, "topics": ["String"], "upvotes": "781", "downvotes": "290"}, {"id": 518, "name": "Coin Change 2", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/coin-change-2", "submissions": 348676, "accepted_subsmissions": 180844, "group": 2, "topics": [], "upvotes": "2901", "downvotes": "75"}, {"id": 517, "name": "Super Washing Machines", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/super-washing-machines", "submissions": 48261, "accepted_subsmissions": 18645, "group": 2, "topics": ["Math", "Dynamic Programming"], "upvotes": "399", "downvotes": "161"}, {"id": 516, "name": "Longest Palindromic Subsequence", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/longest-palindromic-subsequence", "submissions": 287577, "accepted_subsmissions": 159768, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "2916", "downvotes": "214"}, {"id": 515, "name": "Find Largest Value in Each Tree Row", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/find-largest-value-in-each-tree-row", "submissions": 207958, "accepted_subsmissions": 129538, "group": 2, "topics": ["Tree", "Depth-first Search", "Breadth-first Search"], "upvotes": "1248", "downvotes": "72"}, {"id": 514, "name": "Freedom Trail", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/freedom-trail", "submissions": 49292, "accepted_subsmissions": 22156, "group": 2, "topics": ["Divide and Conquer", "Dynamic Programming", "Depth-first Search"], "upvotes": "514", "downvotes": "27"}, {"id": 513, "name": "Find Bottom Left Tree Value", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/find-bottom-left-tree-value", "submissions": 200718, "accepted_subsmissions": 125803, "group": 2, "topics": ["Tree", "Depth-first Search", "Breadth-first Search"], "upvotes": "1272", "downvotes": "169"}, {"id": 508, "name": "Most Frequent Subtree Sum", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/most-frequent-subtree-sum", "submissions": 139357, "accepted_subsmissions": 82391, "group": 2, "topics": ["Hash Table", "Tree"], "upvotes": "840", "downvotes": "143"}, {"id": 507, "name": "Perfect Number", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/perfect-number", "submissions": 212222, "accepted_subsmissions": 76862, "group": 2, "topics": ["Math"], "upvotes": "364", "downvotes": "716"}, {"id": 506, "name": "Relative Ranks", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/relative-ranks", "submissions": 118182, "accepted_subsmissions": 60664, "group": 2, "topics": [], "upvotes": "12", "downvotes": "0"}, {"id": 504, "name": "Base 7", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/base-7", "submissions": 138201, "accepted_subsmissions": 64147, "group": 2, "topics": [], "upvotes": "292", "downvotes": "163"}, {"id": 503, "name": "Next Greater Element II", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/next-greater-element-ii", "submissions": 220099, "accepted_subsmissions": 128835, "group": 2, "topics": ["Stack"], "upvotes": "2262", "downvotes": "89"}, {"id": 502, "name": "IPO", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/ipo", "submissions": 52983, "accepted_subsmissions": 22070, "group": 2, "topics": ["Heap", "Greedy"], "upvotes": "482", "downvotes": "48"}, {"id": 501, "name": "Find Mode in Binary Search Tree", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/find-mode-in-binary-search-tree", "submissions": 241283, "accepted_subsmissions": 105063, "group": 2, "topics": ["Tree"], "upvotes": "1266", "downvotes": "409"}, {"id": 500, "name": "Keyboard Row", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/keyboard-row", "submissions": 187577, "accepted_subsmissions": 123311, "group": 2, "topics": ["Hash Table"], "upvotes": "634", "downvotes": "753"}, {"id": 498, "name": "Diagonal Traverse", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/diagonal-traverse", "submissions": 241525, "accepted_subsmissions": 121614, "group": 2, "topics": [], "upvotes": "1199", "downvotes": "401"}, {"id": 496, "name": "Next Greater Element I", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/next-greater-element-i", "submissions": 313953, "accepted_subsmissions": 206301, "group": 2, "topics": ["Stack"], "upvotes": "2290", "downvotes": "2763"}, {"id": 495, "name": "Teemo Attacking", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/teemo-attacking", "submissions": 130047, "accepted_subsmissions": 72971, "group": 2, "topics": ["Array"], "upvotes": "512", "downvotes": "1031"}, {"id": 494, "name": "Target Sum", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/target-sum", "submissions": 483896, "accepted_subsmissions": 221067, "group": 2, "topics": ["Dynamic Programming", "Depth-first Search"], "upvotes": "3803", "downvotes": "156"}, {"id": 493, "name": "Reverse Pairs", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/reverse-pairs", "submissions": 191745, "accepted_subsmissions": 51659, "group": 2, "topics": ["Binary Search", "Divide and Conquer", "Sort", "Binary Indexed Tree", "Segment Tree"], "upvotes": "1283", "downvotes": "139"}, {"id": 492, "name": "Construct the Rectangle", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/construct-the-rectangle", "submissions": 125686, "accepted_subsmissions": 63417, "group": 2, "topics": ["Math"], "upvotes": "258", "downvotes": "285"}, {"id": 491, "name": "Increasing Subsequences", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/increasing-subsequences", "submissions": 116878, "accepted_subsmissions": 55577, "group": 2, "topics": ["Depth-first Search"], "upvotes": "929", "downvotes": "135"}, {"id": 1643, "name": "Kth Smallest Instructions", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/kth-smallest-instructions", "submissions": 10564, "accepted_subsmissions": 4650, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "183", "downvotes": "3"}, {"id": 488, "name": "Zuma Game", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/zuma-game", "submissions": 42187, "accepted_subsmissions": 16131, "group": 2, "topics": ["Depth-first Search"], "upvotes": "269", "downvotes": "287"}, {"id": 486, "name": "Predict the Winner", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/predict-the-winner", "submissions": 171694, "accepted_subsmissions": 83983, "group": 2, "topics": ["Dynamic Programming", "Minimax"], "upvotes": "1842", "downvotes": "105"}, {"id": 485, "name": "Max Consecutive Ones", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/max-consecutive-ones", "submissions": 692291, "accepted_subsmissions": 365564, "group": 2, "topics": ["Array"], "upvotes": "1142", "downvotes": "380"}, {"id": 483, "name": "Smallest Good Base", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/smallest-good-base", "submissions": 38873, "accepted_subsmissions": 14117, "group": 2, "topics": ["Math", "Binary Search"], "upvotes": "187", "downvotes": "363"}, {"id": 482, "name": "License Key Formatting", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/license-key-formatting", "submissions": 370487, "accepted_subsmissions": 159577, "group": 2, "topics": [], "upvotes": "573", "downvotes": "864"}, {"id": 481, "name": "Magical String", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/magical-string", "submissions": 50053, "accepted_subsmissions": 24066, "group": 2, "topics": [], "upvotes": "127", "downvotes": "746"}, {"id": 480, "name": "Sliding Window Median", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/sliding-window-median", "submissions": 184548, "accepted_subsmissions": 71572, "group": 2, "topics": ["Sliding Window"], "upvotes": "1310", "downvotes": "96"}, {"id": 479, "name": "Largest Palindrome Product", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/largest-palindrome-product", "submissions": 60432, "accepted_subsmissions": 17901, "group": 2, "topics": [], "upvotes": "99", "downvotes": "1364"}, {"id": 477, "name": "Total Hamming Distance", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/total-hamming-distance", "submissions": 139741, "accepted_subsmissions": 70733, "group": 2, "topics": ["Bit Manipulation"], "upvotes": "1072", "downvotes": "64"}, {"id": 476, "name": "Number Complement", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/number-complement", "submissions": 319770, "accepted_subsmissions": 208410, "group": 2, "topics": ["Bit Manipulation"], "upvotes": "1121", "downvotes": "85"}, {"id": 475, "name": "Heaters", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/heaters", "submissions": 215433, "accepted_subsmissions": 72523, "group": 2, "topics": ["Binary Search"], "upvotes": "868", "downvotes": "924"}, {"id": 474, "name": "Ones and Zeroes", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/ones-and-zeroes", "submissions": 137558, "accepted_subsmissions": 60180, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "1408", "downvotes": "264"}, {"id": 473, "name": "Matchsticks to Square", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/matchsticks-to-square", "submissions": 112016, "accepted_subsmissions": 42849, "group": 2, "topics": ["Depth-first Search"], "upvotes": "744", "downvotes": "64"}, {"id": 472, "name": "Concatenated Words", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/concatenated-words", "submissions": 199855, "accepted_subsmissions": 87801, "group": 2, "topics": ["Dynamic Programming", "Depth-first Search", "Trie"], "upvotes": "1095", "downvotes": "145"}, {"id": 468, "name": "Validate IP Address", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/validate-ip-address", "submissions": 384096, "accepted_subsmissions": 96089, "group": 2, "topics": ["String"], "upvotes": "458", "downvotes": "1960"}, {"id": 467, "name": "Unique Substrings in Wraparound String", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/unique-substrings-in-wraparound-string", "submissions": 80278, "accepted_subsmissions": 28970, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "762", "downvotes": "99"}, {"id": 466, "name": "Count The Repetitions", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/count-the-repetitions", "submissions": 42363, "accepted_subsmissions": 12125, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "214", "downvotes": "193"}, {"id": 464, "name": "Can I Win", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/can-i-win", "submissions": 203539, "accepted_subsmissions": 60361, "group": 2, "topics": ["Dynamic Programming", "Minimax"], "upvotes": "1258", "downvotes": "200"}, {"id": 463, "name": "Island Perimeter", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/island-perimeter", "submissions": 395544, "accepted_subsmissions": 263865, "group": 2, "topics": ["Hash Table"], "upvotes": "2621", "downvotes": "137"}, {"id": 462, "name": "Minimum Moves to Equal Array Elements II", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/minimum-moves-to-equal-array-elements-ii", "submissions": 94670, "accepted_subsmissions": 51488, "group": 2, "topics": ["Math"], "upvotes": "633", "downvotes": "53"}, {"id": 461, "name": "Hamming Distance", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/hamming-distance", "submissions": 530144, "accepted_subsmissions": 388063, "group": 2, "topics": ["Bit Manipulation"], "upvotes": "2134", "downvotes": "176"}, {"id": 460, "name": "LFU Cache", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/lfu-cache", "submissions": 277184, "accepted_subsmissions": 100303, "group": 2, "topics": ["Design"], "upvotes": "1886", "downvotes": "150"}, {"id": 459, "name": "Repeated Substring Pattern", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/repeated-substring-pattern", "submissions": 431617, "accepted_subsmissions": 187094, "group": 2, "topics": ["String"], "upvotes": "2301", "downvotes": "238"}, {"id": 458, "name": "Poor Pigs", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/poor-pigs", "submissions": 56355, "accepted_subsmissions": 30725, "group": 2, "topics": ["Math"], "upvotes": "544", "downvotes": "1028"}, {"id": 457, "name": "Circular Array Loop", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/circular-array-loop", "submissions": 144086, "accepted_subsmissions": 43532, "group": 2, "topics": ["Array", "Two Pointers"], "upvotes": "15", "downvotes": "19"}, {"id": 456, "name": "132 Pattern", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/132-pattern", "submissions": 276313, "accepted_subsmissions": 84619, "group": 2, "topics": ["Stack"], "upvotes": "2172", "downvotes": "138"}, {"id": 455, "name": "Assign Cookies", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/assign-cookies", "submissions": 232135, "accepted_subsmissions": 117015, "group": 2, "topics": ["Greedy"], "upvotes": "823", "downvotes": "114"}, {"id": 454, "name": "4Sum II", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/4sum-ii", "submissions": 285296, "accepted_subsmissions": 155806, "group": 2, "topics": ["Hash Table", "Binary Search"], "upvotes": "1821", "downvotes": "84"}, {"id": 453, "name": "Minimum Moves to Equal Array Elements", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/minimum-moves-to-equal-array-elements", "submissions": 174060, "accepted_subsmissions": 88415, "group": 2, "topics": ["Math"], "upvotes": "763", "downvotes": "1110"}, {"id": 452, "name": "Minimum Number of Arrows to Burst Balloons", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/minimum-number-of-arrows-to-burst-balloons", "submissions": 218170, "accepted_subsmissions": 108588, "group": 2, "topics": ["Greedy", "Sort"], "upvotes": "1638", "downvotes": "60"}, {"id": 451, "name": "Sort Characters By Frequency", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/sort-characters-by-frequency", "submissions": 378644, "accepted_subsmissions": 244065, "group": 2, "topics": ["Hash Table", "Heap"], "upvotes": "2203", "downvotes": "145"}, {"id": 450, "name": "Delete Node in a BST", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/delete-node-in-a-bst", "submissions": 355615, "accepted_subsmissions": 161371, "group": 2, "topics": ["Tree"], "upvotes": "2764", "downvotes": "107"}, {"id": 449, "name": "Serialize and Deserialize BST", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/serialize-and-deserialize-bst", "submissions": 271410, "accepted_subsmissions": 146894, "group": 2, "topics": ["Tree"], "upvotes": "1858", "downvotes": "94"}, {"id": 448, "name": "Find All Numbers Disappeared in an Array", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/find-all-numbers-disappeared-in-an-array", "submissions": 625918, "accepted_subsmissions": 351193, "group": 2, "topics": ["Array"], "upvotes": "3949", "downvotes": "287"}, {"id": 447, "name": "Number of Boomerangs", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/number-of-boomerangs", "submissions": 138632, "accepted_subsmissions": 72740, "group": 2, "topics": ["Hash Table", "Math"], "upvotes": "454", "downvotes": "751"}, {"id": 446, "name": "Arithmetic Slices II - Subsequence", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/arithmetic-slices-ii-subsequence", "submissions": 73568, "accepted_subsmissions": 24654, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "670", "downvotes": "63"}, {"id": 445, "name": "Add Two Numbers II", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/add-two-numbers-ii", "submissions": 400642, "accepted_subsmissions": 225777, "group": 2, "topics": ["Linked List"], "upvotes": "2207", "downvotes": "197"}, {"id": 443, "name": "String Compression", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/string-compression", "submissions": 360130, "accepted_subsmissions": 157600, "group": 2, "topics": ["String"], "upvotes": "1198", "downvotes": "3096"}, {"id": 442, "name": "Find All Duplicates in an Array", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/find-all-duplicates-in-an-array", "submissions": 377485, "accepted_subsmissions": 260391, "group": 2, "topics": ["Array"], "upvotes": "3370", "downvotes": "178"}, {"id": 441, "name": "Arranging Coins", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/arranging-coins", "submissions": 438317, "accepted_subsmissions": 185850, "group": 2, "topics": ["Math", "Binary Search"], "upvotes": "868", "downvotes": "782"}, {"id": 440, "name": "K-th Smallest in Lexicographical Order", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/k-th-smallest-in-lexicographical-order", "submissions": 49585, "accepted_subsmissions": 14778, "group": 2, "topics": [], "upvotes": "402", "downvotes": "59"}, {"id": 438, "name": "Find All Anagrams in a String", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/find-all-anagrams-in-a-string", "submissions": 760762, "accepted_subsmissions": 342588, "group": 2, "topics": ["Hash Table"], "upvotes": "3972", "downvotes": "200"}, {"id": 437, "name": "Path Sum III", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/path-sum-iii", "submissions": 537531, "accepted_subsmissions": 258995, "group": 2, "topics": ["Tree"], "upvotes": "4881", "downvotes": "319"}, {"id": 436, "name": "Find Right Interval", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/find-right-interval", "submissions": 127935, "accepted_subsmissions": 62076, "group": 2, "topics": ["Binary Search"], "upvotes": "691", "downvotes": "190"}, {"id": 435, "name": "Non-overlapping Intervals", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/non-overlapping-intervals", "submissions": 300714, "accepted_subsmissions": 131937, "group": 2, "topics": ["Greedy"], "upvotes": "1917", "downvotes": "52"}, {"id": 434, "name": "Number of Segments in a String", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/number-of-segments-in-a-string", "submissions": 238208, "accepted_subsmissions": 89928, "group": 2, "topics": ["String"], "upvotes": "286", "downvotes": "843"}, {"id": 433, "name": "Minimum Genetic Mutation", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/minimum-genetic-mutation", "submissions": 87156, "accepted_subsmissions": 37783, "group": 2, "topics": [], "upvotes": "524", "downvotes": "72"}, {"id": 432, "name": "All O`one Data Structure", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/all-oone-data-structure", "submissions": 115791, "accepted_subsmissions": 38412, "group": 2, "topics": ["Design"], "upvotes": "753", "downvotes": "90"}, {"id": 424, "name": "Longest Repeating Character Replacement", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/longest-repeating-character-replacement", "submissions": 214353, "accepted_subsmissions": 103388, "group": 2, "topics": ["Two Pointers", "Sliding Window"], "upvotes": "2192", "downvotes": "110"}, {"id": 423, "name": "Reconstruct Original Digits from English", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/reconstruct-original-digits-from-english", "submissions": 56070, "accepted_subsmissions": 26648, "group": 2, "topics": ["Math"], "upvotes": "200", "downvotes": "657"}, {"id": 421, "name": "Maximum XOR of Two Numbers in an Array", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/maximum-xor-of-two-numbers-in-an-array", "submissions": 146644, "accepted_subsmissions": 79422, "group": 2, "topics": ["Bit Manipulation", "Trie"], "upvotes": "1959", "downvotes": "213"}, {"id": 420, "name": "Strong Password Checker", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/strong-password-checker", "submissions": 121095, "accepted_subsmissions": 16956, "group": 2, "topics": [], "upvotes": "305", "downvotes": "915"}, {"id": 419, "name": "Battleships in a Board", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/battleships-in-a-board", "submissions": 155394, "accepted_subsmissions": 110470, "group": 2, "topics": [], "upvotes": "916", "downvotes": "585"}, {"id": 417, "name": "Pacific Atlantic Water Flow", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/pacific-atlantic-water-flow", "submissions": 238239, "accepted_subsmissions": 101589, "group": 2, "topics": ["Depth-first Search", "Breadth-first Search"], "upvotes": "1789", "downvotes": "418"}, {"id": 416, "name": "Partition Equal Subset Sum", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/partition-equal-subset-sum", "submissions": 593063, "accepted_subsmissions": 266250, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "4099", "downvotes": "90"}, {"id": 415, "name": "Add Strings", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/add-strings", "submissions": 563521, "accepted_subsmissions": 271648, "group": 2, "topics": ["String"], "upvotes": "1612", "downvotes": "366"}, {"id": 414, "name": "Third Maximum Number", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/third-maximum-number", "submissions": 682131, "accepted_subsmissions": 209354, "group": 2, "topics": ["Array"], "upvotes": "920", "downvotes": "1633"}, {"id": 413, "name": "Arithmetic Slices", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/arithmetic-slices", "submissions": 212921, "accepted_subsmissions": 127623, "group": 2, "topics": ["Math", "Dynamic Programming"], "upvotes": "1684", "downvotes": "204"}, {"id": 412, "name": "Fizz Buzz", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/fizz-buzz", "submissions": 705137, "accepted_subsmissions": 448140, "group": 2, "topics": [], "upvotes": "1265", "downvotes": "1488"}, {"id": 410, "name": "Split Array Largest Sum", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/split-array-largest-sum", "submissions": 249358, "accepted_subsmissions": 115827, "group": 2, "topics": ["Binary Search", "Dynamic Programming"], "upvotes": "2467", "downvotes": "91"}, {"id": 409, "name": "Longest Palindrome", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/longest-palindrome", "submissions": 374042, "accepted_subsmissions": 195413, "group": 2, "topics": ["Hash Table"], "upvotes": "1483", "downvotes": "100"}, {"id": 407, "name": "Trapping Rain Water II", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/trapping-rain-water-ii", "submissions": 115358, "accepted_subsmissions": 51148, "group": 2, "topics": ["Heap", "Breadth-first Search"], "upvotes": "1741", "downvotes": "37"}, {"id": 406, "name": "Queue Reconstruction by Height", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/queue-reconstruction-by-height", "submissions": 278260, "accepted_subsmissions": 190497, "group": 2, "topics": ["Greedy"], "upvotes": "3917", "downvotes": "438"}, {"id": 405, "name": "Convert a Number to Hexadecimal", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/convert-a-number-to-hexadecimal", "submissions": 174067, "accepted_subsmissions": 77385, "group": 2, "topics": ["Bit Manipulation"], "upvotes": "578", "downvotes": "129"}, {"id": 404, "name": "Sum of Left Leaves", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/sum-of-left-leaves", "submissions": 454042, "accepted_subsmissions": 237326, "group": 2, "topics": ["Tree"], "upvotes": "1736", "downvotes": "166"}, {"id": 403, "name": "Frog Jump", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/frog-jump", "submissions": 279156, "accepted_subsmissions": 115896, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "1459", "downvotes": "130"}, {"id": 402, "name": "Remove K Digits", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/remove-k-digits", "submissions": 606274, "accepted_subsmissions": 173828, "group": 2, "topics": ["Stack", "Greedy"], "upvotes": "3125", "downvotes": "133"}, {"id": 401, "name": "Binary Watch", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/binary-watch", "submissions": 193345, "accepted_subsmissions": 93745, "group": 2, "topics": ["Backtracking", "Bit Manipulation"], "upvotes": "717", "downvotes": "1246"}, {"id": 400, "name": "Nth Digit", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/nth-digit", "submissions": 201069, "accepted_subsmissions": 65145, "group": 2, "topics": ["Math"], "upvotes": "452", "downvotes": "1201"}, {"id": 399, "name": "Evaluate Division", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/evaluate-division", "submissions": 323648, "accepted_subsmissions": 176159, "group": 2, "topics": ["Union Find", "Graph"], "upvotes": "3260", "downvotes": "258"}, {"id": 398, "name": "Random Pick Index", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/random-pick-index", "submissions": 197887, "accepted_subsmissions": 114893, "group": 2, "topics": ["Reservoir Sampling"], "upvotes": "624", "downvotes": "813"}, {"id": 397, "name": "Integer Replacement", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/integer-replacement", "submissions": 190002, "accepted_subsmissions": 63663, "group": 2, "topics": ["Math", "Bit Manipulation"], "upvotes": "492", "downvotes": "357"}, {"id": 396, "name": "Rotate Function", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/rotate-function", "submissions": 132895, "accepted_subsmissions": 48857, "group": 2, "topics": ["Math"], "upvotes": "488", "downvotes": "155"}, {"id": 395, "name": "Longest Substring with At Least K Repeating Characters", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/longest-substring-with-at-least-k-repeating-characters", "submissions": 266593, "accepted_subsmissions": 116179, "group": 2, "topics": ["Divide and Conquer", "Recursion", "Sliding Window"], "upvotes": "2364", "downvotes": "259"}, {"id": 394, "name": "Decode String", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/decode-string", "submissions": 584715, "accepted_subsmissions": 308503, "group": 2, "topics": ["Stack", "Depth-first Search"], "upvotes": "4717", "downvotes": "228"}, {"id": 393, "name": "UTF-8 Validation", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/utf-8-validation", "submissions": 147856, "accepted_subsmissions": 56307, "group": 2, "topics": ["Bit Manipulation"], "upvotes": "281", "downvotes": "1223"}, {"id": 392, "name": "Is Subsequence", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/is-subsequence", "submissions": 564909, "accepted_subsmissions": 279594, "group": 2, "topics": ["Binary Search", "Dynamic Programming", "Greedy"], "upvotes": "2285", "downvotes": "229"}, {"id": 391, "name": "Perfect Rectangle", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/perfect-rectangle", "submissions": 93150, "accepted_subsmissions": 29066, "group": 2, "topics": ["Line Sweep"], "upvotes": "449", "downvotes": "85"}, {"id": 390, "name": "Elimination Game", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/elimination-game", "submissions": 82490, "accepted_subsmissions": 37138, "group": 2, "topics": [], "upvotes": "544", "downvotes": "407"}, {"id": 389, "name": "Find the Difference", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/find-the-difference", "submissions": 440701, "accepted_subsmissions": 254862, "group": 2, "topics": ["Hash Table", "Bit Manipulation"], "upvotes": "1209", "downvotes": "313"}, {"id": 388, "name": "Longest Absolute File Path", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/longest-absolute-file-path", "submissions": 231411, "accepted_subsmissions": 99385, "group": 2, "topics": [], "upvotes": "710", "downvotes": "1685"}, {"id": 387, "name": "First Unique Character in a String", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/first-unique-character-in-a-string", "submissions": 1296202, "accepted_subsmissions": 697178, "group": 2, "topics": ["Hash Table", "String"], "upvotes": "2741", "downvotes": "138"}, {"id": 386, "name": "Lexicographical Numbers", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/lexicographical-numbers", "submissions": 116787, "accepted_subsmissions": 63385, "group": 2, "topics": [], "upvotes": "714", "downvotes": "90"}, {"id": 385, "name": "Mini Parser", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/mini-parser", "submissions": 121775, "accepted_subsmissions": 42039, "group": 2, "topics": ["String", "Stack"], "upvotes": "283", "downvotes": "954"}, {"id": 384, "name": "Shuffle an Array", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/shuffle-an-array", "submissions": 304233, "accepted_subsmissions": 164434, "group": 2, "topics": [], "upvotes": "99", "downvotes": "130"}, {"id": 383, "name": "Ransom Note", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/ransom-note", "submissions": 476804, "accepted_subsmissions": 254259, "group": 2, "topics": ["String"], "upvotes": "825", "downvotes": "233"}, {"id": 382, "name": "Linked List Random Node", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/linked-list-random-node", "submissions": 190597, "accepted_subsmissions": 103269, "group": 2, "topics": ["Reservoir Sampling"], "upvotes": "887", "downvotes": "235"}, {"id": 381, "name": "Insert Delete GetRandom O(1) - Duplicates allowed", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/insert-delete-getrandom-o1-duplicates-allowed", "submissions": 234675, "accepted_subsmissions": 81900, "group": 2, "topics": ["Array", "Hash Table", "Design"], "upvotes": "1079", "downvotes": "87"}, {"id": 380, "name": "Insert Delete GetRandom O(1)", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/insert-delete-getrandom-o1", "submissions": 648737, "accepted_subsmissions": 317364, "group": 2, "topics": ["Array", "Hash Table", "Design"], "upvotes": "3378", "downvotes": "201"}, {"id": 378, "name": "Kth Smallest Element in a Sorted Matrix", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/kth-smallest-element-in-a-sorted-matrix", "submissions": 437782, "accepted_subsmissions": 246246, "group": 2, "topics": ["Binary Search", "Heap"], "upvotes": "3406", "downvotes": "179"}, {"id": 377, "name": "Combination Sum IV", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/combination-sum-iv", "submissions": 328117, "accepted_subsmissions": 151278, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "1918", "downvotes": "226"}, {"id": 376, "name": "Wiggle Subsequence", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/wiggle-subsequence", "submissions": 204421, "accepted_subsmissions": 82298, "group": 2, "topics": ["Dynamic Programming", "Greedy"], "upvotes": "1331", "downvotes": "67"}, {"id": 375, "name": "Guess Number Higher or Lower II", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/guess-number-higher-or-lower-ii", "submissions": 175422, "accepted_subsmissions": 74121, "group": 2, "topics": ["Dynamic Programming", "Minimax"], "upvotes": "994", "downvotes": "1465"}, {"id": 374, "name": "Guess Number Higher or Lower", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/guess-number-higher-or-lower", "submissions": 423873, "accepted_subsmissions": 189643, "group": 2, "topics": ["Binary Search"], "upvotes": "566", "downvotes": "2033"}, {"id": 373, "name": "Find K Pairs with Smallest Sums", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/find-k-pairs-with-smallest-sums", "submissions": 325512, "accepted_subsmissions": 122963, "group": 2, "topics": ["Heap"], "upvotes": "1842", "downvotes": "126"}, {"id": 372, "name": "Super Pow", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/super-pow", "submissions": 107854, "accepted_subsmissions": 39624, "group": 2, "topics": ["Math"], "upvotes": "293", "downvotes": "872"}, {"id": 371, "name": "Sum of Two Integers", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/sum-of-two-integers", "submissions": 428202, "accepted_subsmissions": 216661, "group": 2, "topics": ["Bit Manipulation"], "upvotes": "1600", "downvotes": "2641"}, {"id": 368, "name": "Largest Divisible Subset", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/largest-divisible-subset", "submissions": 284211, "accepted_subsmissions": 108984, "group": 2, "topics": ["Math", "Dynamic Programming"], "upvotes": "1762", "downvotes": "88"}, {"id": 367, "name": "Valid Perfect Square", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/valid-perfect-square", "submissions": 619278, "accepted_subsmissions": 260338, "group": 2, "topics": ["Math", "Binary Search"], "upvotes": "1156", "downvotes": "192"}, {"id": 365, "name": "Water and Jug Problem", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/water-and-jug-problem", "submissions": 148183, "accepted_subsmissions": 46137, "group": 2, "topics": ["Math"], "upvotes": "405", "downvotes": "858"}, {"id": 363, "name": "Max Sum of Rectangle No Larger Than K", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/max-sum-of-rectangle-no-larger-than-k", "submissions": 137668, "accepted_subsmissions": 52870, "group": 2, "topics": ["Binary Search", "Dynamic Programming", "Queue"], "upvotes": "1065", "downvotes": "80"}, {"id": 357, "name": "Count Numbers with Unique Digits", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/count-numbers-with-unique-digits", "submissions": 176582, "accepted_subsmissions": 86313, "group": 2, "topics": ["Math", "Dynamic Programming", "Backtracking"], "upvotes": "546", "downvotes": "987"}, {"id": 355, "name": "Design Twitter", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/design-twitter", "submissions": 199890, "accepted_subsmissions": 62909, "group": 2, "topics": ["Hash Table", "Heap", "Design"], "upvotes": "1239", "downvotes": "232"}, {"id": 354, "name": "Russian Doll Envelopes", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/russian-doll-envelopes", "submissions": 234015, "accepted_subsmissions": 85160, "group": 2, "topics": ["Binary Search", "Dynamic Programming"], "upvotes": "1638", "downvotes": "51"}, {"id": 352, "name": "Data Stream as Disjoint Intervals", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/data-stream-as-disjoint-intervals", "submissions": 85846, "accepted_subsmissions": 41796, "group": 2, "topics": ["Binary Search", "Ordered Map"], "upvotes": "463", "downvotes": "116"}, {"id": 350, "name": "Intersection of Two Arrays II", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/intersection-of-two-arrays-ii", "submissions": 908287, "accepted_subsmissions": 472088, "group": 2, "topics": ["Hash Table", "Two Pointers", "Binary Search", "Sort"], "upvotes": "2081", "downvotes": "509"}, {"id": 349, "name": "Intersection of Two Arrays", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/intersection-of-two-arrays", "submissions": 701838, "accepted_subsmissions": 455726, "group": 2, "topics": ["Hash Table", "Two Pointers", "Binary Search", "Sort"], "upvotes": "1281", "downvotes": "1489"}, {"id": 347, "name": "Top K Frequent Elements", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/top-k-frequent-elements", "submissions": 888629, "accepted_subsmissions": 555013, "group": 2, "topics": ["Hash Table", "Heap"], "upvotes": "4623", "downvotes": "261"}, {"id": 345, "name": "Reverse Vowels of a String", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/reverse-vowels-of-a-string", "submissions": 592034, "accepted_subsmissions": 267138, "group": 2, "topics": ["Two Pointers", "String"], "upvotes": "954", "downvotes": "1445"}, {"id": 344, "name": "Reverse String", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/reverse-string", "submissions": 1390754, "accepted_subsmissions": 979972, "group": 2, "topics": ["Two Pointers", "String"], "upvotes": "2172", "downvotes": "754"}, {"id": 343, "name": "Integer Break", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/integer-break", "submissions": 245908, "accepted_subsmissions": 126015, "group": 2, "topics": ["Math", "Dynamic Programming"], "upvotes": "1463", "downvotes": "254"}, {"id": 342, "name": "Power of Four", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/power-of-four", "submissions": 534621, "accepted_subsmissions": 223286, "group": 2, "topics": ["Bit Manipulation"], "upvotes": "819", "downvotes": "250"}, {"id": 341, "name": "Flatten Nested List Iterator", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/flatten-nested-list-iterator", "submissions": 373318, "accepted_subsmissions": 203940, "group": 2, "topics": ["Stack", "Design"], "upvotes": "2058", "downvotes": "785"}, {"id": 338, "name": "Counting Bits", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/counting-bits", "submissions": 483907, "accepted_subsmissions": 340921, "group": 2, "topics": ["Dynamic Programming", "Bit Manipulation"], "upvotes": "3669", "downvotes": "201"}, {"id": 337, "name": "House Robber III", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/house-robber-iii", "submissions": 392641, "accepted_subsmissions": 203934, "group": 2, "topics": ["Dynamic Programming", "Tree", "Depth-first Search"], "upvotes": "3826", "downvotes": "65"}, {"id": 336, "name": "Palindrome Pairs", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/palindrome-pairs", "submissions": 325502, "accepted_subsmissions": 112969, "group": 2, "topics": ["Hash Table", "String", "Trie"], "upvotes": "1720", "downvotes": "166"}, {"id": 335, "name": "Self Crossing", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/self-crossing", "submissions": 86713, "accepted_subsmissions": 24876, "group": 2, "topics": ["Math"], "upvotes": "173", "downvotes": "400"}, {"id": 334, "name": "Increasing Triplet Subsequence", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/increasing-triplet-subsequence", "submissions": 477627, "accepted_subsmissions": 194786, "group": 2, "topics": [], "upvotes": "2334", "downvotes": "164"}, {"id": 332, "name": "Reconstruct Itinerary", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/reconstruct-itinerary", "submissions": 531295, "accepted_subsmissions": 201567, "group": 2, "topics": ["Depth-first Search", "Graph"], "upvotes": "2554", "downvotes": "1217"}, {"id": 331, "name": "Verify Preorder Serialization of a Binary Tree", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/verify-preorder-serialization-of-a-binary-tree", "submissions": 191511, "accepted_subsmissions": 78589, "group": 2, "topics": ["Stack"], "upvotes": "918", "downvotes": "57"}, {"id": 330, "name": "Patching Array", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/patching-array", "submissions": 111362, "accepted_subsmissions": 38959, "group": 2, "topics": ["Greedy"], "upvotes": "604", "downvotes": "84"}, {"id": 329, "name": "Longest Increasing Path in a Matrix", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/longest-increasing-path-in-a-matrix", "submissions": 436642, "accepted_subsmissions": 196729, "group": 2, "topics": ["Depth-first Search", "Topological Sort", "Memoization"], "upvotes": "2809", "downvotes": "52"}, {"id": 328, "name": "Odd Even Linked List", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/odd-even-linked-list", "submissions": 624032, "accepted_subsmissions": 356577, "group": 2, "topics": ["Linked List"], "upvotes": "2902", "downvotes": "335"}, {"id": 327, "name": "Count of Range Sum", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/count-of-range-sum", "submissions": 135226, "accepted_subsmissions": 48781, "group": 2, "topics": ["Binary Search", "Divide and Conquer", "Sort", "Binary Indexed Tree", "Segment Tree"], "upvotes": "994", "downvotes": "116"}, {"id": 326, "name": "Power of Three", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/power-of-three", "submissions": 754167, "accepted_subsmissions": 317498, "group": 2, "topics": ["Math"], "upvotes": "696", "downvotes": "1722"}, {"id": 324, "name": "Wiggle Sort II", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/wiggle-sort-ii", "submissions": 312910, "accepted_subsmissions": 96203, "group": 2, "topics": ["Sort"], "upvotes": "1322", "downvotes": "648"}, {"id": 322, "name": "Coin Change", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/coin-change", "submissions": 1598606, "accepted_subsmissions": 600617, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "6406", "downvotes": "189"}, {"id": 321, "name": "Create Maximum Number", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/create-maximum-number", "submissions": 156477, "accepted_subsmissions": 43126, "group": 2, "topics": ["Dynamic Programming", "Greedy"], "upvotes": "909", "downvotes": "269"}, {"id": 319, "name": "Bulb Switcher", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/bulb-switcher", "submissions": 198589, "accepted_subsmissions": 90106, "group": 2, "topics": ["Math", "Brainteaser"], "upvotes": "598", "downvotes": "1197"}, {"id": 318, "name": "Maximum Product of Word Lengths", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/maximum-product-of-word-lengths", "submissions": 204109, "accepted_subsmissions": 106773, "group": 2, "topics": ["Bit Manipulation"], "upvotes": "988", "downvotes": "79"}, {"id": 316, "name": "Remove Duplicate Letters", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/remove-duplicate-letters", "submissions": 294284, "accepted_subsmissions": 115308, "group": 2, "topics": ["String", "Stack", "Greedy"], "upvotes": "2287", "downvotes": "172"}, {"id": 315, "name": "Count of Smaller Numbers After Self", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/count-of-smaller-numbers-after-self", "submissions": 383985, "accepted_subsmissions": 163003, "group": 2, "topics": ["Binary Search", "Divide and Conquer", "Sort", "Binary Indexed Tree", "Segment Tree"], "upvotes": "3251", "downvotes": "102"}, {"id": 313, "name": "Super Ugly Number", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/super-ugly-number", "submissions": 185534, "accepted_subsmissions": 85760, "group": 2, "topics": ["Math", "Heap"], "upvotes": "817", "downvotes": "165"}, {"id": 312, "name": "Burst Balloons", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/burst-balloons", "submissions": 242347, "accepted_subsmissions": 130387, "group": 2, "topics": ["Divide and Conquer", "Dynamic Programming"], "upvotes": "3429", "downvotes": "102"}, {"id": 310, "name": "Minimum Height Trees", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/minimum-height-trees", "submissions": 376316, "accepted_subsmissions": 130756, "group": 2, "topics": ["Breadth-first Search", "Graph"], "upvotes": "2947", "downvotes": "130"}, {"id": 309, "name": "Best Time to Buy and Sell Stock with Cooldown", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-cooldown", "submissions": 387008, "accepted_subsmissions": 186433, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "3477", "downvotes": "112"}, {"id": 307, "name": "Range Sum Query - Mutable", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/range-sum-query-mutable", "submissions": 356788, "accepted_subsmissions": 131250, "group": 2, "topics": ["Binary Indexed Tree", "Segment Tree"], "upvotes": "1733", "downvotes": "103"}, {"id": 306, "name": "Additive Number", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/additive-number", "submissions": 196135, "accepted_subsmissions": 58208, "group": 2, "topics": ["Backtracking"], "upvotes": "500", "downvotes": "495"}, {"id": 304, "name": "Range Sum Query 2D - Immutable", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/range-sum-query-2d-immutable", "submissions": 357627, "accepted_subsmissions": 145400, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "1413", "downvotes": "207"}, {"id": 303, "name": "Range Sum Query - Immutable", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/range-sum-query-immutable", "submissions": 512900, "accepted_subsmissions": 245356, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "1204", "downvotes": "1311"}, {"id": 301, "name": "Remove Invalid Parentheses", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/remove-invalid-parentheses", "submissions": 571680, "accepted_subsmissions": 255617, "group": 2, "topics": ["Depth-first Search", "Breadth-first Search"], "upvotes": "3217", "downvotes": "147"}, {"id": 300, "name": "Longest Increasing Subsequence", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/longest-increasing-subsequence", "submissions": 1152757, "accepted_subsmissions": 509405, "group": 2, "topics": ["Binary Search", "Dynamic Programming"], "upvotes": "6651", "downvotes": "153"}, {"id": 299, "name": "Bulls and Cows", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/bulls-and-cows", "submissions": 465045, "accepted_subsmissions": 207195, "group": 2, "topics": ["Hash Table"], "upvotes": "918", "downvotes": "1027"}, {"id": 297, "name": "Serialize and Deserialize Binary Tree", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/serialize-and-deserialize-binary-tree", "submissions": 843717, "accepted_subsmissions": 421340, "group": 2, "topics": ["Tree", "Design"], "upvotes": "4055", "downvotes": "190"}, {"id": 295, "name": "Find Median from Data Stream", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/find-median-from-data-stream", "submissions": 592217, "accepted_subsmissions": 278926, "group": 2, "topics": ["Heap", "Design"], "upvotes": "3868", "downvotes": "72"}, {"id": 292, "name": "Nim Game", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/nim-game", "submissions": 437790, "accepted_subsmissions": 241262, "group": 2, "topics": ["Brainteaser", "Minimax"], "upvotes": "754", "downvotes": "1835"}, {"id": 290, "name": "Word Pattern", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/word-pattern", "submissions": 646314, "accepted_subsmissions": 248154, "group": 2, "topics": ["Hash Table"], "upvotes": "1754", "downvotes": "211"}, {"id": 289, "name": "Game of Life", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/game-of-life", "submissions": 391746, "accepted_subsmissions": 228949, "group": 2, "topics": ["Array"], "upvotes": "2525", "downvotes": "325"}, {"id": 287, "name": "Find the Duplicate Number", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/find-the-duplicate-number", "submissions": 833575, "accepted_subsmissions": 480667, "group": 2, "topics": ["Array", "Two Pointers", "Binary Search"], "upvotes": "6975", "downvotes": "753"}, {"id": 284, "name": "Peeking Iterator", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/peeking-iterator", "submissions": 261510, "accepted_subsmissions": 132600, "group": 2, "topics": ["Design"], "upvotes": "756", "downvotes": "533"}, {"id": 283, "name": "Move Zeroes", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/move-zeroes", "submissions": 1824105, "accepted_subsmissions": 1068951, "group": 2, "topics": ["Array", "Two Pointers"], "upvotes": "5187", "downvotes": "163"}, {"id": 282, "name": "Expression Add Operators", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/expression-add-operators", "submissions": 345443, "accepted_subsmissions": 127157, "group": 2, "topics": ["Divide and Conquer"], "upvotes": "1599", "downvotes": "268"}, {"id": 279, "name": "Perfect Squares", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/perfect-squares", "submissions": 779331, "accepted_subsmissions": 382014, "group": 2, "topics": ["Math", "Dynamic Programming", "Breadth-first Search"], "upvotes": "4090", "downvotes": "231"}, {"id": 278, "name": "First Bad Version", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/first-bad-version", "submissions": 1437033, "accepted_subsmissions": 539864, "group": 2, "topics": ["Binary Search"], "upvotes": "2045", "downvotes": "809"}, {"id": 275, "name": "H-Index II", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/h-index-ii", "submissions": 383908, "accepted_subsmissions": 139349, "group": 2, "topics": ["Binary Search"], "upvotes": "535", "downvotes": "816"}, {"id": 274, "name": "H-Index", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/h-index", "submissions": 546002, "accepted_subsmissions": 198533, "group": 2, "topics": ["Hash Table", "Sort"], "upvotes": "880", "downvotes": "1445"}, {"id": 273, "name": "Integer to English Words", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/integer-to-english-words", "submissions": 798033, "accepted_subsmissions": 224746, "group": 2, "topics": ["Math", "String"], "upvotes": "1417", "downvotes": "3534"}, {"id": 268, "name": "Missing Number", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/missing-number", "submissions": 1151464, "accepted_subsmissions": 632747, "group": 2, "topics": ["Array", "Math", "Bit Manipulation"], "upvotes": "2801", "downvotes": "2477"}, {"id": 264, "name": "Ugly Number II", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/ugly-number-ii", "submissions": 468896, "accepted_subsmissions": 201223, "group": 2, "topics": ["Math", "Dynamic Programming", "Heap"], "upvotes": "2477", "downvotes": "155"}, {"id": 263, "name": "Ugly Number", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/ugly-number", "submissions": 559167, "accepted_subsmissions": 233239, "group": 2, "topics": ["Math"], "upvotes": "707", "downvotes": "759"}, {"id": 260, "name": "Single Number III", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/single-number-iii", "submissions": 284454, "accepted_subsmissions": 185971, "group": 2, "topics": ["Bit Manipulation"], "upvotes": "2171", "downvotes": "130"}, {"id": 258, "name": "Add Digits", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/add-digits", "submissions": 589062, "accepted_subsmissions": 344894, "group": 2, "topics": ["Math"], "upvotes": "1114", "downvotes": "1268"}, {"id": 257, "name": "Binary Tree Paths", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/binary-tree-paths", "submissions": 709123, "accepted_subsmissions": 380971, "group": 2, "topics": ["Tree", "Depth-first Search"], "upvotes": "2421", "downvotes": "127"}, {"id": 242, "name": "Valid Anagram", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/valid-anagram", "submissions": 1317943, "accepted_subsmissions": 773154, "group": 2, "topics": ["Hash Table", "Sort"], "upvotes": "2394", "downvotes": "160"}, {"id": 241, "name": "Different Ways to Add Parentheses", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/different-ways-to-add-parentheses", "submissions": 207391, "accepted_subsmissions": 118966, "group": 2, "topics": ["Divide and Conquer"], "upvotes": "2100", "downvotes": "113"}, {"id": 240, "name": "Search a 2D Matrix II", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/search-a-2d-matrix-ii", "submissions": 956028, "accepted_subsmissions": 431933, "group": 2, "topics": ["Binary Search", "Divide and Conquer"], "upvotes": "4482", "downvotes": "87"}, {"id": 239, "name": "Sliding Window Maximum", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/sliding-window-maximum", "submissions": 841091, "accepted_subsmissions": 375599, "group": 2, "topics": ["Heap", "Sliding Window", "Dequeue"], "upvotes": "5365", "downvotes": "222"}, {"id": 238, "name": "Product of Array Except Self", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/product-of-array-except-self", "submissions": 1177156, "accepted_subsmissions": 723484, "group": 2, "topics": ["Array"], "upvotes": "6939", "downvotes": "541"}, {"id": 237, "name": "Delete Node in a Linked List", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/delete-node-in-a-linked-list", "submissions": 861650, "accepted_subsmissions": 578052, "group": 2, "topics": ["Linked List"], "upvotes": "2418", "downvotes": "8729"}, {"id": 236, "name": "Lowest Common Ancestor of a Binary Tree", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree", "submissions": 1252003, "accepted_subsmissions": 612768, "group": 2, "topics": ["Tree"], "upvotes": "5318", "downvotes": "201"}, {"id": 235, "name": "Lowest Common Ancestor of a Binary Search Tree", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-search-tree", "submissions": 933542, "accepted_subsmissions": 484319, "group": 2, "topics": ["Tree"], "upvotes": "2910", "downvotes": "129"}, {"id": 234, "name": "Palindrome Linked List", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/palindrome-linked-list", "submissions": 1414608, "accepted_subsmissions": 575356, "group": 2, "topics": ["Linked List", "Two Pointers"], "upvotes": "4794", "downvotes": "429"}, {"id": 233, "name": "Number of Digit One", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/number-of-digit-one", "submissions": 164907, "accepted_subsmissions": 52449, "group": 2, "topics": ["Math"], "upvotes": "380", "downvotes": "723"}, {"id": 232, "name": "Implement Queue using Stacks", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/implement-queue-using-stacks", "submissions": 508872, "accepted_subsmissions": 266587, "group": 2, "topics": ["Stack", "Design"], "upvotes": "1610", "downvotes": "166"}, {"id": 231, "name": "Power of Two", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/power-of-two", "submissions": 919924, "accepted_subsmissions": 403088, "group": 2, "topics": ["Math", "Bit Manipulation"], "upvotes": "1255", "downvotes": "215"}, {"id": 230, "name": "Kth Smallest Element in a BST", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/kth-smallest-element-in-a-bst", "submissions": 814087, "accepted_subsmissions": 510594, "group": 2, "topics": ["Binary Search", "Tree"], "upvotes": "3603", "downvotes": "83"}, {"id": 229, "name": "Majority Element II", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/majority-element-ii", "submissions": 504648, "accepted_subsmissions": 196102, "group": 2, "topics": ["Array"], "upvotes": "2533", "downvotes": "220"}, {"id": 228, "name": "Summary Ranges", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/summary-ranges", "submissions": 488117, "accepted_subsmissions": 207471, "group": 2, "topics": ["Array"], "upvotes": "946", "downvotes": "685"}, {"id": 227, "name": "Basic Calculator II", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/basic-calculator-ii", "submissions": 661940, "accepted_subsmissions": 255587, "group": 2, "topics": ["String", "Stack"], "upvotes": "2208", "downvotes": "346"}, {"id": 226, "name": "Invert Binary Tree", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/invert-binary-tree", "submissions": 989782, "accepted_subsmissions": 664226, "group": 2, "topics": ["Tree"], "upvotes": "4899", "downvotes": "72"}, {"id": 225, "name": "Implement Stack using Queues", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/implement-stack-using-queues", "submissions": 447489, "accepted_subsmissions": 213006, "group": 2, "topics": ["Stack", "Design"], "upvotes": "981", "downvotes": "670"}, {"id": 224, "name": "Basic Calculator", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/basic-calculator", "submissions": 523362, "accepted_subsmissions": 199878, "group": 2, "topics": ["Math", "Stack"], "upvotes": "2066", "downvotes": "165"}, {"id": 223, "name": "Rectangle Area", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/rectangle-area", "submissions": 306345, "accepted_subsmissions": 117216, "group": 2, "topics": ["Math"], "upvotes": "518", "downvotes": "862"}, {"id": 222, "name": "Count Complete Tree Nodes", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/count-complete-tree-nodes", "submissions": 574506, "accepted_subsmissions": 283946, "group": 2, "topics": ["Binary Search", "Tree"], "upvotes": "2766", "downvotes": "251"}, {"id": 221, "name": "Maximal Square", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/maximal-square", "submissions": 867018, "accepted_subsmissions": 341069, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "4302", "downvotes": "105"}, {"id": 220, "name": "Contains Duplicate III", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/contains-duplicate-iii", "submissions": 781918, "accepted_subsmissions": 166856, "group": 2, "topics": ["Sort", "Ordered Map"], "upvotes": "1530", "downvotes": "1617"}, {"id": 219, "name": "Contains Duplicate II", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/contains-duplicate-ii", "submissions": 834241, "accepted_subsmissions": 322627, "group": 2, "topics": ["Array", "Hash Table"], "upvotes": "1249", "downvotes": "1355"}, {"id": 218, "name": "The Skyline Problem", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/the-skyline-problem", "submissions": 452417, "accepted_subsmissions": 164695, "group": 2, "topics": ["Divide and Conquer", "Heap", "Binary Indexed Tree", "Segment Tree", "Line Sweep"], "upvotes": "2749", "downvotes": "154"}, {"id": 217, "name": "Contains Duplicate", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/contains-duplicate", "submissions": 1335469, "accepted_subsmissions": 757181, "group": 2, "topics": ["Array", "Hash Table"], "upvotes": "1503", "downvotes": "840"}, {"id": 216, "name": "Combination Sum III", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/combination-sum-iii", "submissions": 364048, "accepted_subsmissions": 219883, "group": 2, "topics": ["Array", "Backtracking"], "upvotes": "1694", "downvotes": "63"}, {"id": 215, "name": "Kth Largest Element in an Array", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/kth-largest-element-in-an-array", "submissions": 1448458, "accepted_subsmissions": 848515, "group": 2, "topics": ["Divide and Conquer", "Heap"], "upvotes": "5278", "downvotes": "340"}, {"id": 214, "name": "Shortest Palindrome", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/shortest-palindrome", "submissions": 367760, "accepted_subsmissions": 113007, "group": 2, "topics": ["String"], "upvotes": "1554", "downvotes": "150"}, {"id": 213, "name": "House Robber II", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/house-robber-ii", "submissions": 618413, "accepted_subsmissions": 232329, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "2674", "downvotes": "63"}, {"id": 212, "name": "Word Search II", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/word-search-ii", "submissions": 763923, "accepted_subsmissions": 284436, "group": 2, "topics": ["Backtracking", "Trie"], "upvotes": "3512", "downvotes": "142"}, {"id": 211, "name": "Design Add and Search Words Data Structure", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/design-add-and-search-words-data-structure", "submissions": 672932, "accepted_subsmissions": 271315, "group": 2, "topics": ["Backtracking", "Depth-first Search", "Design", "Trie"], "upvotes": "2813", "downvotes": "121"}, {"id": 210, "name": "Course Schedule II", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/course-schedule-ii", "submissions": 874511, "accepted_subsmissions": 373683, "group": 2, "topics": ["Depth-first Search", "Breadth-first Search", "Graph", "Topological Sort"], "upvotes": "3434", "downvotes": "162"}, {"id": 209, "name": "Minimum Size Subarray Sum", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/minimum-size-subarray-sum", "submissions": 860298, "accepted_subsmissions": 340536, "group": 2, "topics": ["Array", "Two Pointers", "Binary Search"], "upvotes": "3481", "downvotes": "138"}, {"id": 208, "name": "Implement Trie (Prefix Tree)", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/implement-trie-prefix-tree", "submissions": 760863, "accepted_subsmissions": 397500, "group": 2, "topics": ["Design", "Trie"], "upvotes": "4295", "downvotes": "68"}, {"id": 207, "name": "Course Schedule", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/course-schedule", "submissions": 1249559, "accepted_subsmissions": 553614, "group": 2, "topics": ["Depth-first Search", "Breadth-first Search", "Graph", "Topological Sort"], "upvotes": "5427", "downvotes": "224"}, {"id": 206, "name": "Reverse Linked List", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/reverse-linked-list", "submissions": 2016859, "accepted_subsmissions": 1319342, "group": 2, "topics": ["Linked List"], "upvotes": "6523", "downvotes": "124"}, {"id": 205, "name": "Isomorphic Strings", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/isomorphic-strings", "submissions": 860043, "accepted_subsmissions": 348512, "group": 2, "topics": ["Hash Table"], "upvotes": "1906", "downvotes": "456"}, {"id": 204, "name": "Count Primes", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/count-primes", "submissions": 1384004, "accepted_subsmissions": 446720, "group": 2, "topics": ["Hash Table", "Math"], "upvotes": "2798", "downvotes": "741"}, {"id": 203, "name": "Remove Linked List Elements", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/remove-linked-list-elements", "submissions": 1131014, "accepted_subsmissions": 444015, "group": 2, "topics": ["Linked List"], "upvotes": "2509", "downvotes": "122"}, {"id": 202, "name": "Happy Number", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/happy-number", "submissions": 1182599, "accepted_subsmissions": 606702, "group": 2, "topics": ["Hash Table", "Math"], "upvotes": "2980", "downvotes": "493"}, {"id": 201, "name": "Bitwise AND of Numbers Range", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/bitwise-and-of-numbers-range", "submissions": 424601, "accepted_subsmissions": 168333, "group": 2, "topics": ["Bit Manipulation"], "upvotes": "1315", "downvotes": "142"}, {"id": 200, "name": "Number of Islands", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/number-of-islands", "submissions": 2002041, "accepted_subsmissions": 986205, "group": 2, "topics": ["Depth-first Search", "Breadth-first Search", "Union Find"], "upvotes": "7892", "downvotes": "240"}, {"id": 199, "name": "Binary Tree Right Side View", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/binary-tree-right-side-view", "submissions": 742944, "accepted_subsmissions": 418941, "group": 2, "topics": ["Tree", "Depth-first Search", "Breadth-first Search", "Recursion", "Queue"], "upvotes": "3607", "downvotes": "193"}, {"id": 198, "name": "House Robber", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/house-robber", "submissions": 1598289, "accepted_subsmissions": 686096, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "6648", "downvotes": "187"}, {"id": 191, "name": "Number of 1 Bits", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/number-of-1-bits", "submissions": 878781, "accepted_subsmissions": 474086, "group": 2, "topics": ["Bit Manipulation"], "upvotes": "1393", "downvotes": "623"}, {"id": 190, "name": "Reverse Bits", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/reverse-bits", "submissions": 778492, "accepted_subsmissions": 329273, "group": 2, "topics": ["Bit Manipulation"], "upvotes": "1615", "downvotes": "525"}, {"id": 189, "name": "Rotate Array", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/rotate-array", "submissions": 1785220, "accepted_subsmissions": 654616, "group": 2, "topics": ["Array"], "upvotes": "4250", "downvotes": "913"}, {"id": 188, "name": "Best Time to Buy and Sell Stock IV", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iv", "submissions": 585189, "accepted_subsmissions": 174396, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "2291", "downvotes": "134"}, {"id": 187, "name": "Repeated DNA Sequences", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/repeated-dna-sequences", "submissions": 491344, "accepted_subsmissions": 204034, "group": 2, "topics": ["Hash Table", "Bit Manipulation"], "upvotes": "1142", "downvotes": "332"}, {"id": 179, "name": "Largest Number", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/largest-number", "submissions": 782230, "accepted_subsmissions": 240356, "group": 2, "topics": ["Sort"], "upvotes": "2856", "downvotes": "305"}, {"id": 174, "name": "Dungeon Game", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/dungeon-game", "submissions": 368531, "accepted_subsmissions": 122856, "group": 2, "topics": ["Binary Search", "Dynamic Programming"], "upvotes": "2217", "downvotes": "47"}, {"id": 173, "name": "Binary Search Tree Iterator", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/binary-search-tree-iterator", "submissions": 650817, "accepted_subsmissions": 392422, "group": 2, "topics": ["Stack", "Tree", "Design"], "upvotes": "3499", "downvotes": "312"}, {"id": 172, "name": "Factorial Trailing Zeroes", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/factorial-trailing-zeroes", "submissions": 644632, "accepted_subsmissions": 249105, "group": 2, "topics": ["Math"], "upvotes": "1211", "downvotes": "1361"}, {"id": 171, "name": "Excel Sheet Column Number", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/excel-sheet-column-number", "submissions": 642818, "accepted_subsmissions": 366244, "group": 2, "topics": ["Math"], "upvotes": "1585", "downvotes": "193"}, {"id": 169, "name": "Majority Element", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/majority-element", "submissions": 1336677, "accepted_subsmissions": 803514, "group": 2, "topics": ["Array", "Divide and Conquer", "Bit Manipulation"], "upvotes": "4700", "downvotes": "254"}, {"id": 168, "name": "Excel Sheet Column Title", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/excel-sheet-column-title", "submissions": 779428, "accepted_subsmissions": 247815, "group": 2, "topics": ["Math"], "upvotes": "1603", "downvotes": "294"}, {"id": 167, "name": "Two Sum II - Input array is sorted", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/two-sum-ii-input-array-is-sorted", "submissions": 963690, "accepted_subsmissions": 536896, "group": 2, "topics": ["Array", "Two Pointers", "Binary Search"], "upvotes": "2440", "downvotes": "697"}, {"id": 166, "name": "Fraction to Recurring Decimal", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/fraction-to-recurring-decimal", "submissions": 656545, "accepted_subsmissions": 146620, "group": 2, "topics": ["Hash Table", "Math"], "upvotes": "1090", "downvotes": "2202"}, {"id": 165, "name": "Compare Version Numbers", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/compare-version-numbers", "submissions": 776619, "accepted_subsmissions": 236786, "group": 2, "topics": ["String"], "upvotes": "792", "downvotes": "1674"}, {"id": 164, "name": "Maximum Gap", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/maximum-gap", "submissions": 270511, "accepted_subsmissions": 99911, "group": 2, "topics": ["Sort"], "upvotes": "1102", "downvotes": "207"}, {"id": 162, "name": "Find Peak Element", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/find-peak-element", "submissions": 1060854, "accepted_subsmissions": 466828, "group": 2, "topics": ["Array", "Binary Search"], "upvotes": "2626", "downvotes": "2567"}, {"id": 160, "name": "Intersection of Two Linked Lists", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/intersection-of-two-linked-lists", "submissions": 1432250, "accepted_subsmissions": 632313, "group": 2, "topics": ["Linked List"], "upvotes": "5268", "downvotes": "593"}, {"id": 155, "name": "Min Stack", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/min-stack", "submissions": 1481859, "accepted_subsmissions": 689783, "group": 2, "topics": ["Stack", "Design"], "upvotes": "4723", "downvotes": "437"}, {"id": 154, "name": "Find Minimum in Rotated Sorted Array II", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/find-minimum-in-rotated-sorted-array-ii", "submissions": 565607, "accepted_subsmissions": 237842, "group": 2, "topics": ["Array", "Binary Search"], "upvotes": "1460", "downvotes": "271"}, {"id": 153, "name": "Find Minimum in Rotated Sorted Array", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/find-minimum-in-rotated-sorted-array", "submissions": 1220827, "accepted_subsmissions": 564241, "group": 2, "topics": ["Array", "Binary Search"], "upvotes": "3223", "downvotes": "293"}, {"id": 152, "name": "Maximum Product Subarray", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/maximum-product-subarray", "submissions": 1385586, "accepted_subsmissions": 454402, "group": 2, "topics": ["Array", "Dynamic Programming"], "upvotes": "6393", "downvotes": "209"}, {"id": 151, "name": "Reverse Words in a String", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/reverse-words-in-a-string", "submissions": 2124209, "accepted_subsmissions": 507018, "group": 2, "topics": ["String"], "upvotes": "1551", "downvotes": "3176"}, {"id": 150, "name": "Evaluate Reverse Polish Notation", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/evaluate-reverse-polish-notation", "submissions": 717236, "accepted_subsmissions": 272665, "group": 2, "topics": ["Stack"], "upvotes": "1474", "downvotes": "516"}, {"id": 149, "name": "Max Points on a Line", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/max-points-on-a-line", "submissions": 995304, "accepted_subsmissions": 173891, "group": 2, "topics": ["Hash Table", "Math"], "upvotes": "35", "downvotes": "16"}, {"id": 148, "name": "Sort List", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/sort-list", "submissions": 736912, "accepted_subsmissions": 341996, "group": 2, "topics": ["Linked List", "Sort"], "upvotes": "3962", "downvotes": "169"}, {"id": 147, "name": "Insertion Sort List", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/insertion-sort-list", "submissions": 509200, "accepted_subsmissions": 226464, "group": 2, "topics": ["Linked List", "Sort"], "upvotes": "973", "downvotes": "676"}, {"id": 146, "name": "LRU Cache", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/lru-cache", "submissions": 2005813, "accepted_subsmissions": 721241, "group": 2, "topics": ["Design"], "upvotes": "7983", "downvotes": "328"}, {"id": 145, "name": "Binary Tree Postorder Traversal", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/binary-tree-postorder-traversal", "submissions": 805488, "accepted_subsmissions": 465150, "group": 2, "topics": ["Stack", "Tree"], "upvotes": "2438", "downvotes": "112"}, {"id": 144, "name": "Binary Tree Preorder Traversal", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/binary-tree-preorder-traversal", "submissions": 1055023, "accepted_subsmissions": 607745, "group": 2, "topics": ["Stack", "Tree"], "upvotes": "2119", "downvotes": "86"}, {"id": 143, "name": "Reorder List", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/reorder-list", "submissions": 761966, "accepted_subsmissions": 310554, "group": 2, "topics": ["Linked List"], "upvotes": "2945", "downvotes": "143"}, {"id": 142, "name": "Linked List Cycle II", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/linked-list-cycle-ii", "submissions": 1072787, "accepted_subsmissions": 426926, "group": 2, "topics": ["Linked List", "Two Pointers"], "upvotes": "3885", "downvotes": "291"}, {"id": 141, "name": "Linked List Cycle", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/linked-list-cycle", "submissions": 2005418, "accepted_subsmissions": 861575, "group": 2, "topics": ["Linked List", "Two Pointers"], "upvotes": "4220", "downvotes": "593"}, {"id": 140, "name": "Word Break II", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/word-break-ii", "submissions": 885235, "accepted_subsmissions": 308763, "group": 2, "topics": ["Dynamic Programming", "Backtracking"], "upvotes": "2965", "downvotes": "445"}, {"id": 139, "name": "Word Break", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/word-break", "submissions": 1732294, "accepted_subsmissions": 723427, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "6187", "downvotes": "290"}, {"id": 138, "name": "Copy List with Random Pointer", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/copy-list-with-random-pointer", "submissions": 1320170, "accepted_subsmissions": 542081, "group": 2, "topics": ["Hash Table", "Linked List"], "upvotes": "4849", "downvotes": "803"}, {"id": 137, "name": "Single Number II", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/single-number-ii", "submissions": 517628, "accepted_subsmissions": 279074, "group": 2, "topics": ["Bit Manipulation"], "upvotes": "2421", "downvotes": "399"}, {"id": 136, "name": "Single Number", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/single-number", "submissions": 1666592, "accepted_subsmissions": 1109783, "group": 2, "topics": ["Hash Table", "Bit Manipulation"], "upvotes": "5867", "downvotes": "192"}, {"id": 135, "name": "Candy", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/candy", "submissions": 457857, "accepted_subsmissions": 151797, "group": 2, "topics": ["Greedy"], "upvotes": "1365", "downvotes": "189"}, {"id": 134, "name": "Gas Station", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/gas-station", "submissions": 665170, "accepted_subsmissions": 275059, "group": 2, "topics": ["Greedy"], "upvotes": "2801", "downvotes": "425"}, {"id": 133, "name": "Clone Graph", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/clone-graph", "submissions": 1134252, "accepted_subsmissions": 447136, "group": 2, "topics": ["Depth-first Search", "Breadth-first Search", "Graph"], "upvotes": "2807", "downvotes": "1644"}, {"id": 132, "name": "Palindrome Partitioning II", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/palindrome-partitioning-ii", "submissions": 483893, "accepted_subsmissions": 151539, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "1715", "downvotes": "52"}, {"id": 131, "name": "Palindrome Partitioning", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/palindrome-partitioning", "submissions": 574697, "accepted_subsmissions": 300240, "group": 2, "topics": ["Dynamic Programming", "Backtracking", "Depth-first Search"], "upvotes": "3127", "downvotes": "99"}, {"id": 130, "name": "Surrounded Regions", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/surrounded-regions", "submissions": 974123, "accepted_subsmissions": 287652, "group": 2, "topics": ["Depth-first Search", "Breadth-first Search", "Union Find"], "upvotes": "2569", "downvotes": "756"}, {"id": 129, "name": "Sum Root to Leaf Numbers", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/sum-root-to-leaf-numbers", "submissions": 627323, "accepted_subsmissions": 320273, "group": 2, "topics": ["Tree", "Depth-first Search"], "upvotes": "2126", "downvotes": "55"}, {"id": 128, "name": "Longest Consecutive Sequence", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/longest-consecutive-sequence", "submissions": 821766, "accepted_subsmissions": 380722, "group": 2, "topics": ["Array", "Union Find"], "upvotes": "4765", "downvotes": "234"}, {"id": 127, "name": "Word Ladder", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/word-ladder", "submissions": 1737207, "accepted_subsmissions": 554642, "group": 2, "topics": ["Breadth-first Search"], "upvotes": "4763", "downvotes": "1401"}, {"id": 126, "name": "Word Ladder II", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/word-ladder-ii", "submissions": 926895, "accepted_subsmissions": 220679, "group": 2, "topics": ["Array", "String", "Backtracking", "Breadth-first Search"], "upvotes": "2341", "downvotes": "282"}, {"id": 125, "name": "Valid Palindrome", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/valid-palindrome", "submissions": 2116281, "accepted_subsmissions": 811139, "group": 2, "topics": ["Two Pointers", "String"], "upvotes": "1811", "downvotes": "3649"}, {"id": 124, "name": "Binary Tree Maximum Path Sum", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/binary-tree-maximum-path-sum", "submissions": 1349505, "accepted_subsmissions": 479363, "group": 2, "topics": ["Tree", "Depth-first Search", "Recursion"], "upvotes": "5296", "downvotes": "384"}, {"id": 123, "name": "Best Time to Buy and Sell Stock III", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iii", "submissions": 698630, "accepted_subsmissions": 279426, "group": 2, "topics": ["Array", "Dynamic Programming"], "upvotes": "3319", "downvotes": "86"}, {"id": 122, "name": "Best Time to Buy and Sell Stock II", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii", "submissions": 1340553, "accepted_subsmissions": 785765, "group": 2, "topics": ["Array", "Greedy"], "upvotes": "3806", "downvotes": "1933"}, {"id": 121, "name": "Best Time to Buy and Sell Stock", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock", "submissions": 2367521, "accepted_subsmissions": 1223271, "group": 2, "topics": ["Array", "Dynamic Programming"], "upvotes": "7859", "downvotes": "348"}, {"id": 120, "name": "Triangle", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/triangle", "submissions": 629335, "accepted_subsmissions": 288797, "group": 2, "topics": ["Array", "Dynamic Programming"], "upvotes": "2706", "downvotes": "299"}, {"id": 119, "name": "Pascal's Triangle II", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/pascals-triangle-ii", "submissions": 687864, "accepted_subsmissions": 359841, "group": 2, "topics": ["Array"], "upvotes": "1270", "downvotes": "222"}, {"id": 118, "name": "Pascal's Triangle", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/pascals-triangle", "submissions": 850985, "accepted_subsmissions": 468616, "group": 2, "topics": ["Array"], "upvotes": "2290", "downvotes": "130"}, {"id": 117, "name": "Populating Next Right Pointers in Each Node II", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/populating-next-right-pointers-in-each-node-ii", "submissions": 763511, "accepted_subsmissions": 322132, "group": 2, "topics": ["Tree", "Depth-first Search"], "upvotes": "2306", "downvotes": "197"}, {"id": 116, "name": "Populating Next Right Pointers in Each Node", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/populating-next-right-pointers-in-each-node", "submissions": 949717, "accepted_subsmissions": 467999, "group": 2, "topics": ["Tree", "Depth-first Search", "Breadth-first Search"], "upvotes": "3166", "downvotes": "161"}, {"id": 115, "name": "Distinct Subsequences", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/distinct-subsequences", "submissions": 398444, "accepted_subsmissions": 158627, "group": 2, "topics": ["String", "Dynamic Programming"], "upvotes": "1808", "downvotes": "63"}, {"id": 114, "name": "Flatten Binary Tree to Linked List", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/flatten-binary-tree-to-linked-list", "submissions": 810616, "accepted_subsmissions": 422354, "group": 2, "topics": ["Tree", "Depth-first Search"], "upvotes": "3967", "downvotes": "392"}, {"id": 113, "name": "Path Sum II", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/path-sum-ii", "submissions": 810769, "accepted_subsmissions": 399216, "group": 2, "topics": ["Tree", "Depth-first Search"], "upvotes": "2592", "downvotes": "85"}, {"id": 112, "name": "Path Sum", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/path-sum", "submissions": 1385369, "accepted_subsmissions": 588777, "group": 2, "topics": ["Tree", "Depth-first Search"], "upvotes": "2909", "downvotes": "591"}, {"id": 111, "name": "Minimum Depth of Binary Tree", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/minimum-depth-of-binary-tree", "submissions": 1343051, "accepted_subsmissions": 532176, "group": 2, "topics": ["Tree", "Depth-first Search", "Breadth-first Search"], "upvotes": "2215", "downvotes": "801"}, {"id": 110, "name": "Balanced Binary Tree", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/balanced-binary-tree", "submissions": 1225849, "accepted_subsmissions": 548513, "group": 2, "topics": ["Tree", "Depth-first Search", "Recursion"], "upvotes": "3287", "downvotes": "217"}, {"id": 109, "name": "Convert Sorted List to Binary Search Tree", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/convert-sorted-list-to-binary-search-tree", "submissions": 564698, "accepted_subsmissions": 284395, "group": 2, "topics": ["Linked List", "Depth-first Search"], "upvotes": "2737", "downvotes": "94"}, {"id": 108, "name": "Convert Sorted Array to Binary Search Tree", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/convert-sorted-array-to-binary-search-tree", "submissions": 838654, "accepted_subsmissions": 508111, "group": 2, "topics": ["Tree", "Depth-first Search"], "upvotes": "3572", "downvotes": "266"}, {"id": 107, "name": "Binary Tree Level Order Traversal II", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/binary-tree-level-order-traversal-ii", "submissions": 743112, "accepted_subsmissions": 410950, "group": 2, "topics": ["Tree", "Breadth-first Search"], "upvotes": "2054", "downvotes": "239"}, {"id": 106, "name": "Construct Binary Tree from Inorder and Postorder Traversal", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/construct-binary-tree-from-inorder-and-postorder-traversal", "submissions": 573003, "accepted_subsmissions": 285515, "group": 2, "topics": ["Array", "Tree", "Depth-first Search"], "upvotes": "2496", "downvotes": "49"}, {"id": 105, "name": "Construct Binary Tree from Preorder and Inorder Traversal", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/construct-binary-tree-from-preorder-and-inorder-traversal", "submissions": 901020, "accepted_subsmissions": 468687, "group": 2, "topics": ["Array", "Tree", "Depth-first Search"], "upvotes": "4852", "downvotes": "124"}, {"id": 104, "name": "Maximum Depth of Binary Tree", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/maximum-depth-of-binary-tree", "submissions": 1585304, "accepted_subsmissions": 1080334, "group": 2, "topics": ["Tree", "Depth-first Search", "Recursion"], "upvotes": "3672", "downvotes": "94"}, {"id": 103, "name": "Binary Tree Zigzag Level Order Traversal", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/binary-tree-zigzag-level-order-traversal", "submissions": 966008, "accepted_subsmissions": 485189, "group": 2, "topics": ["Stack", "Tree", "Breadth-first Search"], "upvotes": "3196", "downvotes": "125"}, {"id": 102, "name": "Binary Tree Level Order Traversal", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/binary-tree-level-order-traversal", "submissions": 1394342, "accepted_subsmissions": 791266, "group": 2, "topics": ["Tree", "Breadth-first Search"], "upvotes": "4356", "downvotes": "103"}, {"id": 101, "name": "Symmetric Tree", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/symmetric-tree", "submissions": 1747415, "accepted_subsmissions": 842806, "group": 2, "topics": ["Tree", "Depth-first Search", "Breadth-first Search"], "upvotes": "5759", "downvotes": "155"}, {"id": 100, "name": "Same Tree", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/same-tree", "submissions": 1275597, "accepted_subsmissions": 690901, "group": 2, "topics": ["Tree", "Depth-first Search"], "upvotes": "3031", "downvotes": "84"}, {"id": 99, "name": "Recover Binary Search Tree", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/recover-binary-search-tree", "submissions": 479584, "accepted_subsmissions": 204077, "group": 2, "topics": ["Tree", "Depth-first Search"], "upvotes": "2311", "downvotes": "88"}, {"id": 98, "name": "Validate Binary Search Tree", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/validate-binary-search-tree", "submissions": 3221798, "accepted_subsmissions": 928475, "group": 2, "topics": ["Tree", "Depth-first Search", "Recursion"], "upvotes": "5639", "downvotes": "664"}, {"id": 97, "name": "Interleaving String", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/interleaving-string", "submissions": 540089, "accepted_subsmissions": 176240, "group": 2, "topics": ["String", "Dynamic Programming"], "upvotes": "1893", "downvotes": "105"}, {"id": 96, "name": "Unique Binary Search Trees", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/unique-binary-search-trees", "submissions": 646559, "accepted_subsmissions": 352487, "group": 2, "topics": ["Dynamic Programming", "Tree"], "upvotes": "4408", "downvotes": "162"}, {"id": 95, "name": "Unique Binary Search Trees II", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/unique-binary-search-trees-ii", "submissions": 522296, "accepted_subsmissions": 223126, "group": 2, "topics": ["Dynamic Programming", "Tree"], "upvotes": "2906", "downvotes": "203"}, {"id": 94, "name": "Binary Tree Inorder Traversal", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/binary-tree-inorder-traversal", "submissions": 1411400, "accepted_subsmissions": 931628, "group": 2, "topics": ["Hash Table", "Stack", "Tree"], "upvotes": "4392", "downvotes": "193"}, {"id": 93, "name": "Restore IP Addresses", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/restore-ip-addresses", "submissions": 605551, "accepted_subsmissions": 228117, "group": 2, "topics": ["String", "Backtracking"], "upvotes": "1685", "downvotes": "553"}, {"id": 92, "name": "Reverse Linked List II", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/reverse-linked-list-ii", "submissions": 824290, "accepted_subsmissions": 335224, "group": 2, "topics": ["Linked List"], "upvotes": "3414", "downvotes": "176"}, {"id": 91, "name": "Decode Ways", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/decode-ways", "submissions": 2014015, "accepted_subsmissions": 537306, "group": 2, "topics": ["String", "Dynamic Programming"], "upvotes": "4076", "downvotes": "3402"}, {"id": 90, "name": "Subsets II", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/subsets-ii", "submissions": 674479, "accepted_subsmissions": 330173, "group": 2, "topics": ["Array", "Backtracking"], "upvotes": "2328", "downvotes": "102"}, {"id": 89, "name": "Gray Code", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/gray-code", "submissions": 351067, "accepted_subsmissions": 177282, "group": 2, "topics": ["Backtracking"], "upvotes": "794", "downvotes": "1763"}, {"id": 88, "name": "Merge Sorted Array", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/merge-sorted-array", "submissions": 2015375, "accepted_subsmissions": 821605, "group": 2, "topics": ["Array", "Two Pointers"], "upvotes": "3502", "downvotes": "5094"}, {"id": 87, "name": "Scramble String", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/scramble-string", "submissions": 350925, "accepted_subsmissions": 121937, "group": 2, "topics": ["String", "Dynamic Programming"], "upvotes": "745", "downvotes": "792"}, {"id": 86, "name": "Partition List", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/partition-list", "submissions": 578810, "accepted_subsmissions": 251924, "group": 2, "topics": ["Linked List", "Two Pointers"], "upvotes": "1905", "downvotes": "376"}, {"id": 85, "name": "Maximal Rectangle", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/maximal-rectangle", "submissions": 554610, "accepted_subsmissions": 219385, "group": 2, "topics": ["Array", "Hash Table", "Dynamic Programming", "Stack"], "upvotes": "3977", "downvotes": "86"}, {"id": 84, "name": "Largest Rectangle in Histogram", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/largest-rectangle-in-histogram", "submissions": 924619, "accepted_subsmissions": 344147, "group": 2, "topics": ["Array", "Stack"], "upvotes": "5433", "downvotes": "109"}, {"id": 83, "name": "Remove Duplicates from Sorted List", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/remove-duplicates-from-sorted-list", "submissions": 1216851, "accepted_subsmissions": 566884, "group": 2, "topics": ["Linked List"], "upvotes": "2343", "downvotes": "143"}, {"id": 82, "name": "Remove Duplicates from Sorted List II", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/remove-duplicates-from-sorted-list-ii", "submissions": 811222, "accepted_subsmissions": 319115, "group": 2, "topics": ["Linked List"], "upvotes": "2734", "downvotes": "122"}, {"id": 81, "name": "Search in Rotated Sorted Array II", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/search-in-rotated-sorted-array-ii", "submissions": 878922, "accepted_subsmissions": 295293, "group": 2, "topics": ["Array", "Binary Search"], "upvotes": "1985", "downvotes": "572"}, {"id": 80, "name": "Remove Duplicates from Sorted Array II", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/remove-duplicates-from-sorted-array-ii", "submissions": 691641, "accepted_subsmissions": 319532, "group": 2, "topics": ["Array", "Two Pointers"], "upvotes": "1759", "downvotes": "776"}, {"id": 79, "name": "Word Search", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/word-search", "submissions": 1690423, "accepted_subsmissions": 624470, "group": 2, "topics": ["Array", "Backtracking"], "upvotes": "5329", "downvotes": "235"}, {"id": 78, "name": "Subsets", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/subsets", "submissions": 1122534, "accepted_subsmissions": 732856, "group": 2, "topics": ["Array", "Backtracking", "Bit Manipulation"], "upvotes": "5388", "downvotes": "109"}, {"id": 77, "name": "Combinations", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/combinations", "submissions": 607790, "accepted_subsmissions": 350305, "group": 2, "topics": ["Backtracking"], "upvotes": "2085", "downvotes": "80"}, {"id": 76, "name": "Minimum Window Substring", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/minimum-window-substring", "submissions": 1407448, "accepted_subsmissions": 507370, "group": 2, "topics": ["Hash Table", "Two Pointers", "String", "Sliding Window"], "upvotes": "6201", "downvotes": "420"}, {"id": 75, "name": "Sort Colors", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/sort-colors", "submissions": 1297767, "accepted_subsmissions": 642897, "group": 2, "topics": ["Array", "Two Pointers", "Sort"], "upvotes": "4992", "downvotes": "284"}, {"id": 74, "name": "Search a 2D Matrix", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/search-a-2d-matrix", "submissions": 1128253, "accepted_subsmissions": 427601, "group": 2, "topics": ["Array", "Binary Search"], "upvotes": "3020", "downvotes": "194"}, {"id": 73, "name": "Set Matrix Zeroes", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/set-matrix-zeroes", "submissions": 913122, "accepted_subsmissions": 405458, "group": 2, "topics": ["Array"], "upvotes": "3192", "downvotes": "358"}, {"id": 72, "name": "Edit Distance", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/edit-distance", "submissions": 727110, "accepted_subsmissions": 340810, "group": 2, "topics": ["String", "Dynamic Programming"], "upvotes": "5301", "downvotes": "66"}, {"id": 71, "name": "Simplify Path", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/simplify-path", "submissions": 772124, "accepted_subsmissions": 268389, "group": 2, "topics": ["String", "Stack"], "upvotes": "273", "downvotes": "87"}, {"id": 70, "name": "Climbing Stairs", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/climbing-stairs", "submissions": 1864733, "accepted_subsmissions": 907626, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "6100", "downvotes": "192"}, {"id": 69, "name": "Sqrt(x)", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/sqrtx", "submissions": 1959436, "accepted_subsmissions": 688777, "group": 2, "topics": ["Math", "Binary Search"], "upvotes": "1861", "downvotes": "2260"}, {"id": 68, "name": "Text Justification", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/text-justification", "submissions": 547007, "accepted_subsmissions": 163320, "group": 2, "topics": ["String"], "upvotes": "956", "downvotes": "1904"}, {"id": 67, "name": "Add Binary", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/add-binary", "submissions": 1222917, "accepted_subsmissions": 575588, "group": 2, "topics": ["Math", "String"], "upvotes": "2586", "downvotes": "335"}, {"id": 66, "name": "Plus One", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/plus-one", "submissions": 1879565, "accepted_subsmissions": 795211, "group": 2, "topics": ["Array"], "upvotes": "2178", "downvotes": "3061"}, {"id": 65, "name": "Valid Number", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/valid-number", "submissions": 1232601, "accepted_subsmissions": 196394, "group": 2, "topics": ["Math", "String"], "upvotes": "884", "downvotes": "5523"}, {"id": 64, "name": "Minimum Path Sum", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/minimum-path-sum", "submissions": 917019, "accepted_subsmissions": 516204, "group": 2, "topics": ["Array", "Dynamic Programming"], "upvotes": "4401", "downvotes": "80"}, {"id": 63, "name": "Unique Paths II", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/unique-paths-ii", "submissions": 1007420, "accepted_subsmissions": 355593, "group": 2, "topics": ["Array", "Dynamic Programming"], "upvotes": "2540", "downvotes": "288"}, {"id": 62, "name": "Unique Paths", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/unique-paths", "submissions": 1085353, "accepted_subsmissions": 609103, "group": 2, "topics": ["Array", "Dynamic Programming"], "upvotes": "4713", "downvotes": "239"}, {"id": 61, "name": "Rotate List", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/rotate-list", "submissions": 1134213, "accepted_subsmissions": 360844, "group": 2, "topics": ["Linked List", "Two Pointers"], "upvotes": "2156", "downvotes": "1135"}, {"id": 60, "name": "Permutation Sequence", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/permutation-sequence", "submissions": 560981, "accepted_subsmissions": 221235, "group": 2, "topics": ["Math", "Backtracking"], "upvotes": "2106", "downvotes": "361"}, {"id": 59, "name": "Spiral Matrix II", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/spiral-matrix-ii", "submissions": 422151, "accepted_subsmissions": 244658, "group": 2, "topics": ["Array"], "upvotes": "1571", "downvotes": "127"}, {"id": 58, "name": "Length of Last Word", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/length-of-last-word", "submissions": 1438236, "accepted_subsmissions": 481700, "group": 2, "topics": ["String"], "upvotes": "1003", "downvotes": "3046"}, {"id": 57, "name": "Insert Interval", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/insert-interval", "submissions": 951131, "accepted_subsmissions": 334461, "group": 2, "topics": ["Array", "Sort"], "upvotes": "2663", "downvotes": "236"}, {"id": 56, "name": "Merge Intervals", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/merge-intervals", "submissions": 2022725, "accepted_subsmissions": 832584, "group": 2, "topics": ["Array", "Sort"], "upvotes": "6714", "downvotes": "366"}, {"id": 55, "name": "Jump Game", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/jump-game", "submissions": 1700942, "accepted_subsmissions": 598431, "group": 2, "topics": ["Array", "Greedy"], "upvotes": "5875", "downvotes": "410"}, {"id": 54, "name": "Spiral Matrix", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/spiral-matrix", "submissions": 1307151, "accepted_subsmissions": 472896, "group": 2, "topics": ["Array"], "upvotes": "3573", "downvotes": "643"}, {"id": 53, "name": "Maximum Subarray", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/maximum-subarray", "submissions": 2809129, "accepted_subsmissions": 1342393, "group": 2, "topics": ["Array", "Divide and Conquer", "Dynamic Programming"], "upvotes": "11140", "downvotes": "532"}, {"id": 52, "name": "N-Queens II", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/n-queens-ii", "submissions": 259770, "accepted_subsmissions": 156594, "group": 2, "topics": ["Backtracking"], "upvotes": "765", "downvotes": "179"}, {"id": 51, "name": "N-Queens", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/n-queens", "submissions": 489731, "accepted_subsmissions": 243907, "group": 2, "topics": ["Backtracking"], "upvotes": "2725", "downvotes": "98"}, {"id": 50, "name": "Pow(x, n)", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/powx-n", "submissions": 1954549, "accepted_subsmissions": 605337, "group": 2, "topics": ["Math", "Binary Search"], "upvotes": "2192", "downvotes": "3655"}, {"id": 49, "name": "Group Anagrams", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/group-anagrams", "submissions": 1468425, "accepted_subsmissions": 872728, "group": 2, "topics": ["Hash Table", "String"], "upvotes": "5043", "downvotes": "226"}, {"id": 48, "name": "Rotate Image", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/rotate-image", "submissions": 897605, "accepted_subsmissions": 539793, "group": 2, "topics": ["Array"], "upvotes": "4474", "downvotes": "326"}, {"id": 47, "name": "Permutations II", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/permutations-ii", "submissions": 885485, "accepted_subsmissions": 438667, "group": 2, "topics": ["Backtracking"], "upvotes": "2808", "downvotes": "78"}, {"id": 46, "name": "Permutations", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/permutations", "submissions": 1159521, "accepted_subsmissions": 774115, "group": 2, "topics": ["Backtracking"], "upvotes": "5587", "downvotes": "128"}, {"id": 45, "name": "Jump Game II", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/jump-game-ii", "submissions": 1015822, "accepted_subsmissions": 319666, "group": 2, "topics": ["Array", "Greedy"], "upvotes": "3760", "downvotes": "173"}, {"id": 44, "name": "Wildcard Matching", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/wildcard-matching", "submissions": 1144697, "accepted_subsmissions": 291305, "group": 2, "topics": ["String", "Dynamic Programming", "Backtracking", "Greedy"], "upvotes": "2779", "downvotes": "133"}, {"id": 43, "name": "Multiply Strings", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/multiply-strings", "submissions": 1011674, "accepted_subsmissions": 354149, "group": 2, "topics": ["Math", "String"], "upvotes": "2328", "downvotes": "963"}, {"id": 42, "name": "Trapping Rain Water", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/trapping-rain-water", "submissions": 1353601, "accepted_subsmissions": 694901, "group": 2, "topics": ["Array", "Two Pointers", "Dynamic Programming", "Stack"], "upvotes": "10322", "downvotes": "155"}, {"id": 41, "name": "First Missing Positive", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/first-missing-positive", "submissions": 1346500, "accepted_subsmissions": 454907, "group": 2, "topics": ["Array"], "upvotes": "5343", "downvotes": "949"}, {"id": 40, "name": "Combination Sum II", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/combination-sum-ii", "submissions": 782660, "accepted_subsmissions": 393117, "group": 2, "topics": ["Array", "Backtracking"], "upvotes": "2551", "downvotes": "86"}, {"id": 39, "name": "Combination Sum", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/combination-sum", "submissions": 1174434, "accepted_subsmissions": 697820, "group": 2, "topics": ["Array", "Backtracking"], "upvotes": "5567", "downvotes": "146"}, {"id": 38, "name": "Count and Say", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/count-and-say", "submissions": 1053747, "accepted_subsmissions": 486066, "group": 2, "topics": ["String"], "upvotes": "323", "downvotes": "1187"}, {"id": 37, "name": "Sudoku Solver", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/sudoku-solver", "submissions": 486874, "accepted_subsmissions": 227447, "group": 2, "topics": ["Hash Table", "Backtracking"], "upvotes": "2572", "downvotes": "101"}, {"id": 36, "name": "Valid Sudoku", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/valid-sudoku", "submissions": 899209, "accepted_subsmissions": 455682, "group": 2, "topics": ["Hash Table"], "upvotes": "2411", "downvotes": "541"}, {"id": 35, "name": "Search Insert Position", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/search-insert-position", "submissions": 1828250, "accepted_subsmissions": 782616, "group": 2, "topics": ["Array", "Binary Search"], "upvotes": "3275", "downvotes": "286"}, {"id": 34, "name": "Find First and Last Position of Element in Sorted Array", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/find-first-and-last-position-of-element-in-sorted-array", "submissions": 1773465, "accepted_subsmissions": 662456, "group": 2, "topics": ["Array", "Binary Search"], "upvotes": "5126", "downvotes": "196"}, {"id": 33, "name": "Search in Rotated Sorted Array", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/search-in-rotated-sorted-array", "submissions": 2612399, "accepted_subsmissions": 939361, "group": 2, "topics": ["Array", "Binary Search"], "upvotes": "7160", "downvotes": "636"}, {"id": 32, "name": "Longest Valid Parentheses", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/longest-valid-parentheses", "submissions": 1166408, "accepted_subsmissions": 342234, "group": 2, "topics": ["String", "Dynamic Programming"], "upvotes": "4575", "downvotes": "171"}, {"id": 31, "name": "Next Permutation", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/next-permutation", "submissions": 1440335, "accepted_subsmissions": 487116, "group": 2, "topics": ["Array"], "upvotes": "5114", "downvotes": "1757"}, {"id": 30, "name": "Substring with Concatenation of All Words", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/substring-with-concatenation-of-all-words", "submissions": 763454, "accepted_subsmissions": 200464, "group": 2, "topics": ["Hash Table", "Two Pointers", "String"], "upvotes": "1180", "downvotes": "1437"}, {"id": 29, "name": "Divide Two Integers", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/divide-two-integers", "submissions": 2088287, "accepted_subsmissions": 353629, "group": 2, "topics": ["Math", "Binary Search"], "upvotes": "1683", "downvotes": "6618"}, {"id": 28, "name": "Implement strStr()", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/implement-strstr", "submissions": 2375352, "accepted_subsmissions": 837622, "group": 2, "topics": ["Two Pointers", "String"], "upvotes": "2213", "downvotes": "2285"}, {"id": 27, "name": "Remove Element", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/remove-element", "submissions": 1622263, "accepted_subsmissions": 800366, "group": 2, "topics": ["Array", "Two Pointers"], "upvotes": "1977", "downvotes": "3388"}, {"id": 26, "name": "Remove Duplicates from Sorted Array", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/remove-duplicates-from-sorted-array", "submissions": 2871870, "accepted_subsmissions": 1339428, "group": 2, "topics": ["Array", "Two Pointers"], "upvotes": "3611", "downvotes": "6599"}, {"id": 25, "name": "Reverse Nodes in k-Group", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/reverse-nodes-in-k-group", "submissions": 742070, "accepted_subsmissions": 334190, "group": 2, "topics": ["Linked List"], "upvotes": "3385", "downvotes": "398"}, {"id": 24, "name": "Swap Nodes in Pairs", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/swap-nodes-in-pairs", "submissions": 1096942, "accepted_subsmissions": 583962, "group": 2, "topics": ["Linked List", "Recursion"], "upvotes": "3404", "downvotes": "207"}, {"id": 23, "name": "Merge k Sorted Lists", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/merge-k-sorted-lists", "submissions": 1960711, "accepted_subsmissions": 839267, "group": 2, "topics": ["Linked List", "Divide and Conquer", "Heap"], "upvotes": "6725", "downvotes": "349"}, {"id": 22, "name": "Generate Parentheses", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/generate-parentheses", "submissions": 1069795, "accepted_subsmissions": 700263, "group": 2, "topics": ["String", "Backtracking"], "upvotes": "7325", "downvotes": "315"}, {"id": 21, "name": "Merge Two Sorted Lists", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/merge-two-sorted-lists", "submissions": 2396508, "accepted_subsmissions": 1346309, "group": 2, "topics": ["Linked List", "Recursion"], "upvotes": "6285", "downvotes": "737"}, {"id": 20, "name": "Valid Parentheses", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/valid-parentheses", "submissions": 3358387, "accepted_subsmissions": 1340473, "group": 2, "topics": ["String", "Stack"], "upvotes": "7001", "downvotes": "289"}, {"id": 19, "name": "Remove Nth Node From End of List", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/remove-nth-node-from-end-of-list", "submissions": 2266034, "accepted_subsmissions": 810607, "group": 2, "topics": ["Linked List", "Two Pointers"], "upvotes": "4893", "downvotes": "290"}, {"id": 18, "name": "4Sum", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/4sum", "submissions": 1136399, "accepted_subsmissions": 397222, "group": 2, "topics": ["Array", "Hash Table", "Two Pointers"], "upvotes": "3057", "downvotes": "403"}, {"id": 17, "name": "Letter Combinations of a Phone Number", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/letter-combinations-of-a-phone-number", "submissions": 1579955, "accepted_subsmissions": 778493, "group": 2, "topics": ["String", "Backtracking", "Depth-first Search", "Recursion"], "upvotes": "5522", "downvotes": "499"}, {"id": 16, "name": "3Sum Closest", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/3sum-closest", "submissions": 1210480, "accepted_subsmissions": 560606, "group": 2, "topics": ["Array", "Two Pointers"], "upvotes": "2976", "downvotes": "167"}, {"id": 15, "name": "3Sum", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/3sum", "submissions": 4354721, "accepted_subsmissions": 1224030, "group": 2, "topics": ["Array", "Two Pointers"], "upvotes": "9758", "downvotes": "1002"}, {"id": 14, "name": "Longest Common Prefix", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/longest-common-prefix", "submissions": 2678427, "accepted_subsmissions": 968072, "group": 2, "topics": ["String"], "upvotes": "3820", "downvotes": "2159"}, {"id": 13, "name": "Roman to Integer", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/roman-to-integer", "submissions": 1623988, "accepted_subsmissions": 924329, "group": 2, "topics": ["Math", "String"], "upvotes": "321", "downvotes": "28"}, {"id": 12, "name": "Integer to Roman", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/integer-to-roman", "submissions": 816641, "accepted_subsmissions": 465249, "group": 2, "topics": ["Math", "String"], "upvotes": "1632", "downvotes": "3091"}, {"id": 11, "name": "Container With Most Water", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/container-with-most-water", "submissions": 1680818, "accepted_subsmissions": 887766, "group": 2, "topics": ["Array", "Two Pointers"], "upvotes": "8815", "downvotes": "681"}, {"id": 10, "name": "Regular Expression Matching", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/regular-expression-matching", "submissions": 1891789, "accepted_subsmissions": 517883, "group": 2, "topics": ["String", "Dynamic Programming", "Backtracking"], "upvotes": "5473", "downvotes": "832"}, {"id": 9, "name": "Palindrome Number", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/palindrome-number", "submissions": 2390430, "accepted_subsmissions": 1191655, "group": 2, "topics": ["Math"], "upvotes": "3111", "downvotes": "1712"}, {"id": 8, "name": "String to Integer (atoi)", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/string-to-integer-atoi", "submissions": 4483512, "accepted_subsmissions": 702364, "group": 2, "topics": ["Math", "String"], "upvotes": "116", "downvotes": "314"}, {"id": 7, "name": "Reverse Integer", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/reverse-integer", "submissions": 5535375, "accepted_subsmissions": 1434933, "group": 2, "topics": ["Math"], "upvotes": "4430", "downvotes": "6833"}, {"id": 6, "name": "ZigZag Conversion", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/zigzag-conversion", "submissions": 1444178, "accepted_subsmissions": 549612, "group": 2, "topics": ["String"], "upvotes": "2215", "downvotes": "5593"}, {"id": 5, "name": "Longest Palindromic Substring", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/longest-palindromic-substring", "submissions": 4040709, "accepted_subsmissions": 1234560, "group": 2, "topics": ["String", "Dynamic Programming"], "upvotes": "9961", "downvotes": "661"}, {"id": 4, "name": "Median of Two Sorted Arrays", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/median-of-two-sorted-arrays", "submissions": 2828518, "accepted_subsmissions": 881523, "group": 2, "topics": ["Array", "Binary Search", "Divide and Conquer"], "upvotes": "9433", "downvotes": "1455"}, {"id": 3, "name": "Longest Substring Without Repeating Characters", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/longest-substring-without-repeating-characters", "submissions": 6558362, "accepted_subsmissions": 2063475, "group": 2, "topics": ["Hash Table", "Two Pointers", "String", "Sliding Window"], "upvotes": "13452", "downvotes": "696"}, {"id": 2, "name": "Add Two Numbers", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/add-two-numbers", "submissions": 5145796, "accepted_subsmissions": 1829040, "group": 2, "topics": ["Linked List", "Math", "Recursion"], "upvotes": "11093", "downvotes": "2659"}, {"id": 1, "name": "Two Sum", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/two-sum", "submissions": 8518687, "accepted_subsmissions": 3965865, "group": 2, "topics": ["Array", "Hash Table"], "upvotes": "19757", "downvotes": "693"}, {"id": "Divide and Conquer", "name": "Divide and Conquer", "group": 1}, {"id": "Sort", "name": "Sort", "group": 1}, {"id": "Breadth-first Search", "name": "Breadth-first Search", "group": 1}, {"id": "Design", "name": "Design", "group": 1}, {"id": "Reservoir Sampling", "name": "Reservoir Sampling", "group": 1}, {"id": "Backtracking", "name": "Backtracking", "group": 1}, {"id": "String", "name": "String", "group": 1}, {"id": "Minimax", "name": "Minimax", "group": 1}, {"id": "Binary Indexed Tree", "name": "Binary Indexed Tree", "group": 1}, {"id": "Random", "name": "Random", "group": 1}, {"id": "Union Find", "name": "Union Find", "group": 1}, {"id": "Uncategorized", "name": "Uncategorized", "group": 1}, {"id": "Suffix Array", "name": "Suffix Array", "group": 1}, {"id": "Rejection Sampling", "name": "Rejection Sampling", "group": 1}, {"id": "Geometry", "name": "Geometry", "group": 1}, {"id": "Recursion", "name": "Recursion", "group": 1}, {"id": "Stack", "name": "Stack", "group": 1}, {"id": "Hash Table", "name": "Hash Table", "group": 1}, {"id": "Depth-first Search", "name": "Depth-first Search", "group": 1}, {"id": "Array", "name": "Array", "group": 1}, {"id": "Dynamic Programming", "name": "Dynamic Programming", "group": 1}, {"id": "Bit Manipulation", "name": "Bit Manipulation", "group": 1}, {"id": "Rolling Hash", "name": "Rolling Hash", "group": 1}, {"id": "Brainteaser", "name": "Brainteaser", "group": 1}, {"id": "Heap", "name": "Heap", "group": 1}, {"id": "Line Sweep", "name": "Line Sweep", "group": 1}, {"id": "Meet in the Middle", "name": "Meet in the Middle", "group": 1}, {"id": "Trie", "name": "Trie", "group": 1}, {"id": "Binary Search Tree", "name": "Binary Search Tree", "group": 1}, {"id": "Greedy", "name": "Greedy", "group": 1}, {"id": "Topological Sort", "name": "Topological Sort", "group": 1}, {"id": "Tree", "name": "Tree", "group": 1}, {"id": "Math", "name": "Math", "group": 1}, {"id": "Two Pointers", "name": "Two Pointers", "group": 1}, {"id": "Ordered Map", "name": "Ordered Map", "group": 1}, {"id": "Segment Tree", "name": "Segment Tree", "group": 1}, {"id": "Graph", "name": "Graph", "group": 1}, {"id": "Memoization", "name": "Memoization", "group": 1}, {"id": "Queue", "name": "Queue", "group": 1}, {"id": "Linked List", "name": "Linked List", "group": 1}, {"id": "Binary Search", "name": "Binary Search", "group": 1}, {"id": "Dequeue", "name": "Dequeue", "group": 1}, {"id": "Sliding Window", "name": "Sliding Window", "group": 1}, {"id": "Topics", "name": "Topics", "group": 0}], "links": [{"source": "Dynamic Programming", "target": 1787, "value": 1}, {"source": "Dynamic Programming", "target": 1786, "value": 1}, {"source": "Graph", "target": 1786, "value": 1}, {"source": "Greedy", "target": 1785, "value": 1}, {"source": "Greedy", "target": 1784, "value": 1}, {"source": "Math", "target": 1776, "value": 1}, {"source": "Greedy", "target": 1775, "value": 1}, {"source": "Greedy", "target": 1774, "value": 1}, {"source": "Array", "target": 1773, "value": 1}, {"source": "String", "target": 1773, "value": 1}, {"source": "Dynamic Programming", "target": 1771, "value": 1}, {"source": "Dynamic Programming", "target": 1770, "value": 1}, {"source": "Array", "target": 1769, "value": 1}, {"source": "Greedy", "target": 1769, "value": 1}, {"source": "String", "target": 1768, "value": 1}, {"source": "Graph", "target": 1782, "value": 1}, {"source": "Hash Table", "target": 1781, "value": 1}, {"source": "String", "target": 1781, "value": 1}, {"source": "Math", "target": 1780, "value": 1}, {"source": "Backtracking", "target": 1780, "value": 1}, {"source": "Recursion", "target": 1780, "value": 1}, {"source": "Array", "target": 1779, "value": 1}, {"source": "Graph", "target": 1761, "value": 1}, {"source": "Binary Search", "target": 1760, "value": 1}, {"source": "Heap", "target": 1760, "value": 1}, {"source": "String", "target": 1759, "value": 1}, {"source": "Greedy", "target": 1759, "value": 1}, {"source": "Array", "target": 1758, "value": 1}, {"source": "Greedy", "target": 1758, "value": 1}, {"source": "Divide and Conquer", "target": 1755, "value": 1}, {"source": "Meet in the Middle", "target": 1755, "value": 1}, {"source": "Greedy", "target": 1754, "value": 1}, {"source": "Suffix Array", "target": 1754, "value": 1}, {"source": "Math", "target": 1753, "value": 1}, {"source": "Heap", "target": 1753, "value": 1}, {"source": "Array", "target": 1752, "value": 1}, {"source": "Breadth-first Search", "target": 1765, "value": 1}, {"source": "Graph", "target": 1765, "value": 1}, {"source": "Math", "target": 1766, "value": 1}, {"source": "Tree", "target": 1766, "value": 1}, {"source": "Depth-first Search", "target": 1766, "value": 1}, {"source": "Breadth-first Search", "target": 1766, "value": 1}, {"source": "Array", "target": 1764, "value": 1}, {"source": "Greedy", "target": 1764, "value": 1}, {"source": "String", "target": 1763, "value": 1}, {"source": "Math", "target": 1744, "value": 1}, {"source": "String", "target": 1745, "value": 1}, {"source": "Dynamic Programming", "target": 1745, "value": 1}, {"source": "Greedy", "target": 1743, "value": 1}, {"source": "Math", "target": 1739, "value": 1}, {"source": "Binary Search", "target": 1739, "value": 1}, {"source": "Array", "target": 1738, "value": 1}, {"source": "String", "target": 1737, "value": 1}, {"source": "Greedy", "target": 1737, "value": 1}, {"source": "String", "target": 1736, "value": 1}, {"source": "Greedy", "target": 1736, "value": 1}, {"source": "Binary Search", "target": 1751, "value": 1}, {"source": "Dynamic Programming", "target": 1751, "value": 1}, {"source": "Two Pointers", "target": 1750, "value": 1}, {"source": "Greedy", "target": 1749, "value": 1}, {"source": "Array", "target": 1748, "value": 1}, {"source": "Hash Table", "target": 1748, "value": 1}, {"source": "Greedy", "target": 1727, "value": 1}, {"source": "Sort", "target": 1727, "value": 1}, {"source": "Array", "target": 1742, "value": 1}, {"source": "Greedy", "target": 1725, "value": 1}, {"source": "Greedy", "target": 1722, "value": 1}, {"source": "Depth-first Search", "target": 1722, "value": 1}, {"source": "Union Find", "target": 1722, "value": 1}, {"source": "Bit Manipulation", "target": 1720, "value": 1}, {"source": "Math", "target": 1735, "value": 1}, {"source": "Bit Manipulation", "target": 1734, "value": 1}, {"source": "Array", "target": 1733, "value": 1}, {"source": "Greedy", "target": 1733, "value": 1}, {"source": "Array", "target": 1732, "value": 1}, {"source": "Greedy", "target": 1713, "value": 1}, {"source": "Two Pointers", "target": 1712, "value": 1}, {"source": "Binary Search", "target": 1712, "value": 1}, {"source": "Array", "target": 1711, "value": 1}, {"source": "Hash Table", "target": 1711, "value": 1}, {"source": "Two Pointers", "target": 1711, "value": 1}, {"source": "Greedy", "target": 1710, "value": 1}, {"source": "Sort", "target": 1710, "value": 1}, {"source": "Bit Manipulation", "target": 1707, "value": 1}, {"source": "Trie", "target": 1707, "value": 1}, {"source": "Backtracking", "target": 1723, "value": 1}, {"source": "Recursion", "target": 1723, "value": 1}, {"source": "Heap", "target": 1705, "value": 1}, {"source": "Greedy", "target": 1705, "value": 1}, {"source": "String", "target": 1704, "value": 1}, {"source": "Tree", "target": 1719, "value": 1}, {"source": "Graph", "target": 1719, "value": 1}, {"source": "Backtracking", "target": 1718, "value": 1}, {"source": "Recursion", "target": 1718, "value": 1}, {"source": "Greedy", "target": 1717, "value": 1}, {"source": "Math", "target": 1716, "value": 1}, {"source": "Greedy", "target": 1716, "value": 1}, {"source": "Sort", "target": 1697, "value": 1}, {"source": "Union Find", "target": 1697, "value": 1}, {"source": "Dequeue", "target": 1696, "value": 1}, {"source": "Two Pointers", "target": 1695, "value": 1}, {"source": "String", "target": 1694, "value": 1}, {"source": "Dynamic Programming", "target": 1690, "value": 1}, {"source": "Greedy", "target": 1689, "value": 1}, {"source": "Backtracking", "target": 1688, "value": 1}, {"source": "Stack", "target": 1703, "value": 1}, {"source": "Greedy", "target": 1702, "value": 1}, {"source": "Array", "target": 1701, "value": 1}, {"source": "Array", "target": 1700, "value": 1}, {"source": "Math", "target": 1680, "value": 1}, {"source": "Backtracking", "target": 1681, "value": 1}, {"source": "Greedy", "target": 1681, "value": 1}, {"source": "Hash Table", "target": 1679, "value": 1}, {"source": "String", "target": 1678, "value": 1}, {"source": "Heap", "target": 1675, "value": 1}, {"source": "Ordered Map", "target": 1675, "value": 1}, {"source": "Greedy", "target": 1674, "value": 1}, {"source": "Stack", "target": 1673, "value": 1}, {"source": "Heap", "target": 1673, "value": 1}, {"source": "Greedy", "target": 1673, "value": 1}, {"source": "Queue", "target": 1673, "value": 1}, {"source": "Array", "target": 1672, "value": 1}, {"source": "Two Pointers", "target": 1687, "value": 1}, {"source": "Dynamic Programming", "target": 1687, "value": 1}, {"source": "Segment Tree", "target": 1687, "value": 1}, {"source": "Dequeue", "target": 1687, "value": 1}, {"source": "Greedy", "target": 1686, "value": 1}, {"source": "Math", "target": 1685, "value": 1}, {"source": "Greedy", "target": 1685, "value": 1}, {"source": "String", "target": 1684, "value": 1}, {"source": "Greedy", "target": 1665, "value": 1}, {"source": "Dynamic Programming", "target": 1664, "value": 1}, {"source": "Greedy", "target": 1664, "value": 1}, {"source": "Greedy", "target": 1663, "value": 1}, {"source": "String", "target": 1662, "value": 1}, {"source": "Dynamic Programming", "target": 1659, "value": 1}, {"source": "Backtracking", "target": 1659, "value": 1}, {"source": "Greedy", "target": 1657, "value": 1}, {"source": "Two Pointers", "target": 1658, "value": 1}, {"source": "Binary Search", "target": 1658, "value": 1}, {"source": "Greedy", "target": 1658, "value": 1}, {"source": "Sliding Window", "target": 1658, "value": 1}, {"source": "Array", "target": 1656, "value": 1}, {"source": "Design", "target": 1656, "value": 1}, {"source": "Binary Search", "target": 1649, "value": 1}, {"source": "Binary Indexed Tree", "target": 1649, "value": 1}, {"source": "Segment Tree", "target": 1649, "value": 1}, {"source": "Ordered Map", "target": 1649, "value": 1}, {"source": "Math", "target": 1648, "value": 1}, {"source": "Greedy", "target": 1648, "value": 1}, {"source": "Sort", "target": 1648, "value": 1}, {"source": "Greedy", "target": 1647, "value": 1}, {"source": "Sort", "target": 1647, "value": 1}, {"source": "Array", "target": 1646, "value": 1}, {"source": "Linked List", "target": 1670, "value": 1}, {"source": "Design", "target": 1670, "value": 1}, {"source": "Dequeue", "target": 1670, "value": 1}, {"source": "Dynamic Programming", "target": 1671, "value": 1}, {"source": "Linked List", "target": 1669, "value": 1}, {"source": "String", "target": 1668, "value": 1}, {"source": "Binary Search", "target": 1642, "value": 1}, {"source": "Heap", "target": 1642, "value": 1}, {"source": "Math", "target": 1641, "value": 1}, {"source": "Dynamic Programming", "target": 1641, "value": 1}, {"source": "Backtracking", "target": 1641, "value": 1}, {"source": "Array", "target": 1640, "value": 1}, {"source": "Hash Table", "target": 1640, "value": 1}, {"source": "Sort", "target": 1640, "value": 1}, {"source": "Dynamic Programming", "target": 1655, "value": 1}, {"source": "Backtracking", "target": 1655, "value": 1}, {"source": "Dynamic Programming", "target": 1654, "value": 1}, {"source": "Breadth-first Search", "target": 1654, "value": 1}, {"source": "String", "target": 1653, "value": 1}, {"source": "Greedy", "target": 1653, "value": 1}, {"source": "Array", "target": 1652, "value": 1}, {"source": "Binary Search", "target": 1631, "value": 1}, {"source": "Depth-first Search", "target": 1631, "value": 1}, {"source": "Union Find", "target": 1631, "value": 1}, {"source": "Graph", "target": 1631, "value": 1}, {"source": "Sort", "target": 1630, "value": 1}, {"source": "Array", "target": 1629, "value": 1}, {"source": "Dynamic Programming", "target": 1626, "value": 1}, {"source": "Depth-first Search", "target": 1625, "value": 1}, {"source": "Breadth-first Search", "target": 1625, "value": 1}, {"source": "String", "target": 1624, "value": 1}, {"source": "Dynamic Programming", "target": 1639, "value": 1}, {"source": "Hash Table", "target": 1638, "value": 1}, {"source": "String", "target": 1638, "value": 1}, {"source": "Trie", "target": 1638, "value": 1}, {"source": "Rolling Hash", "target": 1638, "value": 1}, {"source": "Sort", "target": 1637, "value": 1}, {"source": "Array", "target": 1636, "value": 1}, {"source": "Sort", "target": 1636, "value": 1}, {"source": "Backtracking", "target": 1617, "value": 1}, {"source": "Two Pointers", "target": 1616, "value": 1}, {"source": "String", "target": 1616, "value": 1}, {"source": "Greedy", "target": 1616, "value": 1}, {"source": "Graph", "target": 1615, "value": 1}, {"source": "String", "target": 1614, "value": 1}, {"source": "Two Pointers", "target": 1610, "value": 1}, {"source": "Geometry", "target": 1610, "value": 1}, {"source": "Dynamic Programming", "target": 1611, "value": 1}, {"source": "Bit Manipulation", "target": 1611, "value": 1}, {"source": "Tree", "target": 1609, "value": 1}, {"source": "Array", "target": 1608, "value": 1}, {"source": "Math", "target": 1622, "value": 1}, {"source": "Design", "target": 1622, "value": 1}, {"source": "Dynamic Programming", "target": 1728, "value": 1}, {"source": "Greedy", "target": 1620, "value": 1}, {"source": "Dynamic Programming", "target": 1621, "value": 1}, {"source": "Dynamic Programming", "target": 1601, "value": 1}, {"source": "Tree", "target": 1600, "value": 1}, {"source": "Design", "target": 1600, "value": 1}, {"source": "Greedy", "target": 1599, "value": 1}, {"source": "Stack", "target": 1598, "value": 1}, {"source": "Dynamic Programming", "target": 1595, "value": 1}, {"source": "Graph", "target": 1595, "value": 1}, {"source": "Dynamic Programming", "target": 1594, "value": 1}, {"source": "Greedy", "target": 1594, "value": 1}, {"source": "Backtracking", "target": 1593, "value": 1}, {"source": "String", "target": 1592, "value": 1}, {"source": "Greedy", "target": 1605, "value": 1}, {"source": "Ordered Map", "target": 1606, "value": 1}, {"source": "String", "target": 1604, "value": 1}, {"source": "Ordered Map", "target": 1604, "value": 1}, {"source": "Design", "target": 1603, "value": 1}, {"source": "String", "target": 1585, "value": 1}, {"source": "Greedy", "target": 1585, "value": 1}, {"source": "Union Find", "target": 1584, "value": 1}, {"source": "Array", "target": 1583, "value": 1}, {"source": "Array", "target": 1582, "value": 1}, {"source": "Union Find", "target": 1579, "value": 1}, {"source": "Greedy", "target": 1578, "value": 1}, {"source": "Hash Table", "target": 1577, "value": 1}, {"source": "Math", "target": 1577, "value": 1}, {"source": "String", "target": 1576, "value": 1}, {"source": "Greedy", "target": 1591, "value": 1}, {"source": "Greedy", "target": 1589, "value": 1}, {"source": "Array", "target": 1590, "value": 1}, {"source": "Hash Table", "target": 1590, "value": 1}, {"source": "Math", "target": 1590, "value": 1}, {"source": "Binary Search", "target": 1590, "value": 1}, {"source": "Array", "target": 1588, "value": 1}, {"source": "Dynamic Programming", "target": 1569, "value": 1}, {"source": "Greedy", "target": 1568, "value": 1}, {"source": "Greedy", "target": 1567, "value": 1}, {"source": "Array", "target": 1566, "value": 1}, {"source": "Dynamic Programming", "target": 1563, "value": 1}, {"source": "Binary Search", "target": 1562, "value": 1}, {"source": "Sort", "target": 1561, "value": 1}, {"source": "Array", "target": 1560, "value": 1}, {"source": "Dynamic Programming", "target": 1575, "value": 1}, {"source": "Array", "target": 1574, "value": 1}, {"source": "Binary Search", "target": 1574, "value": 1}, {"source": "String", "target": 1573, "value": 1}, {"source": "Array", "target": 1572, "value": 1}, {"source": "Dynamic Programming", "target": 1553, "value": 1}, {"source": "Array", "target": 1552, "value": 1}, {"source": "Binary Search", "target": 1552, "value": 1}, {"source": "Math", "target": 1551, "value": 1}, {"source": "Dynamic Programming", "target": 1547, "value": 1}, {"source": "String", "target": 1542, "value": 1}, {"source": "Bit Manipulation", "target": 1542, "value": 1}, {"source": "String", "target": 1545, "value": 1}, {"source": "String", "target": 1544, "value": 1}, {"source": "Stack", "target": 1544, "value": 1}, {"source": "Depth-first Search", "target": 1559, "value": 1}, {"source": "Greedy", "target": 1558, "value": 1}, {"source": "Graph", "target": 1557, "value": 1}, {"source": "String", "target": 1556, "value": 1}, {"source": "Dynamic Programming", "target": 1537, "value": 1}, {"source": "Greedy", "target": 1536, "value": 1}, {"source": "Array", "target": 1535, "value": 1}, {"source": "Array", "target": 1534, "value": 1}, {"source": "Tree", "target": 1530, "value": 1}, {"source": "Depth-first Search", "target": 1530, "value": 1}, {"source": "String", "target": 1529, "value": 1}, {"source": "Sort", "target": 1528, "value": 1}, {"source": "Dynamic Programming", "target": 1546, "value": 1}, {"source": "String", "target": 1541, "value": 1}, {"source": "Stack", "target": 1541, "value": 1}, {"source": "String", "target": 1540, "value": 1}, {"source": "Greedy", "target": 1540, "value": 1}, {"source": "Array", "target": 1539, "value": 1}, {"source": "Hash Table", "target": 1539, "value": 1}, {"source": "Binary Search", "target": 1521, "value": 1}, {"source": "Bit Manipulation", "target": 1521, "value": 1}, {"source": "Segment Tree", "target": 1521, "value": 1}, {"source": "Greedy", "target": 1520, "value": 1}, {"source": "Depth-first Search", "target": 1519, "value": 1}, {"source": "Breadth-first Search", "target": 1519, "value": 1}, {"source": "Greedy", "target": 1518, "value": 1}, {"source": "Geometry", "target": 1515, "value": 1}, {"source": "String", "target": 1531, "value": 1}, {"source": "Dynamic Programming", "target": 1531, "value": 1}, {"source": "Math", "target": 1513, "value": 1}, {"source": "String", "target": 1513, "value": 1}, {"source": "Array", "target": 1512, "value": 1}, {"source": "Hash Table", "target": 1512, "value": 1}, {"source": "Math", "target": 1512, "value": 1}, {"source": "Segment Tree", "target": 1526, "value": 1}, {"source": "String", "target": 1525, "value": 1}, {"source": "Bit Manipulation", "target": 1525, "value": 1}, {"source": "Array", "target": 1524, "value": 1}, {"source": "Math", "target": 1524, "value": 1}, {"source": "Math", "target": 1523, "value": 1}, {"source": "Greedy", "target": 1505, "value": 1}, {"source": "Dynamic Programming", "target": 1504, "value": 1}, {"source": "Array", "target": 1503, "value": 1}, {"source": "Brainteaser", "target": 1503, "value": 1}, {"source": "Array", "target": 1502, "value": 1}, {"source": "Sort", "target": 1502, "value": 1}, {"source": "Array", "target": 1499, "value": 1}, {"source": "Sliding Window", "target": 1499, "value": 1}, {"source": "Sort", "target": 1498, "value": 1}, {"source": "Sliding Window", "target": 1498, "value": 1}, {"source": "Array", "target": 1497, "value": 1}, {"source": "Math", "target": 1497, "value": 1}, {"source": "Greedy", "target": 1497, "value": 1}, {"source": "String", "target": 1496, "value": 1}, {"source": "Dynamic Programming", "target": 1510, "value": 1}, {"source": "Array", "target": 1509, "value": 1}, {"source": "Sort", "target": 1509, "value": 1}, {"source": "Array", "target": 1508, "value": 1}, {"source": "Sort", "target": 1508, "value": 1}, {"source": "Depth-first Search", "target": 1489, "value": 1}, {"source": "Union Find", "target": 1489, "value": 1}, {"source": "Array", "target": 1488, "value": 1}, {"source": "Hash Table", "target": 1488, "value": 1}, {"source": "Hash Table", "target": 1487, "value": 1}, {"source": "String", "target": 1487, "value": 1}, {"source": "Array", "target": 1486, "value": 1}, {"source": "Bit Manipulation", "target": 1486, "value": 1}, {"source": "Array", "target": 1482, "value": 1}, {"source": "Binary Search", "target": 1482, "value": 1}, {"source": "Array", "target": 1481, "value": 1}, {"source": "Sort", "target": 1481, "value": 1}, {"source": "Array", "target": 1480, "value": 1}, {"source": "Graph", "target": 1494, "value": 1}, {"source": "Array", "target": 1493, "value": 1}, {"source": "Math", "target": 1492, "value": 1}, {"source": "Array", "target": 1491, "value": 1}, {"source": "Sort", "target": 1491, "value": 1}, {"source": "Dynamic Programming", "target": 1473, "value": 1}, {"source": "Design", "target": 1472, "value": 1}, {"source": "Array", "target": 1471, "value": 1}, {"source": "Sort", "target": 1471, "value": 1}, {"source": "Array", "target": 1470, "value": 1}, {"source": "Math", "target": 1467, "value": 1}, {"source": "Backtracking", "target": 1467, "value": 1}, {"source": "Tree", "target": 1466, "value": 1}, {"source": "Depth-first Search", "target": 1466, "value": 1}, {"source": "Array", "target": 1465, "value": 1}, {"source": "Array", "target": 1464, "value": 1}, {"source": "Dynamic Programming", "target": 1477, "value": 1}, {"source": "Array", "target": 1476, "value": 1}, {"source": "Math", "target": 1478, "value": 1}, {"source": "Dynamic Programming", "target": 1478, "value": 1}, {"source": "Array", "target": 1475, "value": 1}, {"source": "Dynamic Programming", "target": 1458, "value": 1}, {"source": "Bit Manipulation", "target": 1457, "value": 1}, {"source": "Tree", "target": 1457, "value": 1}, {"source": "Depth-first Search", "target": 1457, "value": 1}, {"source": "String", "target": 1456, "value": 1}, {"source": "Sliding Window", "target": 1456, "value": 1}, {"source": "String", "target": 1455, "value": 1}, {"source": "Geometry", "target": 1453, "value": 1}, {"source": "String", "target": 1452, "value": 1}, {"source": "Sort", "target": 1452, "value": 1}, {"source": "String", "target": 1451, "value": 1}, {"source": "Sort", "target": 1451, "value": 1}, {"source": "Array", "target": 1450, "value": 1}, {"source": "Dynamic Programming", "target": 1463, "value": 1}, {"source": "Graph", "target": 1462, "value": 1}, {"source": "String", "target": 1461, "value": 1}, {"source": "Bit Manipulation", "target": 1461, "value": 1}, {"source": "Array", "target": 1460, "value": 1}, {"source": "Dynamic Programming", "target": 1444, "value": 1}, {"source": "Tree", "target": 1443, "value": 1}, {"source": "Depth-first Search", "target": 1443, "value": 1}, {"source": "Array", "target": 1442, "value": 1}, {"source": "Math", "target": 1442, "value": 1}, {"source": "Bit Manipulation", "target": 1442, "value": 1}, {"source": "Stack", "target": 1441, "value": 1}, {"source": "Heap", "target": 1439, "value": 1}, {"source": "Array", "target": 1438, "value": 1}, {"source": "Sliding Window", "target": 1438, "value": 1}, {"source": "Array", "target": 1437, "value": 1}, {"source": "String", "target": 1436, "value": 1}, {"source": "String", "target": 1449, "value": 1}, {"source": "Dynamic Programming", "target": 1449, "value": 1}, {"source": "Tree", "target": 1448, "value": 1}, {"source": "Depth-first Search", "target": 1448, "value": 1}, {"source": "Math", "target": 1447, "value": 1}, {"source": "String", "target": 1446, "value": 1}, {"source": "Array", "target": 1424, "value": 1}, {"source": "Sort", "target": 1424, "value": 1}, {"source": "Array", "target": 1423, "value": 1}, {"source": "Dynamic Programming", "target": 1423, "value": 1}, {"source": "Sliding Window", "target": 1423, "value": 1}, {"source": "String", "target": 1422, "value": 1}, {"source": "Dynamic Programming", "target": 1420, "value": 1}, {"source": "String", "target": 1419, "value": 1}, {"source": "Hash Table", "target": 1418, "value": 1}, {"source": "String", "target": 1417, "value": 1}, {"source": "Dynamic Programming", "target": 1434, "value": 1}, {"source": "Bit Manipulation", "target": 1434, "value": 1}, {"source": "String", "target": 1433, "value": 1}, {"source": "Greedy", "target": 1433, "value": 1}, {"source": "String", "target": 1432, "value": 1}, {"source": "Array", "target": 1431, "value": 1}, {"source": "Dynamic Programming", "target": 1411, "value": 1}, {"source": "String", "target": 1410, "value": 1}, {"source": "Stack", "target": 1410, "value": 1}, {"source": "Array", "target": 1409, "value": 1}, {"source": "String", "target": 1408, "value": 1}, {"source": "Dynamic Programming", "target": 1406, "value": 1}, {"source": "String", "target": 1404, "value": 1}, {"source": "Bit Manipulation", "target": 1404, "value": 1}, {"source": "Greedy", "target": 1403, "value": 1}, {"source": "Sort", "target": 1403, "value": 1}, {"source": "Dynamic Programming", "target": 1416, "value": 1}, {"source": "Backtracking", "target": 1415, "value": 1}, {"source": "Array", "target": 1414, "value": 1}, {"source": "Greedy", "target": 1414, "value": 1}, {"source": "Array", "target": 1413, "value": 1}, {"source": "Dynamic Programming", "target": 1397, "value": 1}, {"source": "Design", "target": 1396, "value": 1}, {"source": "Array", "target": 1395, "value": 1}, {"source": "Array", "target": 1394, "value": 1}, {"source": "String", "target": 1392, "value": 1}, {"source": "Depth-first Search", "target": 1391, "value": 1}, {"source": "Breadth-first Search", "target": 1391, "value": 1}, {"source": "Array", "target": 1389, "value": 1}, {"source": "Dynamic Programming", "target": 1402, "value": 1}, {"source": "Greedy", "target": 1400, "value": 1}, {"source": "Geometry", "target": 1401, "value": 1}, {"source": "Array", "target": 1399, "value": 1}, {"source": "Greedy", "target": 1383, "value": 1}, {"source": "Sort", "target": 1383, "value": 1}, {"source": "Tree", "target": 1379, "value": 1}, {"source": "Depth-first Search", "target": 1379, "value": 1}, {"source": "Breadth-first Search", "target": 1379, "value": 1}, {"source": "Recursion", "target": 1379, "value": 1}, {"source": "Stack", "target": 1381, "value": 1}, {"source": "Design", "target": 1381, "value": 1}, {"source": "Array", "target": 1380, "value": 1}, {"source": "Depth-first Search", "target": 1377, "value": 1}, {"source": "Depth-first Search", "target": 1376, "value": 1}, {"source": "Array", "target": 1375, "value": 1}, {"source": "String", "target": 1374, "value": 1}, {"source": "Dynamic Programming", "target": 1388, "value": 1}, {"source": "Sort", "target": 1387, "value": 1}, {"source": "Graph", "target": 1387, "value": 1}, {"source": "Array", "target": 1386, "value": 1}, {"source": "Greedy", "target": 1386, "value": 1}, {"source": "Array", "target": 1385, "value": 1}, {"source": "Breadth-first Search", "target": 1368, "value": 1}, {"source": "Linked List", "target": 1367, "value": 1}, {"source": "Dynamic Programming", "target": 1367, "value": 1}, {"source": "Tree", "target": 1367, "value": 1}, {"source": "Array", "target": 1366, "value": 1}, {"source": "Sort", "target": 1366, "value": 1}, {"source": "Array", "target": 1365, "value": 1}, {"source": "Hash Table", "target": 1365, "value": 1}, {"source": "Greedy", "target": 1354, "value": 1}, {"source": "Greedy", "target": 1353, "value": 1}, {"source": "Sort", "target": 1353, "value": 1}, {"source": "Segment Tree", "target": 1353, "value": 1}, {"source": "Array", "target": 1352, "value": 1}, {"source": "Design", "target": 1352, "value": 1}, {"source": "Array", "target": 1351, "value": 1}, {"source": "Binary Search", "target": 1351, "value": 1}, {"source": "Dynamic Programming", "target": 1373, "value": 1}, {"source": "Binary Search Tree", "target": 1373, "value": 1}, {"source": "Dynamic Programming", "target": 1372, "value": 1}, {"source": "Tree", "target": 1372, "value": 1}, {"source": "String", "target": 1371, "value": 1}, {"source": "String", "target": 1370, "value": 1}, {"source": "Sort", "target": 1370, "value": 1}, {"source": "Dynamic Programming", "target": 1349, "value": 1}, {"source": "Design", "target": 1348, "value": 1}, {"source": "String", "target": 1347, "value": 1}, {"source": "Array", "target": 1346, "value": 1}, {"source": "Dynamic Programming", "target": 1340, "value": 1}, {"source": "Dynamic Programming", "target": 1339, "value": 1}, {"source": "Tree", "target": 1339, "value": 1}, {"source": "Depth-first Search", "target": 1339, "value": 1}, {"source": "Array", "target": 1338, "value": 1}, {"source": "Greedy", "target": 1338, "value": 1}, {"source": "Array", "target": 1337, "value": 1}, {"source": "Binary Search", "target": 1337, "value": 1}, {"source": "Math", "target": 1359, "value": 1}, {"source": "Dynamic Programming", "target": 1359, "value": 1}, {"source": "String", "target": 1358, "value": 1}, {"source": "Design", "target": 1357, "value": 1}, {"source": "Sort", "target": 1356, "value": 1}, {"source": "Bit Manipulation", "target": 1356, "value": 1}, {"source": "Dynamic Programming", "target": 1335, "value": 1}, {"source": "Graph", "target": 1334, "value": 1}, {"source": "Array", "target": 1333, "value": 1}, {"source": "Sort", "target": 1333, "value": 1}, {"source": "String", "target": 1332, "value": 1}, {"source": "Dynamic Programming", "target": 1326, "value": 1}, {"source": "Greedy", "target": 1326, "value": 1}, {"source": "Tree", "target": 1325, "value": 1}, {"source": "String", "target": 1324, "value": 1}, {"source": "Math", "target": 1323, "value": 1}, {"source": "Breadth-first Search", "target": 1345, "value": 1}, {"source": "Math", "target": 1344, "value": 1}, {"source": "Array", "target": 1343, "value": 1}, {"source": "Bit Manipulation", "target": 1342, "value": 1}, {"source": "Dynamic Programming", "target": 1320, "value": 1}, {"source": "Depth-first Search", "target": 1319, "value": 1}, {"source": "Breadth-first Search", "target": 1319, "value": 1}, {"source": "Union Find", "target": 1319, "value": 1}, {"source": "Bit Manipulation", "target": 1318, "value": 1}, {"source": "Math", "target": 1317, "value": 1}, {"source": "Dynamic Programming", "target": 1312, "value": 1}, {"source": "Hash Table", "target": 1311, "value": 1}, {"source": "String", "target": 1311, "value": 1}, {"source": "Breadth-first Search", "target": 1311, "value": 1}, {"source": "Bit Manipulation", "target": 1310, "value": 1}, {"source": "String", "target": 1309, "value": 1}, {"source": "Math", "target": 1307, "value": 1}, {"source": "Backtracking", "target": 1307, "value": 1}, {"source": "Depth-first Search", "target": 1306, "value": 1}, {"source": "Breadth-first Search", "target": 1306, "value": 1}, {"source": "Recursion", "target": 1306, "value": 1}, {"source": "Sort", "target": 1305, "value": 1}, {"source": "Tree", "target": 1305, "value": 1}, {"source": "Array", "target": 1304, "value": 1}, {"source": "Breadth-first Search", "target": 1298, "value": 1}, {"source": "String", "target": 1297, "value": 1}, {"source": "Bit Manipulation", "target": 1297, "value": 1}, {"source": "Array", "target": 1296, "value": 1}, {"source": "Greedy", "target": 1296, "value": 1}, {"source": "Array", "target": 1295, "value": 1}, {"source": "Breadth-first Search", "target": 1293, "value": 1}, {"source": "Array", "target": 1292, "value": 1}, {"source": "Binary Search", "target": 1292, "value": 1}, {"source": "Linked List", "target": 1290, "value": 1}, {"source": "Bit Manipulation", "target": 1290, "value": 1}, {"source": "Breadth-first Search", "target": 1284, "value": 1}, {"source": "Binary Search", "target": 1283, "value": 1}, {"source": "Greedy", "target": 1282, "value": 1}, {"source": "Math", "target": 1281, "value": 1}, {"source": "Dynamic Programming", "target": 1278, "value": 1}, {"source": "Array", "target": 1277, "value": 1}, {"source": "Dynamic Programming", "target": 1277, "value": 1}, {"source": "Math", "target": 1276, "value": 1}, {"source": "Greedy", "target": 1276, "value": 1}, {"source": "Array", "target": 1275, "value": 1}, {"source": "Dynamic Programming", "target": 1269, "value": 1}, {"source": "String", "target": 1268, "value": 1}, {"source": "Array", "target": 1267, "value": 1}, {"source": "Graph", "target": 1267, "value": 1}, {"source": "Array", "target": 1266, "value": 1}, {"source": "Geometry", "target": 1266, "value": 1}, {"source": "Breadth-first Search", "target": 1263, "value": 1}, {"source": "Dynamic Programming", "target": 1262, "value": 1}, {"source": "Hash Table", "target": 1261, "value": 1}, {"source": "Tree", "target": 1261, "value": 1}, {"source": "Array", "target": 1260, "value": 1}, {"source": "Bit Manipulation", "target": 1255, "value": 1}, {"source": "Depth-first Search", "target": 1254, "value": 1}, {"source": "Math", "target": 1253, "value": 1}, {"source": "Greedy", "target": 1253, "value": 1}, {"source": "Array", "target": 1252, "value": 1}, {"source": "Math", "target": 1250, "value": 1}, {"source": "String", "target": 1249, "value": 1}, {"source": "Stack", "target": 1249, "value": 1}, {"source": "Two Pointers", "target": 1248, "value": 1}, {"source": "String", "target": 1247, "value": 1}, {"source": "Greedy", "target": 1247, "value": 1}, {"source": "Dynamic Programming", "target": 1691, "value": 1}, {"source": "Sort", "target": 1691, "value": 1}, {"source": "Array", "target": 1726, "value": 1}, {"source": "Hash Table", "target": 1726, "value": 1}, {"source": "Math", "target": 1227, "value": 1}, {"source": "Dynamic Programming", "target": 1227, "value": 1}, {"source": "Brainteaser", "target": 1227, "value": 1}, {"source": "Dynamic Programming", "target": 1240, "value": 1}, {"source": "Backtracking", "target": 1240, "value": 1}, {"source": "Backtracking", "target": 1239, "value": 1}, {"source": "Bit Manipulation", "target": 1239, "value": 1}, {"source": "Math", "target": 1238, "value": 1}, {"source": "Math", "target": 1237, "value": 1}, {"source": "Binary Search", "target": 1237, "value": 1}, {"source": "Binary Search", "target": 1235, "value": 1}, {"source": "Dynamic Programming", "target": 1235, "value": 1}, {"source": "Sort", "target": 1235, "value": 1}, {"source": "Two Pointers", "target": 1234, "value": 1}, {"source": "String", "target": 1234, "value": 1}, {"source": "Array", "target": 1233, "value": 1}, {"source": "String", "target": 1233, "value": 1}, {"source": "Array", "target": 1232, "value": 1}, {"source": "Math", "target": 1232, "value": 1}, {"source": "Geometry", "target": 1232, "value": 1}, {"source": "Hash Table", "target": 1224, "value": 1}, {"source": "Dynamic Programming", "target": 1223, "value": 1}, {"source": "Array", "target": 1222, "value": 1}, {"source": "String", "target": 1221, "value": 1}, {"source": "Greedy", "target": 1221, "value": 1}, {"source": "Design", "target": 1206, "value": 1}, {"source": "Dynamic Programming", "target": 1220, "value": 1}, {"source": "Backtracking", "target": 1219, "value": 1}, {"source": "Hash Table", "target": 1218, "value": 1}, {"source": "Math", "target": 1218, "value": 1}, {"source": "Dynamic Programming", "target": 1218, "value": 1}, {"source": "Array", "target": 1217, "value": 1}, {"source": "Math", "target": 1217, "value": 1}, {"source": "Greedy", "target": 1217, "value": 1}, {"source": "Graph", "target": 1514, "value": 1}, {"source": "Dynamic Programming", "target": 1706, "value": 1}, {"source": "Breadth-first Search", "target": 1210, "value": 1}, {"source": "Array", "target": 1208, "value": 1}, {"source": "Sliding Window", "target": 1208, "value": 1}, {"source": "Stack", "target": 1209, "value": 1}, {"source": "Hash Table", "target": 1207, "value": 1}, {"source": "Depth-first Search", "target": 1203, "value": 1}, {"source": "Graph", "target": 1203, "value": 1}, {"source": "Topological Sort", "target": 1203, "value": 1}, {"source": "Array", "target": 1202, "value": 1}, {"source": "Union Find", "target": 1202, "value": 1}, {"source": "Math", "target": 1201, "value": 1}, {"source": "Binary Search", "target": 1201, "value": 1}, {"source": "Array", "target": 1200, "value": 1}, {"source": "Dynamic Programming", "target": 1405, "value": 1}, {"source": "Greedy", "target": 1405, "value": 1}, {"source": "Depth-first Search", "target": 1192, "value": 1}, {"source": "Dynamic Programming", "target": 1191, "value": 1}, {"source": "Stack", "target": 1190, "value": 1}, {"source": "Hash Table", "target": 1189, "value": 1}, {"source": "String", "target": 1189, "value": 1}, {"source": "Dynamic Programming", "target": 1483, "value": 1}, {"source": "Array", "target": 1550, "value": 1}, {"source": "Dynamic Programming", "target": 1187, "value": 1}, {"source": "Array", "target": 1185, "value": 1}, {"source": "Dynamic Programming", "target": 1186, "value": 1}, {"source": "Array", "target": 1184, "value": 1}, {"source": "Dynamic Programming", "target": 1425, "value": 1}, {"source": "Binary Search Tree", "target": 1382, "value": 1}, {"source": "Math", "target": 1390, "value": 1}, {"source": "String", "target": 1507, "value": 1}, {"source": "Hash Table", "target": 1178, "value": 1}, {"source": "Bit Manipulation", "target": 1178, "value": 1}, {"source": "Array", "target": 1177, "value": 1}, {"source": "String", "target": 1177, "value": 1}, {"source": "Math", "target": 1175, "value": 1}, {"source": "Math", "target": 1363, "value": 1}, {"source": "Dynamic Programming", "target": 1363, "value": 1}, {"source": "Math", "target": 1362, "value": 1}, {"source": "Graph", "target": 1361, "value": 1}, {"source": "Uncategorized", "target": 1360, "value": 1}, {"source": "Array", "target": 1170, "value": 1}, {"source": "String", "target": 1170, "value": 1}, {"source": "Binary Search", "target": 1170, "value": 1}, {"source": "Array", "target": 1169, "value": 1}, {"source": "String", "target": 1169, "value": 1}, {"source": "Design", "target": 1172, "value": 1}, {"source": "Linked List", "target": 1171, "value": 1}, {"source": "Dynamic Programming", "target": 1155, "value": 1}, {"source": "Array", "target": 1157, "value": 1}, {"source": "Binary Search", "target": 1157, "value": 1}, {"source": "Segment Tree", "target": 1157, "value": 1}, {"source": "String", "target": 1156, "value": 1}, {"source": "Math", "target": 1154, "value": 1}, {"source": "Greedy", "target": 1632, "value": 1}, {"source": "Union Find", "target": 1632, "value": 1}, {"source": "Array", "target": 1331, "value": 1}, {"source": "Array", "target": 1330, "value": 1}, {"source": "Math", "target": 1330, "value": 1}, {"source": "Tree", "target": 1302, "value": 1}, {"source": "Depth-first Search", "target": 1302, "value": 1}, {"source": "Array", "target": 1329, "value": 1}, {"source": "Sort", "target": 1329, "value": 1}, {"source": "String", "target": 1328, "value": 1}, {"source": "Dynamic Programming", "target": 1147, "value": 1}, {"source": "Rolling Hash", "target": 1147, "value": 1}, {"source": "Dynamic Programming", "target": 1143, "value": 1}, {"source": "Array", "target": 1146, "value": 1}, {"source": "Tree", "target": 1145, "value": 1}, {"source": "Depth-first Search", "target": 1145, "value": 1}, {"source": "Array", "target": 1144, "value": 1}, {"source": "String", "target": 1316, "value": 1}, {"source": "Rolling Hash", "target": 1316, "value": 1}, {"source": "Tree", "target": 1315, "value": 1}, {"source": "Depth-first Search", "target": 1315, "value": 1}, {"source": "Dynamic Programming", "target": 1314, "value": 1}, {"source": "Array", "target": 1313, "value": 1}, {"source": "Dynamic Programming", "target": 1140, "value": 1}, {"source": "Dynamic Programming", "target": 1139, "value": 1}, {"source": "Hash Table", "target": 1138, "value": 1}, {"source": "String", "target": 1138, "value": 1}, {"source": "Recursion", "target": 1137, "value": 1}, {"source": "Dynamic Programming", "target": 1301, "value": 1}, {"source": "Array", "target": 1300, "value": 1}, {"source": "Binary Search", "target": 1300, "value": 1}, {"source": "Array", "target": 1299, "value": 1}, {"source": "Math", "target": 1131, "value": 1}, {"source": "Bit Manipulation", "target": 1131, "value": 1}, {"source": "Breadth-first Search", "target": 1129, "value": 1}, {"source": "Graph", "target": 1129, "value": 1}, {"source": "Dynamic Programming", "target": 1130, "value": 1}, {"source": "Stack", "target": 1130, "value": 1}, {"source": "Tree", "target": 1130, "value": 1}, {"source": "Array", "target": 1128, "value": 1}, {"source": "Dynamic Programming", "target": 1289, "value": 1}, {"source": "Math", "target": 1627, "value": 1}, {"source": "Union Find", "target": 1627, "value": 1}, {"source": "Greedy", "target": 1288, "value": 1}, {"source": "Sort", "target": 1288, "value": 1}, {"source": "Line Sweep", "target": 1288, "value": 1}, {"source": "Array", "target": 1287, "value": 1}, {"source": "Dynamic Programming", "target": 1125, "value": 1}, {"source": "Bit Manipulation", "target": 1125, "value": 1}, {"source": "Stack", "target": 1124, "value": 1}, {"source": "Tree", "target": 1123, "value": 1}, {"source": "Depth-first Search", "target": 1123, "value": 1}, {"source": "Array", "target": 1122, "value": 1}, {"source": "Sort", "target": 1122, "value": 1}, {"source": "Backtracking", "target": 1291, "value": 1}, {"source": "Backtracking", "target": 1286, "value": 1}, {"source": "Design", "target": 1286, "value": 1}, {"source": "Array", "target": 1619, "value": 1}, {"source": "Binary Search", "target": 1111, "value": 1}, {"source": "Greedy", "target": 1111, "value": 1}, {"source": "Tree", "target": 1110, "value": 1}, {"source": "Depth-first Search", "target": 1110, "value": 1}, {"source": "Array", "target": 1109, "value": 1}, {"source": "Math", "target": 1109, "value": 1}, {"source": "String", "target": 1108, "value": 1}, {"source": "String", "target": 1106, "value": 1}, {"source": "Dynamic Programming", "target": 1105, "value": 1}, {"source": "Math", "target": 1103, "value": 1}, {"source": "Math", "target": 1104, "value": 1}, {"source": "Tree", "target": 1104, "value": 1}, {"source": "String", "target": 1096, "value": 1}, {"source": "Binary Search", "target": 1095, "value": 1}, {"source": "Greedy", "target": 1094, "value": 1}, {"source": "Math", "target": 1093, "value": 1}, {"source": "Two Pointers", "target": 1093, "value": 1}, {"source": "Breadth-first Search", "target": 1091, "value": 1}, {"source": "Dynamic Programming", "target": 1092, "value": 1}, {"source": "Hash Table", "target": 1090, "value": 1}, {"source": "Greedy", "target": 1090, "value": 1}, {"source": "Array", "target": 1089, "value": 1}, {"source": "Backtracking", "target": 1079, "value": 1}, {"source": "String", "target": 1081, "value": 1}, {"source": "Stack", "target": 1081, "value": 1}, {"source": "Greedy", "target": 1081, "value": 1}, {"source": "Depth-first Search", "target": 1080, "value": 1}, {"source": "Hash Table", "target": 1078, "value": 1}, {"source": "Math", "target": 1073, "value": 1}, {"source": "Hash Table", "target": 1072, "value": 1}, {"source": "String", "target": 1071, "value": 1}, {"source": "Array", "target": 1074, "value": 1}, {"source": "Dynamic Programming", "target": 1074, "value": 1}, {"source": "Sliding Window", "target": 1074, "value": 1}, {"source": "Heap", "target": 1054, "value": 1}, {"source": "Sort", "target": 1054, "value": 1}, {"source": "Array", "target": 1053, "value": 1}, {"source": "Greedy", "target": 1053, "value": 1}, {"source": "Array", "target": 1052, "value": 1}, {"source": "Sliding Window", "target": 1052, "value": 1}, {"source": "Array", "target": 1051, "value": 1}, {"source": "String", "target": 1163, "value": 1}, {"source": "Suffix Array", "target": 1163, "value": 1}, {"source": "Dynamic Programming", "target": 1049, "value": 1}, {"source": "Hash Table", "target": 1048, "value": 1}, {"source": "Dynamic Programming", "target": 1048, "value": 1}, {"source": "Stack", "target": 1047, "value": 1}, {"source": "Heap", "target": 1046, "value": 1}, {"source": "Greedy", "target": 1046, "value": 1}, {"source": "Hash Table", "target": 1044, "value": 1}, {"source": "Binary Search", "target": 1044, "value": 1}, {"source": "Suffix Array", "target": 1044, "value": 1}, {"source": "Dynamic Programming", "target": 1043, "value": 1}, {"source": "Graph", "target": 1042, "value": 1}, {"source": "Math", "target": 1041, "value": 1}, {"source": "Breadth-first Search", "target": 1162, "value": 1}, {"source": "Graph", "target": 1162, "value": 1}, {"source": "Tree", "target": 1161, "value": 1}, {"source": "Breadth-first Search", "target": 1161, "value": 1}, {"source": "Math", "target": 1037, "value": 1}, {"source": "Tree", "target": 1038, "value": 1}, {"source": "Depth-first Search", "target": 1038, "value": 1}, {"source": "Binary Search Tree", "target": 1038, "value": 1}, {"source": "Recursion", "target": 1038, "value": 1}, {"source": "Array", "target": 1040, "value": 1}, {"source": "Sliding Window", "target": 1040, "value": 1}, {"source": "Array", "target": 1160, "value": 1}, {"source": "Hash Table", "target": 1160, "value": 1}, {"source": "Dynamic Programming", "target": 1039, "value": 1}, {"source": "Breadth-first Search", "target": 1036, "value": 1}, {"source": "Array", "target": 1035, "value": 1}, {"source": "Depth-first Search", "target": 1034, "value": 1}, {"source": "Brainteaser", "target": 1033, "value": 1}, {"source": "Trie", "target": 1032, "value": 1}, {"source": "Array", "target": 1031, "value": 1}, {"source": "Greedy", "target": 1029, "value": 1}, {"source": "Sort", "target": 1030, "value": 1}, {"source": "Tree", "target": 1028, "value": 1}, {"source": "Depth-first Search", "target": 1028, "value": 1}, {"source": "Tree", "target": 1026, "value": 1}, {"source": "Depth-first Search", "target": 1026, "value": 1}, {"source": "Dynamic Programming", "target": 1027, "value": 1}, {"source": "Math", "target": 1025, "value": 1}, {"source": "Dynamic Programming", "target": 1025, "value": 1}, {"source": "Dynamic Programming", "target": 1024, "value": 1}, {"source": "String", "target": 1023, "value": 1}, {"source": "Trie", "target": 1023, "value": 1}, {"source": "Tree", "target": 1022, "value": 1}, {"source": "Stack", "target": 1021, "value": 1}, {"source": "Depth-first Search", "target": 1020, "value": 1}, {"source": "Linked List", "target": 1019, "value": 1}, {"source": "Stack", "target": 1019, "value": 1}, {"source": "Array", "target": 1018, "value": 1}, {"source": "Math", "target": 1017, "value": 1}, {"source": "String", "target": 1016, "value": 1}, {"source": "Math", "target": 1015, "value": 1}, {"source": "Array", "target": 1014, "value": 1}, {"source": "Array", "target": 1013, "value": 1}, {"source": "Math", "target": 1012, "value": 1}, {"source": "Dynamic Programming", "target": 1012, "value": 1}, {"source": "Array", "target": 1011, "value": 1}, {"source": "Binary Search", "target": 1011, "value": 1}, {"source": "Array", "target": 1010, "value": 1}, {"source": "Math", "target": 1009, "value": 1}, {"source": "Tree", "target": 1008, "value": 1}, {"source": "Array", "target": 1007, "value": 1}, {"source": "Greedy", "target": 1007, "value": 1}, {"source": "Math", "target": 1006, "value": 1}, {"source": "Greedy", "target": 1005, "value": 1}, {"source": "Two Pointers", "target": 1004, "value": 1}, {"source": "Sliding Window", "target": 1004, "value": 1}, {"source": "String", "target": 1003, "value": 1}, {"source": "Stack", "target": 1003, "value": 1}, {"source": "Array", "target": 1002, "value": 1}, {"source": "Hash Table", "target": 1002, "value": 1}, {"source": "Hash Table", "target": 1001, "value": 1}, {"source": "Dynamic Programming", "target": 1000, "value": 1}, {"source": "Array", "target": 999, "value": 1}, {"source": "Tree", "target": 998, "value": 1}, {"source": "Graph", "target": 997, "value": 1}, {"source": "Math", "target": 996, "value": 1}, {"source": "Backtracking", "target": 996, "value": 1}, {"source": "Graph", "target": 996, "value": 1}, {"source": "Greedy", "target": 995, "value": 1}, {"source": "Sliding Window", "target": 995, "value": 1}, {"source": "Breadth-first Search", "target": 994, "value": 1}, {"source": "Tree", "target": 993, "value": 1}, {"source": "Breadth-first Search", "target": 993, "value": 1}, {"source": "Hash Table", "target": 992, "value": 1}, {"source": "Two Pointers", "target": 992, "value": 1}, {"source": "Sliding Window", "target": 992, "value": 1}, {"source": "Math", "target": 991, "value": 1}, {"source": "Greedy", "target": 991, "value": 1}, {"source": "Union Find", "target": 990, "value": 1}, {"source": "Graph", "target": 990, "value": 1}, {"source": "Array", "target": 989, "value": 1}, {"source": "Tree", "target": 988, "value": 1}, {"source": "Depth-first Search", "target": 988, "value": 1}, {"source": "Hash Table", "target": 987, "value": 1}, {"source": "Tree", "target": 987, "value": 1}, {"source": "Depth-first Search", "target": 987, "value": 1}, {"source": "Breadth-first Search", "target": 987, "value": 1}, {"source": "Two Pointers", "target": 986, "value": 1}, {"source": "Array", "target": 985, "value": 1}, {"source": "Greedy", "target": 984, "value": 1}, {"source": "Dynamic Programming", "target": 983, "value": 1}, {"source": "Dynamic Programming", "target": 982, "value": 1}, {"source": "Hash Table", "target": 981, "value": 1}, {"source": "Binary Search", "target": 981, "value": 1}, {"source": "Backtracking", "target": 980, "value": 1}, {"source": "Depth-first Search", "target": 980, "value": 1}, {"source": "Tree", "target": 979, "value": 1}, {"source": "Depth-first Search", "target": 979, "value": 1}, {"source": "Array", "target": 978, "value": 1}, {"source": "Dynamic Programming", "target": 978, "value": 1}, {"source": "Sliding Window", "target": 978, "value": 1}, {"source": "Array", "target": 977, "value": 1}, {"source": "Two Pointers", "target": 977, "value": 1}, {"source": "Math", "target": 976, "value": 1}, {"source": "Sort", "target": 976, "value": 1}, {"source": "Dynamic Programming", "target": 975, "value": 1}, {"source": "Stack", "target": 975, "value": 1}, {"source": "Ordered Map", "target": 975, "value": 1}, {"source": "Array", "target": 974, "value": 1}, {"source": "Hash Table", "target": 974, "value": 1}, {"source": "Divide and Conquer", "target": 973, "value": 1}, {"source": "Heap", "target": 973, "value": 1}, {"source": "Sort", "target": 973, "value": 1}, {"source": "Array", "target": 509, "value": 1}, {"source": "Math", "target": 972, "value": 1}, {"source": "Tree", "target": 971, "value": 1}, {"source": "Depth-first Search", "target": 971, "value": 1}, {"source": "Hash Table", "target": 970, "value": 1}, {"source": "Math", "target": 970, "value": 1}, {"source": "Array", "target": 969, "value": 1}, {"source": "Sort", "target": 969, "value": 1}, {"source": "Dynamic Programming", "target": 968, "value": 1}, {"source": "Tree", "target": 968, "value": 1}, {"source": "Depth-first Search", "target": 968, "value": 1}, {"source": "Backtracking", "target": 967, "value": 1}, {"source": "Depth-first Search", "target": 967, "value": 1}, {"source": "Breadth-first Search", "target": 967, "value": 1}, {"source": "Recursion", "target": 967, "value": 1}, {"source": "Hash Table", "target": 966, "value": 1}, {"source": "String", "target": 966, "value": 1}, {"source": "Tree", "target": 965, "value": 1}, {"source": "Math", "target": 964, "value": 1}, {"source": "Dynamic Programming", "target": 964, "value": 1}, {"source": "Math", "target": 963, "value": 1}, {"source": "Geometry", "target": 963, "value": 1}, {"source": "Array", "target": 962, "value": 1}, {"source": "Hash Table", "target": 961, "value": 1}, {"source": "Dynamic Programming", "target": 960, "value": 1}, {"source": "Depth-first Search", "target": 959, "value": 1}, {"source": "Union Find", "target": 959, "value": 1}, {"source": "Graph", "target": 959, "value": 1}, {"source": "Tree", "target": 958, "value": 1}, {"source": "Hash Table", "target": 957, "value": 1}, {"source": "Dynamic Programming", "target": 956, "value": 1}, {"source": "Greedy", "target": 955, "value": 1}, {"source": "Array", "target": 954, "value": 1}, {"source": "Hash Table", "target": 954, "value": 1}, {"source": "Hash Table", "target": 953, "value": 1}, {"source": "Math", "target": 952, "value": 1}, {"source": "Union Find", "target": 952, "value": 1}, {"source": "Tree", "target": 951, "value": 1}, {"source": "Array", "target": 950, "value": 1}, {"source": "Math", "target": 949, "value": 1}, {"source": "Two Pointers", "target": 948, "value": 1}, {"source": "Greedy", "target": 948, "value": 1}, {"source": "Sort", "target": 948, "value": 1}, {"source": "Depth-first Search", "target": 947, "value": 1}, {"source": "Union Find", "target": 947, "value": 1}, {"source": "Stack", "target": 946, "value": 1}, {"source": "Array", "target": 945, "value": 1}, {"source": "Greedy", "target": 944, "value": 1}, {"source": "Dynamic Programming", "target": 943, "value": 1}, {"source": "Math", "target": 942, "value": 1}, {"source": "Array", "target": 941, "value": 1}, {"source": "Dynamic Programming", "target": 940, "value": 1}, {"source": "Hash Table", "target": 939, "value": 1}, {"source": "Tree", "target": 938, "value": 1}, {"source": "Depth-first Search", "target": 938, "value": 1}, {"source": "Recursion", "target": 938, "value": 1}, {"source": "String", "target": 937, "value": 1}, {"source": "String", "target": 936, "value": 1}, {"source": "Greedy", "target": 936, "value": 1}, {"source": "Dynamic Programming", "target": 935, "value": 1}, {"source": "Depth-first Search", "target": 934, "value": 1}, {"source": "Breadth-first Search", "target": 934, "value": 1}, {"source": "Queue", "target": 933, "value": 1}, {"source": "Divide and Conquer", "target": 932, "value": 1}, {"source": "Dynamic Programming", "target": 931, "value": 1}, {"source": "Hash Table", "target": 930, "value": 1}, {"source": "Two Pointers", "target": 930, "value": 1}, {"source": "String", "target": 929, "value": 1}, {"source": "Depth-first Search", "target": 928, "value": 1}, {"source": "Union Find", "target": 928, "value": 1}, {"source": "Graph", "target": 928, "value": 1}, {"source": "Math", "target": 927, "value": 1}, {"source": "Binary Search", "target": 927, "value": 1}, {"source": "Greedy", "target": 927, "value": 1}, {"source": "Array", "target": 926, "value": 1}, {"source": "Two Pointers", "target": 925, "value": 1}, {"source": "String", "target": 925, "value": 1}, {"source": "Depth-first Search", "target": 924, "value": 1}, {"source": "Union Find", "target": 924, "value": 1}, {"source": "Two Pointers", "target": 923, "value": 1}, {"source": "Array", "target": 922, "value": 1}, {"source": "Sort", "target": 922, "value": 1}, {"source": "Stack", "target": 921, "value": 1}, {"source": "Greedy", "target": 921, "value": 1}, {"source": "Dynamic Programming", "target": 920, "value": 1}, {"source": "Tree", "target": 919, "value": 1}, {"source": "Array", "target": 918, "value": 1}, {"source": "String", "target": 917, "value": 1}, {"source": "String", "target": 916, "value": 1}, {"source": "Array", "target": 915, "value": 1}, {"source": "Array", "target": 914, "value": 1}, {"source": "Math", "target": 914, "value": 1}, {"source": "Breadth-first Search", "target": 913, "value": 1}, {"source": "Minimax", "target": 913, "value": 1}, {"source": "Uncategorized", "target": 912, "value": 1}, {"source": "Binary Search", "target": 911, "value": 1}, {"source": "Math", "target": 910, "value": 1}, {"source": "Greedy", "target": 910, "value": 1}, {"source": "Breadth-first Search", "target": 909, "value": 1}, {"source": "Math", "target": 908, "value": 1}, {"source": "Array", "target": 907, "value": 1}, {"source": "Stack", "target": 907, "value": 1}, {"source": "Math", "target": 906, "value": 1}, {"source": "Array", "target": 905, "value": 1}, {"source": "Two Pointers", "target": 904, "value": 1}, {"source": "Divide and Conquer", "target": 903, "value": 1}, {"source": "Dynamic Programming", "target": 903, "value": 1}, {"source": "Math", "target": 902, "value": 1}, {"source": "Dynamic Programming", "target": 902, "value": 1}, {"source": "Stack", "target": 901, "value": 1}, {"source": "Array", "target": 900, "value": 1}, {"source": "Math", "target": 899, "value": 1}, {"source": "String", "target": 899, "value": 1}, {"source": "Dynamic Programming", "target": 898, "value": 1}, {"source": "Bit Manipulation", "target": 898, "value": 1}, {"source": "Tree", "target": 897, "value": 1}, {"source": "Depth-first Search", "target": 897, "value": 1}, {"source": "Recursion", "target": 897, "value": 1}, {"source": "Array", "target": 896, "value": 1}, {"source": "Hash Table", "target": 895, "value": 1}, {"source": "Stack", "target": 895, "value": 1}, {"source": "Tree", "target": 894, "value": 1}, {"source": "Recursion", "target": 894, "value": 1}, {"source": "String", "target": 893, "value": 1}, {"source": "Math", "target": 892, "value": 1}, {"source": "Geometry", "target": 892, "value": 1}, {"source": "Array", "target": 891, "value": 1}, {"source": "Math", "target": 891, "value": 1}, {"source": "String", "target": 890, "value": 1}, {"source": "Tree", "target": 889, "value": 1}, {"source": "Array", "target": 888, "value": 1}, {"source": "Math", "target": 887, "value": 1}, {"source": "Binary Search", "target": 887, "value": 1}, {"source": "Dynamic Programming", "target": 887, "value": 1}, {"source": "Depth-first Search", "target": 886, "value": 1}, {"source": "Graph", "target": 886, "value": 1}, {"source": "Math", "target": 885, "value": 1}, {"source": "Hash Table", "target": 884, "value": 1}, {"source": "Math", "target": 883, "value": 1}, {"source": "Heap", "target": 882, "value": 1}, {"source": "Breadth-first Search", "target": 882, "value": 1}, {"source": "Two Pointers", "target": 881, "value": 1}, {"source": "Greedy", "target": 881, "value": 1}, {"source": "Stack", "target": 880, "value": 1}, {"source": "Math", "target": 478, "value": 1}, {"source": "Random", "target": 478, "value": 1}, {"source": "Rejection Sampling", "target": 478, "value": 1}, {"source": "Binary Search", "target": 497, "value": 1}, {"source": "Random", "target": 497, "value": 1}, {"source": "Random", "target": 519, "value": 1}, {"source": "Binary Search", "target": 528, "value": 1}, {"source": "Random", "target": 528, "value": 1}, {"source": "Dynamic Programming", "target": 879, "value": 1}, {"source": "Math", "target": 878, "value": 1}, {"source": "Binary Search", "target": 878, "value": 1}, {"source": "Math", "target": 877, "value": 1}, {"source": "Dynamic Programming", "target": 877, "value": 1}, {"source": "Minimax", "target": 877, "value": 1}, {"source": "Linked List", "target": 876, "value": 1}, {"source": "Binary Search", "target": 875, "value": 1}, {"source": "Greedy", "target": 874, "value": 1}, {"source": "Array", "target": 873, "value": 1}, {"source": "Dynamic Programming", "target": 873, "value": 1}, {"source": "Tree", "target": 872, "value": 1}, {"source": "Depth-first Search", "target": 872, "value": 1}, {"source": "Random", "target": 470, "value": 1}, {"source": "Rejection Sampling", "target": 470, "value": 1}, {"source": "Dynamic Programming", "target": 871, "value": 1}, {"source": "Heap", "target": 871, "value": 1}, {"source": "Array", "target": 870, "value": 1}, {"source": "Greedy", "target": 870, "value": 1}, {"source": "Math", "target": 869, "value": 1}, {"source": "Math", "target": 868, "value": 1}, {"source": "Array", "target": 867, "value": 1}, {"source": "Math", "target": 866, "value": 1}, {"source": "Tree", "target": 865, "value": 1}, {"source": "Depth-first Search", "target": 865, "value": 1}, {"source": "Breadth-first Search", "target": 865, "value": 1}, {"source": "Recursion", "target": 865, "value": 1}, {"source": "Heap", "target": 864, "value": 1}, {"source": "Breadth-first Search", "target": 864, "value": 1}, {"source": "Hash Table", "target": 710, "value": 1}, {"source": "Binary Search", "target": 710, "value": 1}, {"source": "Sort", "target": 710, "value": 1}, {"source": "Random", "target": 710, "value": 1}, {"source": "Tree", "target": 863, "value": 1}, {"source": "Depth-first Search", "target": 863, "value": 1}, {"source": "Breadth-first Search", "target": 863, "value": 1}, {"source": "Binary Search", "target": 862, "value": 1}, {"source": "Queue", "target": 862, "value": 1}, {"source": "Greedy", "target": 861, "value": 1}, {"source": "Greedy", "target": 860, "value": 1}, {"source": "String", "target": 859, "value": 1}, {"source": "Math", "target": 858, "value": 1}, {"source": "Heap", "target": 857, "value": 1}, {"source": "String", "target": 856, "value": 1}, {"source": "Stack", "target": 856, "value": 1}, {"source": "Ordered Map", "target": 855, "value": 1}, {"source": "Breadth-first Search", "target": 854, "value": 1}, {"source": "Graph", "target": 854, "value": 1}, {"source": "Sort", "target": 853, "value": 1}, {"source": "Binary Search", "target": 852, "value": 1}, {"source": "Depth-first Search", "target": 851, "value": 1}, {"source": "Segment Tree", "target": 850, "value": 1}, {"source": "Line Sweep", "target": 850, "value": 1}, {"source": "Array", "target": 849, "value": 1}, {"source": "String", "target": 848, "value": 1}, {"source": "Dynamic Programming", "target": 847, "value": 1}, {"source": "Breadth-first Search", "target": 847, "value": 1}, {"source": "Ordered Map", "target": 846, "value": 1}, {"source": "Two Pointers", "target": 845, "value": 1}, {"source": "Two Pointers", "target": 844, "value": 1}, {"source": "Stack", "target": 844, "value": 1}, {"source": "Minimax", "target": 843, "value": 1}, {"source": "String", "target": 842, "value": 1}, {"source": "Backtracking", "target": 842, "value": 1}, {"source": "Greedy", "target": 842, "value": 1}, {"source": "Depth-first Search", "target": 841, "value": 1}, {"source": "Graph", "target": 841, "value": 1}, {"source": "Array", "target": 840, "value": 1}, {"source": "Depth-first Search", "target": 839, "value": 1}, {"source": "Union Find", "target": 839, "value": 1}, {"source": "Graph", "target": 839, "value": 1}, {"source": "Two Pointers", "target": 838, "value": 1}, {"source": "Dynamic Programming", "target": 838, "value": 1}, {"source": "Dynamic Programming", "target": 837, "value": 1}, {"source": "Math", "target": 836, "value": 1}, {"source": "Array", "target": 835, "value": 1}, {"source": "Tree", "target": 834, "value": 1}, {"source": "Depth-first Search", "target": 834, "value": 1}, {"source": "String", "target": 833, "value": 1}, {"source": "Array", "target": 832, "value": 1}, {"source": "Design", "target": 622, "value": 1}, {"source": "Queue", "target": 622, "value": 1}, {"source": "Design", "target": 641, "value": 1}, {"source": "Queue", "target": 641, "value": 1}, {"source": "String", "target": 831, "value": 1}, {"source": "Array", "target": 830, "value": 1}, {"source": "Math", "target": 829, "value": 1}, {"source": "Two Pointers", "target": 828, "value": 1}, {"source": "Depth-first Search", "target": 827, "value": 1}, {"source": "Breadth-first Search", "target": 827, "value": 1}, {"source": "Two Pointers", "target": 826, "value": 1}, {"source": "Array", "target": 825, "value": 1}, {"source": "String", "target": 824, "value": 1}, {"source": "Uncategorized", "target": 823, "value": 1}, {"source": "Uncategorized", "target": 822, "value": 1}, {"source": "Uncategorized", "target": 821, "value": 1}, {"source": "Uncategorized", "target": 820, "value": 1}, {"source": "Linked List", "target": 707, "value": 1}, {"source": "Design", "target": 707, "value": 1}, {"source": "String", "target": 819, "value": 1}, {"source": "Dynamic Programming", "target": 818, "value": 1}, {"source": "Heap", "target": 818, "value": 1}, {"source": "Linked List", "target": 817, "value": 1}, {"source": "String", "target": 816, "value": 1}, {"source": "Breadth-first Search", "target": 815, "value": 1}, {"source": "Tree", "target": 814, "value": 1}, {"source": "Dynamic Programming", "target": 813, "value": 1}, {"source": "Math", "target": 812, "value": 1}, {"source": "Hash Table", "target": 811, "value": 1}, {"source": "Math", "target": 810, "value": 1}, {"source": "String", "target": 809, "value": 1}, {"source": "Dynamic Programming", "target": 808, "value": 1}, {"source": "Uncategorized", "target": 807, "value": 1}, {"source": "Uncategorized", "target": 806, "value": 1}, {"source": "Math", "target": 805, "value": 1}, {"source": "String", "target": 804, "value": 1}, {"source": "Union Find", "target": 803, "value": 1}, {"source": "Depth-first Search", "target": 802, "value": 1}, {"source": "Graph", "target": 802, "value": 1}, {"source": "Dynamic Programming", "target": 801, "value": 1}, {"source": "Hash Table", "target": 706, "value": 1}, {"source": "Design", "target": 706, "value": 1}, {"source": "Hash Table", "target": 705, "value": 1}, {"source": "Design", "target": 705, "value": 1}, {"source": "Dynamic Programming", "target": 799, "value": 1}, {"source": "Uncategorized", "target": 798, "value": 1}, {"source": "Backtracking", "target": 797, "value": 1}, {"source": "Depth-first Search", "target": 797, "value": 1}, {"source": "Graph", "target": 797, "value": 1}, {"source": "Uncategorized", "target": 796, "value": 1}, {"source": "Array", "target": 795, "value": 1}, {"source": "Math", "target": 794, "value": 1}, {"source": "Recursion", "target": 794, "value": 1}, {"source": "Binary Search", "target": 793, "value": 1}, {"source": "Array", "target": 792, "value": 1}, {"source": "String", "target": 791, "value": 1}, {"source": "Dynamic Programming", "target": 790, "value": 1}, {"source": "Math", "target": 789, "value": 1}, {"source": "String", "target": 788, "value": 1}, {"source": "Dynamic Programming", "target": 787, "value": 1}, {"source": "Heap", "target": 787, "value": 1}, {"source": "Breadth-first Search", "target": 787, "value": 1}, {"source": "Binary Search", "target": 786, "value": 1}, {"source": "Heap", "target": 786, "value": 1}, {"source": "Depth-first Search", "target": 785, "value": 1}, {"source": "Breadth-first Search", "target": 785, "value": 1}, {"source": "Graph", "target": 785, "value": 1}, {"source": "Backtracking", "target": 784, "value": 1}, {"source": "Bit Manipulation", "target": 784, "value": 1}, {"source": "Tree", "target": 783, "value": 1}, {"source": "Depth-first Search", "target": 783, "value": 1}, {"source": "Recursion", "target": 783, "value": 1}, {"source": "Array", "target": 782, "value": 1}, {"source": "Math", "target": 782, "value": 1}, {"source": "Hash Table", "target": 781, "value": 1}, {"source": "Math", "target": 781, "value": 1}, {"source": "Math", "target": 780, "value": 1}, {"source": "Recursion", "target": 779, "value": 1}, {"source": "Binary Search", "target": 778, "value": 1}, {"source": "Heap", "target": 778, "value": 1}, {"source": "Depth-first Search", "target": 778, "value": 1}, {"source": "Union Find", "target": 778, "value": 1}, {"source": "Brainteaser", "target": 777, "value": 1}, {"source": "Binary Search", "target": 704, "value": 1}, {"source": "Array", "target": 775, "value": 1}, {"source": "Math", "target": 775, "value": 1}, {"source": "Heap", "target": 703, "value": 1}, {"source": "Design", "target": 703, "value": 1}, {"source": "Breadth-first Search", "target": 773, "value": 1}, {"source": "Tree", "target": 701, "value": 1}, {"source": "Tree", "target": 700, "value": 1}, {"source": "Hash Table", "target": 771, "value": 1}, {"source": "Hash Table", "target": 770, "value": 1}, {"source": "String", "target": 770, "value": 1}, {"source": "Stack", "target": 770, "value": 1}, {"source": "Array", "target": 769, "value": 1}, {"source": "Array", "target": 768, "value": 1}, {"source": "String", "target": 767, "value": 1}, {"source": "Heap", "target": 767, "value": 1}, {"source": "Greedy", "target": 767, "value": 1}, {"source": "Sort", "target": 767, "value": 1}, {"source": "Array", "target": 766, "value": 1}, {"source": "Tree", "target": 590, "value": 1}, {"source": "Tree", "target": 589, "value": 1}, {"source": "Tree", "target": 559, "value": 1}, {"source": "Depth-first Search", "target": 559, "value": 1}, {"source": "Breadth-first Search", "target": 559, "value": 1}, {"source": "Uncategorized", "target": 558, "value": 1}, {"source": "Uncategorized", "target": 427, "value": 1}, {"source": "Greedy", "target": 765, "value": 1}, {"source": "Union Find", "target": 765, "value": 1}, {"source": "Graph", "target": 765, "value": 1}, {"source": "Dynamic Programming", "target": 764, "value": 1}, {"source": "Two Pointers", "target": 763, "value": 1}, {"source": "Greedy", "target": 763, "value": 1}, {"source": "Bit Manipulation", "target": 762, "value": 1}, {"source": "Linked List", "target": 430, "value": 1}, {"source": "Depth-first Search", "target": 430, "value": 1}, {"source": "Tree", "target": 429, "value": 1}, {"source": "Breadth-first Search", "target": 429, "value": 1}, {"source": "String", "target": 761, "value": 1}, {"source": "Recursion", "target": 761, "value": 1}, {"source": "Greedy", "target": 757, "value": 1}, {"source": "Bit Manipulation", "target": 756, "value": 1}, {"source": "Depth-first Search", "target": 756, "value": 1}, {"source": "Math", "target": 754, "value": 1}, {"source": "Math", "target": 753, "value": 1}, {"source": "Depth-first Search", "target": 753, "value": 1}, {"source": "Breadth-first Search", "target": 752, "value": 1}, {"source": "Depth-first Search", "target": 749, "value": 1}, {"source": "Hash Table", "target": 748, "value": 1}, {"source": "Array", "target": 747, "value": 1}, {"source": "Array", "target": 746, "value": 1}, {"source": "Dynamic Programming", "target": 746, "value": 1}, {"source": "Trie", "target": 745, "value": 1}, {"source": "Binary Search", "target": 744, "value": 1}, {"source": "Heap", "target": 743, "value": 1}, {"source": "Depth-first Search", "target": 743, "value": 1}, {"source": "Breadth-first Search", "target": 743, "value": 1}, {"source": "Graph", "target": 743, "value": 1}, {"source": "String", "target": 709, "value": 1}, {"source": "Dynamic Programming", "target": 741, "value": 1}, {"source": "Dynamic Programming", "target": 740, "value": 1}, {"source": "Hash Table", "target": 739, "value": 1}, {"source": "Stack", "target": 739, "value": 1}, {"source": "Greedy", "target": 738, "value": 1}, {"source": "String", "target": 736, "value": 1}, {"source": "Stack", "target": 735, "value": 1}, {"source": "Depth-first Search", "target": 733, "value": 1}, {"source": "Segment Tree", "target": 732, "value": 1}, {"source": "Ordered Map", "target": 732, "value": 1}, {"source": "Ordered Map", "target": 731, "value": 1}, {"source": "String", "target": 730, "value": 1}, {"source": "Dynamic Programming", "target": 730, "value": 1}, {"source": "Array", "target": 729, "value": 1}, {"source": "Math", "target": 728, "value": 1}, {"source": "Hash Table", "target": 726, "value": 1}, {"source": "Stack", "target": 726, "value": 1}, {"source": "Recursion", "target": 726, "value": 1}, {"source": "Linked List", "target": 725, "value": 1}, {"source": "Array", "target": 724, "value": 1}, {"source": "String", "target": 722, "value": 1}, {"source": "Depth-first Search", "target": 721, "value": 1}, {"source": "Union Find", "target": 721, "value": 1}, {"source": "Hash Table", "target": 720, "value": 1}, {"source": "Trie", "target": 720, "value": 1}, {"source": "Array", "target": 719, "value": 1}, {"source": "Binary Search", "target": 719, "value": 1}, {"source": "Heap", "target": 719, "value": 1}, {"source": "Array", "target": 718, "value": 1}, {"source": "Hash Table", "target": 718, "value": 1}, {"source": "Binary Search", "target": 718, "value": 1}, {"source": "Dynamic Programming", "target": 718, "value": 1}, {"source": "Array", "target": 717, "value": 1}, {"source": "Segment Tree", "target": 715, "value": 1}, {"source": "Ordered Map", "target": 715, "value": 1}, {"source": "Array", "target": 714, "value": 1}, {"source": "Dynamic Programming", "target": 714, "value": 1}, {"source": "Greedy", "target": 714, "value": 1}, {"source": "Array", "target": 713, "value": 1}, {"source": "Two Pointers", "target": 713, "value": 1}, {"source": "Dynamic Programming", "target": 712, "value": 1}, {"source": "Segment Tree", "target": 699, "value": 1}, {"source": "Ordered Map", "target": 699, "value": 1}, {"source": "Dynamic Programming", "target": 698, "value": 1}, {"source": "Recursion", "target": 698, "value": 1}, {"source": "Array", "target": 697, "value": 1}, {"source": "String", "target": 696, "value": 1}, {"source": "Array", "target": 695, "value": 1}, {"source": "Depth-first Search", "target": 695, "value": 1}, {"source": "Bit Manipulation", "target": 693, "value": 1}, {"source": "Hash Table", "target": 692, "value": 1}, {"source": "Heap", "target": 692, "value": 1}, {"source": "Trie", "target": 692, "value": 1}, {"source": "Dynamic Programming", "target": 691, "value": 1}, {"source": "Backtracking", "target": 691, "value": 1}, {"source": "Hash Table", "target": 690, "value": 1}, {"source": "Depth-first Search", "target": 690, "value": 1}, {"source": "Breadth-first Search", "target": 690, "value": 1}, {"source": "Array", "target": 689, "value": 1}, {"source": "Dynamic Programming", "target": 689, "value": 1}, {"source": "Dynamic Programming", "target": 688, "value": 1}, {"source": "Tree", "target": 687, "value": 1}, {"source": "Recursion", "target": 687, "value": 1}, {"source": "String", "target": 686, "value": 1}, {"source": "Tree", "target": 685, "value": 1}, {"source": "Depth-first Search", "target": 685, "value": 1}, {"source": "Union Find", "target": 685, "value": 1}, {"source": "Graph", "target": 685, "value": 1}, {"source": "Tree", "target": 684, "value": 1}, {"source": "Union Find", "target": 684, "value": 1}, {"source": "Graph", "target": 684, "value": 1}, {"source": "Stack", "target": 682, "value": 1}, {"source": "String", "target": 680, "value": 1}, {"source": "Depth-first Search", "target": 679, "value": 1}, {"source": "String", "target": 678, "value": 1}, {"source": "Trie", "target": 677, "value": 1}, {"source": "Hash Table", "target": 676, "value": 1}, {"source": "Trie", "target": 676, "value": 1}, {"source": "Breadth-first Search", "target": 675, "value": 1}, {"source": "Array", "target": 674, "value": 1}, {"source": "Dynamic Programming", "target": 673, "value": 1}, {"source": "Math", "target": 672, "value": 1}, {"source": "Tree", "target": 671, "value": 1}, {"source": "Array", "target": 670, "value": 1}, {"source": "Math", "target": 670, "value": 1}, {"source": "Tree", "target": 669, "value": 1}, {"source": "Recursion", "target": 669, "value": 1}, {"source": "Binary Search", "target": 668, "value": 1}, {"source": "Array", "target": 667, "value": 1}, {"source": "Array", "target": 665, "value": 1}, {"source": "Dynamic Programming", "target": 664, "value": 1}, {"source": "Depth-first Search", "target": 664, "value": 1}, {"source": "Tree", "target": 662, "value": 1}, {"source": "Array", "target": 661, "value": 1}, {"source": "Heap", "target": 659, "value": 1}, {"source": "Greedy", "target": 659, "value": 1}, {"source": "Binary Search", "target": 658, "value": 1}, {"source": "String", "target": 657, "value": 1}, {"source": "Tree", "target": 655, "value": 1}, {"source": "Tree", "target": 654, "value": 1}, {"source": "Tree", "target": 653, "value": 1}, {"source": "Tree", "target": 652, "value": 1}, {"source": "Dynamic Programming", "target": 650, "value": 1}, {"source": "Greedy", "target": 649, "value": 1}, {"source": "Hash Table", "target": 648, "value": 1}, {"source": "Trie", "target": 648, "value": 1}, {"source": "String", "target": 647, "value": 1}, {"source": "Dynamic Programming", "target": 647, "value": 1}, {"source": "Dynamic Programming", "target": 646, "value": 1}, {"source": "Hash Table", "target": 645, "value": 1}, {"source": "Math", "target": 645, "value": 1}, {"source": "Array", "target": 643, "value": 1}, {"source": "Math", "target": 640, "value": 1}, {"source": "Dynamic Programming", "target": 639, "value": 1}, {"source": "Dynamic Programming", "target": 638, "value": 1}, {"source": "Depth-first Search", "target": 638, "value": 1}, {"source": "Tree", "target": 637, "value": 1}, {"source": "Stack", "target": 636, "value": 1}, {"source": "Math", "target": 633, "value": 1}, {"source": "Hash Table", "target": 632, "value": 1}, {"source": "Two Pointers", "target": 632, "value": 1}, {"source": "String", "target": 632, "value": 1}, {"source": "Greedy", "target": 630, "value": 1}, {"source": "Dynamic Programming", "target": 629, "value": 1}, {"source": "Array", "target": 628, "value": 1}, {"source": "Math", "target": 628, "value": 1}, {"source": "Tree", "target": 623, "value": 1}, {"source": "Array", "target": 621, "value": 1}, {"source": "Greedy", "target": 621, "value": 1}, {"source": "Queue", "target": 621, "value": 1}, {"source": "Tree", "target": 617, "value": 1}, {"source": "Array", "target": 611, "value": 1}, {"source": "Hash Table", "target": 609, "value": 1}, {"source": "String", "target": 609, "value": 1}, {"source": "String", "target": 606, "value": 1}, {"source": "Tree", "target": 606, "value": 1}, {"source": "Array", "target": 605, "value": 1}, {"source": "Greedy", "target": 605, "value": 1}, {"source": "Dynamic Programming", "target": 600, "value": 1}, {"source": "Hash Table", "target": 599, "value": 1}, {"source": "Math", "target": 598, "value": 1}, {"source": "Hash Table", "target": 594, "value": 1}, {"source": "Math", "target": 593, "value": 1}, {"source": "Math", "target": 592, "value": 1}, {"source": "String", "target": 591, "value": 1}, {"source": "Stack", "target": 591, "value": 1}, {"source": "Geometry", "target": 587, "value": 1}, {"source": "String", "target": 583, "value": 1}, {"source": "Array", "target": 581, "value": 1}, {"source": "Dynamic Programming", "target": 576, "value": 1}, {"source": "Depth-first Search", "target": 576, "value": 1}, {"source": "Hash Table", "target": 575, "value": 1}, {"source": "Tree", "target": 572, "value": 1}, {"source": "Two Pointers", "target": 567, "value": 1}, {"source": "Sliding Window", "target": 567, "value": 1}, {"source": "Array", "target": 566, "value": 1}, {"source": "Array", "target": 565, "value": 1}, {"source": "String", "target": 564, "value": 1}, {"source": "Tree", "target": 563, "value": 1}, {"source": "Depth-first Search", "target": 563, "value": 1}, {"source": "Recursion", "target": 563, "value": 1}, {"source": "Array", "target": 561, "value": 1}, {"source": "Array", "target": 560, "value": 1}, {"source": "Hash Table", "target": 560, "value": 1}, {"source": "String", "target": 557, "value": 1}, {"source": "String", "target": 556, "value": 1}, {"source": "Hash Table", "target": 554, "value": 1}, {"source": "Math", "target": 553, "value": 1}, {"source": "String", "target": 553, "value": 1}, {"source": "Dynamic Programming", "target": 552, "value": 1}, {"source": "String", "target": 551, "value": 1}, {"source": "Depth-first Search", "target": 547, "value": 1}, {"source": "Union Find", "target": 547, "value": 1}, {"source": "Dynamic Programming", "target": 546, "value": 1}, {"source": "Depth-first Search", "target": 546, "value": 1}, {"source": "Tree", "target": 543, "value": 1}, {"source": "Depth-first Search", "target": 542, "value": 1}, {"source": "Breadth-first Search", "target": 542, "value": 1}, {"source": "String", "target": 541, "value": 1}, {"source": "Binary Search", "target": 540, "value": 1}, {"source": "String", "target": 539, "value": 1}, {"source": "Tree", "target": 538, "value": 1}, {"source": "Depth-first Search", "target": 538, "value": 1}, {"source": "Binary Search Tree", "target": 538, "value": 1}, {"source": "Recursion", "target": 538, "value": 1}, {"source": "Math", "target": 537, "value": 1}, {"source": "String", "target": 537, "value": 1}, {"source": "Hash Table", "target": 535, "value": 1}, {"source": "Math", "target": 535, "value": 1}, {"source": "Array", "target": 532, "value": 1}, {"source": "Two Pointers", "target": 532, "value": 1}, {"source": "Tree", "target": 530, "value": 1}, {"source": "Depth-first Search", "target": 529, "value": 1}, {"source": "Breadth-first Search", "target": 529, "value": 1}, {"source": "Linked List", "target": 1721, "value": 1}, {"source": "Backtracking", "target": 526, "value": 1}, {"source": "Depth-first Search", "target": 526, "value": 1}, {"source": "Hash Table", "target": 525, "value": 1}, {"source": "Two Pointers", "target": 524, "value": 1}, {"source": "Sort", "target": 524, "value": 1}, {"source": "Math", "target": 523, "value": 1}, {"source": "Dynamic Programming", "target": 523, "value": 1}, {"source": "String", "target": 522, "value": 1}, {"source": "String", "target": 521, "value": 1}, {"source": "Brainteaser", "target": 521, "value": 1}, {"source": "String", "target": 520, "value": 1}, {"source": "Uncategorized", "target": 518, "value": 1}, {"source": "Math", "target": 517, "value": 1}, {"source": "Dynamic Programming", "target": 517, "value": 1}, {"source": "Dynamic Programming", "target": 516, "value": 1}, {"source": "Tree", "target": 515, "value": 1}, {"source": "Depth-first Search", "target": 515, "value": 1}, {"source": "Breadth-first Search", "target": 515, "value": 1}, {"source": "Divide and Conquer", "target": 514, "value": 1}, {"source": "Dynamic Programming", "target": 514, "value": 1}, {"source": "Depth-first Search", "target": 514, "value": 1}, {"source": "Tree", "target": 513, "value": 1}, {"source": "Depth-first Search", "target": 513, "value": 1}, {"source": "Breadth-first Search", "target": 513, "value": 1}, {"source": "Hash Table", "target": 508, "value": 1}, {"source": "Tree", "target": 508, "value": 1}, {"source": "Math", "target": 507, "value": 1}, {"source": "Uncategorized", "target": 506, "value": 1}, {"source": "Uncategorized", "target": 504, "value": 1}, {"source": "Stack", "target": 503, "value": 1}, {"source": "Heap", "target": 502, "value": 1}, {"source": "Greedy", "target": 502, "value": 1}, {"source": "Tree", "target": 501, "value": 1}, {"source": "Hash Table", "target": 500, "value": 1}, {"source": "Uncategorized", "target": 498, "value": 1}, {"source": "Stack", "target": 496, "value": 1}, {"source": "Array", "target": 495, "value": 1}, {"source": "Dynamic Programming", "target": 494, "value": 1}, {"source": "Depth-first Search", "target": 494, "value": 1}, {"source": "Binary Search", "target": 493, "value": 1}, {"source": "Divide and Conquer", "target": 493, "value": 1}, {"source": "Sort", "target": 493, "value": 1}, {"source": "Binary Indexed Tree", "target": 493, "value": 1}, {"source": "Segment Tree", "target": 493, "value": 1}, {"source": "Math", "target": 492, "value": 1}, {"source": "Depth-first Search", "target": 491, "value": 1}, {"source": "Dynamic Programming", "target": 1643, "value": 1}, {"source": "Depth-first Search", "target": 488, "value": 1}, {"source": "Dynamic Programming", "target": 486, "value": 1}, {"source": "Minimax", "target": 486, "value": 1}, {"source": "Array", "target": 485, "value": 1}, {"source": "Math", "target": 483, "value": 1}, {"source": "Binary Search", "target": 483, "value": 1}, {"source": "Uncategorized", "target": 482, "value": 1}, {"source": "Uncategorized", "target": 481, "value": 1}, {"source": "Sliding Window", "target": 480, "value": 1}, {"source": "Uncategorized", "target": 479, "value": 1}, {"source": "Bit Manipulation", "target": 477, "value": 1}, {"source": "Bit Manipulation", "target": 476, "value": 1}, {"source": "Binary Search", "target": 475, "value": 1}, {"source": "Dynamic Programming", "target": 474, "value": 1}, {"source": "Depth-first Search", "target": 473, "value": 1}, {"source": "Dynamic Programming", "target": 472, "value": 1}, {"source": "Depth-first Search", "target": 472, "value": 1}, {"source": "Trie", "target": 472, "value": 1}, {"source": "String", "target": 468, "value": 1}, {"source": "Dynamic Programming", "target": 467, "value": 1}, {"source": "Dynamic Programming", "target": 466, "value": 1}, {"source": "Dynamic Programming", "target": 464, "value": 1}, {"source": "Minimax", "target": 464, "value": 1}, {"source": "Hash Table", "target": 463, "value": 1}, {"source": "Math", "target": 462, "value": 1}, {"source": "Bit Manipulation", "target": 461, "value": 1}, {"source": "Design", "target": 460, "value": 1}, {"source": "String", "target": 459, "value": 1}, {"source": "Math", "target": 458, "value": 1}, {"source": "Array", "target": 457, "value": 1}, {"source": "Two Pointers", "target": 457, "value": 1}, {"source": "Stack", "target": 456, "value": 1}, {"source": "Greedy", "target": 455, "value": 1}, {"source": "Hash Table", "target": 454, "value": 1}, {"source": "Binary Search", "target": 454, "value": 1}, {"source": "Math", "target": 453, "value": 1}, {"source": "Greedy", "target": 452, "value": 1}, {"source": "Sort", "target": 452, "value": 1}, {"source": "Hash Table", "target": 451, "value": 1}, {"source": "Heap", "target": 451, "value": 1}, {"source": "Tree", "target": 450, "value": 1}, {"source": "Tree", "target": 449, "value": 1}, {"source": "Array", "target": 448, "value": 1}, {"source": "Hash Table", "target": 447, "value": 1}, {"source": "Math", "target": 447, "value": 1}, {"source": "Dynamic Programming", "target": 446, "value": 1}, {"source": "Linked List", "target": 445, "value": 1}, {"source": "String", "target": 443, "value": 1}, {"source": "Array", "target": 442, "value": 1}, {"source": "Math", "target": 441, "value": 1}, {"source": "Binary Search", "target": 441, "value": 1}, {"source": "Uncategorized", "target": 440, "value": 1}, {"source": "Hash Table", "target": 438, "value": 1}, {"source": "Tree", "target": 437, "value": 1}, {"source": "Binary Search", "target": 436, "value": 1}, {"source": "Greedy", "target": 435, "value": 1}, {"source": "String", "target": 434, "value": 1}, {"source": "Uncategorized", "target": 433, "value": 1}, {"source": "Design", "target": 432, "value": 1}, {"source": "Two Pointers", "target": 424, "value": 1}, {"source": "Sliding Window", "target": 424, "value": 1}, {"source": "Math", "target": 423, "value": 1}, {"source": "Bit Manipulation", "target": 421, "value": 1}, {"source": "Trie", "target": 421, "value": 1}, {"source": "Uncategorized", "target": 420, "value": 1}, {"source": "Uncategorized", "target": 419, "value": 1}, {"source": "Depth-first Search", "target": 417, "value": 1}, {"source": "Breadth-first Search", "target": 417, "value": 1}, {"source": "Dynamic Programming", "target": 416, "value": 1}, {"source": "String", "target": 415, "value": 1}, {"source": "Array", "target": 414, "value": 1}, {"source": "Math", "target": 413, "value": 1}, {"source": "Dynamic Programming", "target": 413, "value": 1}, {"source": "Uncategorized", "target": 412, "value": 1}, {"source": "Binary Search", "target": 410, "value": 1}, {"source": "Dynamic Programming", "target": 410, "value": 1}, {"source": "Hash Table", "target": 409, "value": 1}, {"source": "Heap", "target": 407, "value": 1}, {"source": "Breadth-first Search", "target": 407, "value": 1}, {"source": "Greedy", "target": 406, "value": 1}, {"source": "Bit Manipulation", "target": 405, "value": 1}, {"source": "Tree", "target": 404, "value": 1}, {"source": "Dynamic Programming", "target": 403, "value": 1}, {"source": "Stack", "target": 402, "value": 1}, {"source": "Greedy", "target": 402, "value": 1}, {"source": "Backtracking", "target": 401, "value": 1}, {"source": "Bit Manipulation", "target": 401, "value": 1}, {"source": "Math", "target": 400, "value": 1}, {"source": "Union Find", "target": 399, "value": 1}, {"source": "Graph", "target": 399, "value": 1}, {"source": "Reservoir Sampling", "target": 398, "value": 1}, {"source": "Math", "target": 397, "value": 1}, {"source": "Bit Manipulation", "target": 397, "value": 1}, {"source": "Math", "target": 396, "value": 1}, {"source": "Divide and Conquer", "target": 395, "value": 1}, {"source": "Recursion", "target": 395, "value": 1}, {"source": "Sliding Window", "target": 395, "value": 1}, {"source": "Stack", "target": 394, "value": 1}, {"source": "Depth-first Search", "target": 394, "value": 1}, {"source": "Bit Manipulation", "target": 393, "value": 1}, {"source": "Binary Search", "target": 392, "value": 1}, {"source": "Dynamic Programming", "target": 392, "value": 1}, {"source": "Greedy", "target": 392, "value": 1}, {"source": "Line Sweep", "target": 391, "value": 1}, {"source": "Uncategorized", "target": 390, "value": 1}, {"source": "Hash Table", "target": 389, "value": 1}, {"source": "Bit Manipulation", "target": 389, "value": 1}, {"source": "Uncategorized", "target": 388, "value": 1}, {"source": "Hash Table", "target": 387, "value": 1}, {"source": "String", "target": 387, "value": 1}, {"source": "Uncategorized", "target": 386, "value": 1}, {"source": "String", "target": 385, "value": 1}, {"source": "Stack", "target": 385, "value": 1}, {"source": "Uncategorized", "target": 384, "value": 1}, {"source": "String", "target": 383, "value": 1}, {"source": "Reservoir Sampling", "target": 382, "value": 1}, {"source": "Array", "target": 381, "value": 1}, {"source": "Hash Table", "target": 381, "value": 1}, {"source": "Design", "target": 381, "value": 1}, {"source": "Array", "target": 380, "value": 1}, {"source": "Hash Table", "target": 380, "value": 1}, {"source": "Design", "target": 380, "value": 1}, {"source": "Binary Search", "target": 378, "value": 1}, {"source": "Heap", "target": 378, "value": 1}, {"source": "Dynamic Programming", "target": 377, "value": 1}, {"source": "Dynamic Programming", "target": 376, "value": 1}, {"source": "Greedy", "target": 376, "value": 1}, {"source": "Dynamic Programming", "target": 375, "value": 1}, {"source": "Minimax", "target": 375, "value": 1}, {"source": "Binary Search", "target": 374, "value": 1}, {"source": "Heap", "target": 373, "value": 1}, {"source": "Math", "target": 372, "value": 1}, {"source": "Bit Manipulation", "target": 371, "value": 1}, {"source": "Math", "target": 368, "value": 1}, {"source": "Dynamic Programming", "target": 368, "value": 1}, {"source": "Math", "target": 367, "value": 1}, {"source": "Binary Search", "target": 367, "value": 1}, {"source": "Math", "target": 365, "value": 1}, {"source": "Binary Search", "target": 363, "value": 1}, {"source": "Dynamic Programming", "target": 363, "value": 1}, {"source": "Queue", "target": 363, "value": 1}, {"source": "Math", "target": 357, "value": 1}, {"source": "Dynamic Programming", "target": 357, "value": 1}, {"source": "Backtracking", "target": 357, "value": 1}, {"source": "Hash Table", "target": 355, "value": 1}, {"source": "Heap", "target": 355, "value": 1}, {"source": "Design", "target": 355, "value": 1}, {"source": "Binary Search", "target": 354, "value": 1}, {"source": "Dynamic Programming", "target": 354, "value": 1}, {"source": "Binary Search", "target": 352, "value": 1}, {"source": "Ordered Map", "target": 352, "value": 1}, {"source": "Hash Table", "target": 350, "value": 1}, {"source": "Two Pointers", "target": 350, "value": 1}, {"source": "Binary Search", "target": 350, "value": 1}, {"source": "Sort", "target": 350, "value": 1}, {"source": "Hash Table", "target": 349, "value": 1}, {"source": "Two Pointers", "target": 349, "value": 1}, {"source": "Binary Search", "target": 349, "value": 1}, {"source": "Sort", "target": 349, "value": 1}, {"source": "Hash Table", "target": 347, "value": 1}, {"source": "Heap", "target": 347, "value": 1}, {"source": "Two Pointers", "target": 345, "value": 1}, {"source": "String", "target": 345, "value": 1}, {"source": "Two Pointers", "target": 344, "value": 1}, {"source": "String", "target": 344, "value": 1}, {"source": "Math", "target": 343, "value": 1}, {"source": "Dynamic Programming", "target": 343, "value": 1}, {"source": "Bit Manipulation", "target": 342, "value": 1}, {"source": "Stack", "target": 341, "value": 1}, {"source": "Design", "target": 341, "value": 1}, {"source": "Dynamic Programming", "target": 338, "value": 1}, {"source": "Bit Manipulation", "target": 338, "value": 1}, {"source": "Dynamic Programming", "target": 337, "value": 1}, {"source": "Tree", "target": 337, "value": 1}, {"source": "Depth-first Search", "target": 337, "value": 1}, {"source": "Hash Table", "target": 336, "value": 1}, {"source": "String", "target": 336, "value": 1}, {"source": "Trie", "target": 336, "value": 1}, {"source": "Math", "target": 335, "value": 1}, {"source": "Uncategorized", "target": 334, "value": 1}, {"source": "Depth-first Search", "target": 332, "value": 1}, {"source": "Graph", "target": 332, "value": 1}, {"source": "Stack", "target": 331, "value": 1}, {"source": "Greedy", "target": 330, "value": 1}, {"source": "Depth-first Search", "target": 329, "value": 1}, {"source": "Topological Sort", "target": 329, "value": 1}, {"source": "Memoization", "target": 329, "value": 1}, {"source": "Linked List", "target": 328, "value": 1}, {"source": "Binary Search", "target": 327, "value": 1}, {"source": "Divide and Conquer", "target": 327, "value": 1}, {"source": "Sort", "target": 327, "value": 1}, {"source": "Binary Indexed Tree", "target": 327, "value": 1}, {"source": "Segment Tree", "target": 327, "value": 1}, {"source": "Math", "target": 326, "value": 1}, {"source": "Sort", "target": 324, "value": 1}, {"source": "Dynamic Programming", "target": 322, "value": 1}, {"source": "Dynamic Programming", "target": 321, "value": 1}, {"source": "Greedy", "target": 321, "value": 1}, {"source": "Math", "target": 319, "value": 1}, {"source": "Brainteaser", "target": 319, "value": 1}, {"source": "Bit Manipulation", "target": 318, "value": 1}, {"source": "String", "target": 316, "value": 1}, {"source": "Stack", "target": 316, "value": 1}, {"source": "Greedy", "target": 316, "value": 1}, {"source": "Binary Search", "target": 315, "value": 1}, {"source": "Divide and Conquer", "target": 315, "value": 1}, {"source": "Sort", "target": 315, "value": 1}, {"source": "Binary Indexed Tree", "target": 315, "value": 1}, {"source": "Segment Tree", "target": 315, "value": 1}, {"source": "Math", "target": 313, "value": 1}, {"source": "Heap", "target": 313, "value": 1}, {"source": "Divide and Conquer", "target": 312, "value": 1}, {"source": "Dynamic Programming", "target": 312, "value": 1}, {"source": "Breadth-first Search", "target": 310, "value": 1}, {"source": "Graph", "target": 310, "value": 1}, {"source": "Dynamic Programming", "target": 309, "value": 1}, {"source": "Binary Indexed Tree", "target": 307, "value": 1}, {"source": "Segment Tree", "target": 307, "value": 1}, {"source": "Backtracking", "target": 306, "value": 1}, {"source": "Dynamic Programming", "target": 304, "value": 1}, {"source": "Dynamic Programming", "target": 303, "value": 1}, {"source": "Depth-first Search", "target": 301, "value": 1}, {"source": "Breadth-first Search", "target": 301, "value": 1}, {"source": "Binary Search", "target": 300, "value": 1}, {"source": "Dynamic Programming", "target": 300, "value": 1}, {"source": "Hash Table", "target": 299, "value": 1}, {"source": "Tree", "target": 297, "value": 1}, {"source": "Design", "target": 297, "value": 1}, {"source": "Heap", "target": 295, "value": 1}, {"source": "Design", "target": 295, "value": 1}, {"source": "Brainteaser", "target": 292, "value": 1}, {"source": "Minimax", "target": 292, "value": 1}, {"source": "Hash Table", "target": 290, "value": 1}, {"source": "Array", "target": 289, "value": 1}, {"source": "Array", "target": 287, "value": 1}, {"source": "Two Pointers", "target": 287, "value": 1}, {"source": "Binary Search", "target": 287, "value": 1}, {"source": "Design", "target": 284, "value": 1}, {"source": "Array", "target": 283, "value": 1}, {"source": "Two Pointers", "target": 283, "value": 1}, {"source": "Divide and Conquer", "target": 282, "value": 1}, {"source": "Math", "target": 279, "value": 1}, {"source": "Dynamic Programming", "target": 279, "value": 1}, {"source": "Breadth-first Search", "target": 279, "value": 1}, {"source": "Binary Search", "target": 278, "value": 1}, {"source": "Binary Search", "target": 275, "value": 1}, {"source": "Hash Table", "target": 274, "value": 1}, {"source": "Sort", "target": 274, "value": 1}, {"source": "Math", "target": 273, "value": 1}, {"source": "String", "target": 273, "value": 1}, {"source": "Array", "target": 268, "value": 1}, {"source": "Math", "target": 268, "value": 1}, {"source": "Bit Manipulation", "target": 268, "value": 1}, {"source": "Math", "target": 264, "value": 1}, {"source": "Dynamic Programming", "target": 264, "value": 1}, {"source": "Heap", "target": 264, "value": 1}, {"source": "Math", "target": 263, "value": 1}, {"source": "Bit Manipulation", "target": 260, "value": 1}, {"source": "Math", "target": 258, "value": 1}, {"source": "Tree", "target": 257, "value": 1}, {"source": "Depth-first Search", "target": 257, "value": 1}, {"source": "Hash Table", "target": 242, "value": 1}, {"source": "Sort", "target": 242, "value": 1}, {"source": "Divide and Conquer", "target": 241, "value": 1}, {"source": "Binary Search", "target": 240, "value": 1}, {"source": "Divide and Conquer", "target": 240, "value": 1}, {"source": "Heap", "target": 239, "value": 1}, {"source": "Sliding Window", "target": 239, "value": 1}, {"source": "Dequeue", "target": 239, "value": 1}, {"source": "Array", "target": 238, "value": 1}, {"source": "Linked List", "target": 237, "value": 1}, {"source": "Tree", "target": 236, "value": 1}, {"source": "Tree", "target": 235, "value": 1}, {"source": "Linked List", "target": 234, "value": 1}, {"source": "Two Pointers", "target": 234, "value": 1}, {"source": "Math", "target": 233, "value": 1}, {"source": "Stack", "target": 232, "value": 1}, {"source": "Design", "target": 232, "value": 1}, {"source": "Math", "target": 231, "value": 1}, {"source": "Bit Manipulation", "target": 231, "value": 1}, {"source": "Binary Search", "target": 230, "value": 1}, {"source": "Tree", "target": 230, "value": 1}, {"source": "Array", "target": 229, "value": 1}, {"source": "Array", "target": 228, "value": 1}, {"source": "String", "target": 227, "value": 1}, {"source": "Stack", "target": 227, "value": 1}, {"source": "Tree", "target": 226, "value": 1}, {"source": "Stack", "target": 225, "value": 1}, {"source": "Design", "target": 225, "value": 1}, {"source": "Math", "target": 224, "value": 1}, {"source": "Stack", "target": 224, "value": 1}, {"source": "Math", "target": 223, "value": 1}, {"source": "Binary Search", "target": 222, "value": 1}, {"source": "Tree", "target": 222, "value": 1}, {"source": "Dynamic Programming", "target": 221, "value": 1}, {"source": "Sort", "target": 220, "value": 1}, {"source": "Ordered Map", "target": 220, "value": 1}, {"source": "Array", "target": 219, "value": 1}, {"source": "Hash Table", "target": 219, "value": 1}, {"source": "Divide and Conquer", "target": 218, "value": 1}, {"source": "Heap", "target": 218, "value": 1}, {"source": "Binary Indexed Tree", "target": 218, "value": 1}, {"source": "Segment Tree", "target": 218, "value": 1}, {"source": "Line Sweep", "target": 218, "value": 1}, {"source": "Array", "target": 217, "value": 1}, {"source": "Hash Table", "target": 217, "value": 1}, {"source": "Array", "target": 216, "value": 1}, {"source": "Backtracking", "target": 216, "value": 1}, {"source": "Divide and Conquer", "target": 215, "value": 1}, {"source": "Heap", "target": 215, "value": 1}, {"source": "String", "target": 214, "value": 1}, {"source": "Dynamic Programming", "target": 213, "value": 1}, {"source": "Backtracking", "target": 212, "value": 1}, {"source": "Trie", "target": 212, "value": 1}, {"source": "Backtracking", "target": 211, "value": 1}, {"source": "Depth-first Search", "target": 211, "value": 1}, {"source": "Design", "target": 211, "value": 1}, {"source": "Trie", "target": 211, "value": 1}, {"source": "Depth-first Search", "target": 210, "value": 1}, {"source": "Breadth-first Search", "target": 210, "value": 1}, {"source": "Graph", "target": 210, "value": 1}, {"source": "Topological Sort", "target": 210, "value": 1}, {"source": "Array", "target": 209, "value": 1}, {"source": "Two Pointers", "target": 209, "value": 1}, {"source": "Binary Search", "target": 209, "value": 1}, {"source": "Design", "target": 208, "value": 1}, {"source": "Trie", "target": 208, "value": 1}, {"source": "Depth-first Search", "target": 207, "value": 1}, {"source": "Breadth-first Search", "target": 207, "value": 1}, {"source": "Graph", "target": 207, "value": 1}, {"source": "Topological Sort", "target": 207, "value": 1}, {"source": "Linked List", "target": 206, "value": 1}, {"source": "Hash Table", "target": 205, "value": 1}, {"source": "Hash Table", "target": 204, "value": 1}, {"source": "Math", "target": 204, "value": 1}, {"source": "Linked List", "target": 203, "value": 1}, {"source": "Hash Table", "target": 202, "value": 1}, {"source": "Math", "target": 202, "value": 1}, {"source": "Bit Manipulation", "target": 201, "value": 1}, {"source": "Depth-first Search", "target": 200, "value": 1}, {"source": "Breadth-first Search", "target": 200, "value": 1}, {"source": "Union Find", "target": 200, "value": 1}, {"source": "Tree", "target": 199, "value": 1}, {"source": "Depth-first Search", "target": 199, "value": 1}, {"source": "Breadth-first Search", "target": 199, "value": 1}, {"source": "Recursion", "target": 199, "value": 1}, {"source": "Queue", "target": 199, "value": 1}, {"source": "Dynamic Programming", "target": 198, "value": 1}, {"source": "Bit Manipulation", "target": 191, "value": 1}, {"source": "Bit Manipulation", "target": 190, "value": 1}, {"source": "Array", "target": 189, "value": 1}, {"source": "Dynamic Programming", "target": 188, "value": 1}, {"source": "Hash Table", "target": 187, "value": 1}, {"source": "Bit Manipulation", "target": 187, "value": 1}, {"source": "Sort", "target": 179, "value": 1}, {"source": "Binary Search", "target": 174, "value": 1}, {"source": "Dynamic Programming", "target": 174, "value": 1}, {"source": "Stack", "target": 173, "value": 1}, {"source": "Tree", "target": 173, "value": 1}, {"source": "Design", "target": 173, "value": 1}, {"source": "Math", "target": 172, "value": 1}, {"source": "Math", "target": 171, "value": 1}, {"source": "Array", "target": 169, "value": 1}, {"source": "Divide and Conquer", "target": 169, "value": 1}, {"source": "Bit Manipulation", "target": 169, "value": 1}, {"source": "Math", "target": 168, "value": 1}, {"source": "Array", "target": 167, "value": 1}, {"source": "Two Pointers", "target": 167, "value": 1}, {"source": "Binary Search", "target": 167, "value": 1}, {"source": "Hash Table", "target": 166, "value": 1}, {"source": "Math", "target": 166, "value": 1}, {"source": "String", "target": 165, "value": 1}, {"source": "Sort", "target": 164, "value": 1}, {"source": "Array", "target": 162, "value": 1}, {"source": "Binary Search", "target": 162, "value": 1}, {"source": "Linked List", "target": 160, "value": 1}, {"source": "Stack", "target": 155, "value": 1}, {"source": "Design", "target": 155, "value": 1}, {"source": "Array", "target": 154, "value": 1}, {"source": "Binary Search", "target": 154, "value": 1}, {"source": "Array", "target": 153, "value": 1}, {"source": "Binary Search", "target": 153, "value": 1}, {"source": "Array", "target": 152, "value": 1}, {"source": "Dynamic Programming", "target": 152, "value": 1}, {"source": "String", "target": 151, "value": 1}, {"source": "Stack", "target": 150, "value": 1}, {"source": "Hash Table", "target": 149, "value": 1}, {"source": "Math", "target": 149, "value": 1}, {"source": "Linked List", "target": 148, "value": 1}, {"source": "Sort", "target": 148, "value": 1}, {"source": "Linked List", "target": 147, "value": 1}, {"source": "Sort", "target": 147, "value": 1}, {"source": "Design", "target": 146, "value": 1}, {"source": "Stack", "target": 145, "value": 1}, {"source": "Tree", "target": 145, "value": 1}, {"source": "Stack", "target": 144, "value": 1}, {"source": "Tree", "target": 144, "value": 1}, {"source": "Linked List", "target": 143, "value": 1}, {"source": "Linked List", "target": 142, "value": 1}, {"source": "Two Pointers", "target": 142, "value": 1}, {"source": "Linked List", "target": 141, "value": 1}, {"source": "Two Pointers", "target": 141, "value": 1}, {"source": "Dynamic Programming", "target": 140, "value": 1}, {"source": "Backtracking", "target": 140, "value": 1}, {"source": "Dynamic Programming", "target": 139, "value": 1}, {"source": "Hash Table", "target": 138, "value": 1}, {"source": "Linked List", "target": 138, "value": 1}, {"source": "Bit Manipulation", "target": 137, "value": 1}, {"source": "Hash Table", "target": 136, "value": 1}, {"source": "Bit Manipulation", "target": 136, "value": 1}, {"source": "Greedy", "target": 135, "value": 1}, {"source": "Greedy", "target": 134, "value": 1}, {"source": "Depth-first Search", "target": 133, "value": 1}, {"source": "Breadth-first Search", "target": 133, "value": 1}, {"source": "Graph", "target": 133, "value": 1}, {"source": "Dynamic Programming", "target": 132, "value": 1}, {"source": "Dynamic Programming", "target": 131, "value": 1}, {"source": "Backtracking", "target": 131, "value": 1}, {"source": "Depth-first Search", "target": 131, "value": 1}, {"source": "Depth-first Search", "target": 130, "value": 1}, {"source": "Breadth-first Search", "target": 130, "value": 1}, {"source": "Union Find", "target": 130, "value": 1}, {"source": "Tree", "target": 129, "value": 1}, {"source": "Depth-first Search", "target": 129, "value": 1}, {"source": "Array", "target": 128, "value": 1}, {"source": "Union Find", "target": 128, "value": 1}, {"source": "Breadth-first Search", "target": 127, "value": 1}, {"source": "Array", "target": 126, "value": 1}, {"source": "String", "target": 126, "value": 1}, {"source": "Backtracking", "target": 126, "value": 1}, {"source": "Breadth-first Search", "target": 126, "value": 1}, {"source": "Two Pointers", "target": 125, "value": 1}, {"source": "String", "target": 125, "value": 1}, {"source": "Tree", "target": 124, "value": 1}, {"source": "Depth-first Search", "target": 124, "value": 1}, {"source": "Recursion", "target": 124, "value": 1}, {"source": "Array", "target": 123, "value": 1}, {"source": "Dynamic Programming", "target": 123, "value": 1}, {"source": "Array", "target": 122, "value": 1}, {"source": "Greedy", "target": 122, "value": 1}, {"source": "Array", "target": 121, "value": 1}, {"source": "Dynamic Programming", "target": 121, "value": 1}, {"source": "Array", "target": 120, "value": 1}, {"source": "Dynamic Programming", "target": 120, "value": 1}, {"source": "Array", "target": 119, "value": 1}, {"source": "Array", "target": 118, "value": 1}, {"source": "Tree", "target": 117, "value": 1}, {"source": "Depth-first Search", "target": 117, "value": 1}, {"source": "Tree", "target": 116, "value": 1}, {"source": "Depth-first Search", "target": 116, "value": 1}, {"source": "Breadth-first Search", "target": 116, "value": 1}, {"source": "String", "target": 115, "value": 1}, {"source": "Dynamic Programming", "target": 115, "value": 1}, {"source": "Tree", "target": 114, "value": 1}, {"source": "Depth-first Search", "target": 114, "value": 1}, {"source": "Tree", "target": 113, "value": 1}, {"source": "Depth-first Search", "target": 113, "value": 1}, {"source": "Tree", "target": 112, "value": 1}, {"source": "Depth-first Search", "target": 112, "value": 1}, {"source": "Tree", "target": 111, "value": 1}, {"source": "Depth-first Search", "target": 111, "value": 1}, {"source": "Breadth-first Search", "target": 111, "value": 1}, {"source": "Tree", "target": 110, "value": 1}, {"source": "Depth-first Search", "target": 110, "value": 1}, {"source": "Recursion", "target": 110, "value": 1}, {"source": "Linked List", "target": 109, "value": 1}, {"source": "Depth-first Search", "target": 109, "value": 1}, {"source": "Tree", "target": 108, "value": 1}, {"source": "Depth-first Search", "target": 108, "value": 1}, {"source": "Tree", "target": 107, "value": 1}, {"source": "Breadth-first Search", "target": 107, "value": 1}, {"source": "Array", "target": 106, "value": 1}, {"source": "Tree", "target": 106, "value": 1}, {"source": "Depth-first Search", "target": 106, "value": 1}, {"source": "Array", "target": 105, "value": 1}, {"source": "Tree", "target": 105, "value": 1}, {"source": "Depth-first Search", "target": 105, "value": 1}, {"source": "Tree", "target": 104, "value": 1}, {"source": "Depth-first Search", "target": 104, "value": 1}, {"source": "Recursion", "target": 104, "value": 1}, {"source": "Stack", "target": 103, "value": 1}, {"source": "Tree", "target": 103, "value": 1}, {"source": "Breadth-first Search", "target": 103, "value": 1}, {"source": "Tree", "target": 102, "value": 1}, {"source": "Breadth-first Search", "target": 102, "value": 1}, {"source": "Tree", "target": 101, "value": 1}, {"source": "Depth-first Search", "target": 101, "value": 1}, {"source": "Breadth-first Search", "target": 101, "value": 1}, {"source": "Tree", "target": 100, "value": 1}, {"source": "Depth-first Search", "target": 100, "value": 1}, {"source": "Tree", "target": 99, "value": 1}, {"source": "Depth-first Search", "target": 99, "value": 1}, {"source": "Tree", "target": 98, "value": 1}, {"source": "Depth-first Search", "target": 98, "value": 1}, {"source": "Recursion", "target": 98, "value": 1}, {"source": "String", "target": 97, "value": 1}, {"source": "Dynamic Programming", "target": 97, "value": 1}, {"source": "Dynamic Programming", "target": 96, "value": 1}, {"source": "Tree", "target": 96, "value": 1}, {"source": "Dynamic Programming", "target": 95, "value": 1}, {"source": "Tree", "target": 95, "value": 1}, {"source": "Hash Table", "target": 94, "value": 1}, {"source": "Stack", "target": 94, "value": 1}, {"source": "Tree", "target": 94, "value": 1}, {"source": "String", "target": 93, "value": 1}, {"source": "Backtracking", "target": 93, "value": 1}, {"source": "Linked List", "target": 92, "value": 1}, {"source": "String", "target": 91, "value": 1}, {"source": "Dynamic Programming", "target": 91, "value": 1}, {"source": "Array", "target": 90, "value": 1}, {"source": "Backtracking", "target": 90, "value": 1}, {"source": "Backtracking", "target": 89, "value": 1}, {"source": "Array", "target": 88, "value": 1}, {"source": "Two Pointers", "target": 88, "value": 1}, {"source": "String", "target": 87, "value": 1}, {"source": "Dynamic Programming", "target": 87, "value": 1}, {"source": "Linked List", "target": 86, "value": 1}, {"source": "Two Pointers", "target": 86, "value": 1}, {"source": "Array", "target": 85, "value": 1}, {"source": "Hash Table", "target": 85, "value": 1}, {"source": "Dynamic Programming", "target": 85, "value": 1}, {"source": "Stack", "target": 85, "value": 1}, {"source": "Array", "target": 84, "value": 1}, {"source": "Stack", "target": 84, "value": 1}, {"source": "Linked List", "target": 83, "value": 1}, {"source": "Linked List", "target": 82, "value": 1}, {"source": "Array", "target": 81, "value": 1}, {"source": "Binary Search", "target": 81, "value": 1}, {"source": "Array", "target": 80, "value": 1}, {"source": "Two Pointers", "target": 80, "value": 1}, {"source": "Array", "target": 79, "value": 1}, {"source": "Backtracking", "target": 79, "value": 1}, {"source": "Array", "target": 78, "value": 1}, {"source": "Backtracking", "target": 78, "value": 1}, {"source": "Bit Manipulation", "target": 78, "value": 1}, {"source": "Backtracking", "target": 77, "value": 1}, {"source": "Hash Table", "target": 76, "value": 1}, {"source": "Two Pointers", "target": 76, "value": 1}, {"source": "String", "target": 76, "value": 1}, {"source": "Sliding Window", "target": 76, "value": 1}, {"source": "Array", "target": 75, "value": 1}, {"source": "Two Pointers", "target": 75, "value": 1}, {"source": "Sort", "target": 75, "value": 1}, {"source": "Array", "target": 74, "value": 1}, {"source": "Binary Search", "target": 74, "value": 1}, {"source": "Array", "target": 73, "value": 1}, {"source": "String", "target": 72, "value": 1}, {"source": "Dynamic Programming", "target": 72, "value": 1}, {"source": "String", "target": 71, "value": 1}, {"source": "Stack", "target": 71, "value": 1}, {"source": "Dynamic Programming", "target": 70, "value": 1}, {"source": "Math", "target": 69, "value": 1}, {"source": "Binary Search", "target": 69, "value": 1}, {"source": "String", "target": 68, "value": 1}, {"source": "Math", "target": 67, "value": 1}, {"source": "String", "target": 67, "value": 1}, {"source": "Array", "target": 66, "value": 1}, {"source": "Math", "target": 65, "value": 1}, {"source": "String", "target": 65, "value": 1}, {"source": "Array", "target": 64, "value": 1}, {"source": "Dynamic Programming", "target": 64, "value": 1}, {"source": "Array", "target": 63, "value": 1}, {"source": "Dynamic Programming", "target": 63, "value": 1}, {"source": "Array", "target": 62, "value": 1}, {"source": "Dynamic Programming", "target": 62, "value": 1}, {"source": "Linked List", "target": 61, "value": 1}, {"source": "Two Pointers", "target": 61, "value": 1}, {"source": "Math", "target": 60, "value": 1}, {"source": "Backtracking", "target": 60, "value": 1}, {"source": "Array", "target": 59, "value": 1}, {"source": "String", "target": 58, "value": 1}, {"source": "Array", "target": 57, "value": 1}, {"source": "Sort", "target": 57, "value": 1}, {"source": "Array", "target": 56, "value": 1}, {"source": "Sort", "target": 56, "value": 1}, {"source": "Array", "target": 55, "value": 1}, {"source": "Greedy", "target": 55, "value": 1}, {"source": "Array", "target": 54, "value": 1}, {"source": "Array", "target": 53, "value": 1}, {"source": "Divide and Conquer", "target": 53, "value": 1}, {"source": "Dynamic Programming", "target": 53, "value": 1}, {"source": "Backtracking", "target": 52, "value": 1}, {"source": "Backtracking", "target": 51, "value": 1}, {"source": "Math", "target": 50, "value": 1}, {"source": "Binary Search", "target": 50, "value": 1}, {"source": "Hash Table", "target": 49, "value": 1}, {"source": "String", "target": 49, "value": 1}, {"source": "Array", "target": 48, "value": 1}, {"source": "Backtracking", "target": 47, "value": 1}, {"source": "Backtracking", "target": 46, "value": 1}, {"source": "Array", "target": 45, "value": 1}, {"source": "Greedy", "target": 45, "value": 1}, {"source": "String", "target": 44, "value": 1}, {"source": "Dynamic Programming", "target": 44, "value": 1}, {"source": "Backtracking", "target": 44, "value": 1}, {"source": "Greedy", "target": 44, "value": 1}, {"source": "Math", "target": 43, "value": 1}, {"source": "String", "target": 43, "value": 1}, {"source": "Array", "target": 42, "value": 1}, {"source": "Two Pointers", "target": 42, "value": 1}, {"source": "Dynamic Programming", "target": 42, "value": 1}, {"source": "Stack", "target": 42, "value": 1}, {"source": "Array", "target": 41, "value": 1}, {"source": "Array", "target": 40, "value": 1}, {"source": "Backtracking", "target": 40, "value": 1}, {"source": "Array", "target": 39, "value": 1}, {"source": "Backtracking", "target": 39, "value": 1}, {"source": "String", "target": 38, "value": 1}, {"source": "Hash Table", "target": 37, "value": 1}, {"source": "Backtracking", "target": 37, "value": 1}, {"source": "Hash Table", "target": 36, "value": 1}, {"source": "Array", "target": 35, "value": 1}, {"source": "Binary Search", "target": 35, "value": 1}, {"source": "Array", "target": 34, "value": 1}, {"source": "Binary Search", "target": 34, "value": 1}, {"source": "Array", "target": 33, "value": 1}, {"source": "Binary Search", "target": 33, "value": 1}, {"source": "String", "target": 32, "value": 1}, {"source": "Dynamic Programming", "target": 32, "value": 1}, {"source": "Array", "target": 31, "value": 1}, {"source": "Hash Table", "target": 30, "value": 1}, {"source": "Two Pointers", "target": 30, "value": 1}, {"source": "String", "target": 30, "value": 1}, {"source": "Math", "target": 29, "value": 1}, {"source": "Binary Search", "target": 29, "value": 1}, {"source": "Two Pointers", "target": 28, "value": 1}, {"source": "String", "target": 28, "value": 1}, {"source": "Array", "target": 27, "value": 1}, {"source": "Two Pointers", "target": 27, "value": 1}, {"source": "Array", "target": 26, "value": 1}, {"source": "Two Pointers", "target": 26, "value": 1}, {"source": "Linked List", "target": 25, "value": 1}, {"source": "Linked List", "target": 24, "value": 1}, {"source": "Recursion", "target": 24, "value": 1}, {"source": "Linked List", "target": 23, "value": 1}, {"source": "Divide and Conquer", "target": 23, "value": 1}, {"source": "Heap", "target": 23, "value": 1}, {"source": "String", "target": 22, "value": 1}, {"source": "Backtracking", "target": 22, "value": 1}, {"source": "Linked List", "target": 21, "value": 1}, {"source": "Recursion", "target": 21, "value": 1}, {"source": "String", "target": 20, "value": 1}, {"source": "Stack", "target": 20, "value": 1}, {"source": "Linked List", "target": 19, "value": 1}, {"source": "Two Pointers", "target": 19, "value": 1}, {"source": "Array", "target": 18, "value": 1}, {"source": "Hash Table", "target": 18, "value": 1}, {"source": "Two Pointers", "target": 18, "value": 1}, {"source": "String", "target": 17, "value": 1}, {"source": "Backtracking", "target": 17, "value": 1}, {"source": "Depth-first Search", "target": 17, "value": 1}, {"source": "Recursion", "target": 17, "value": 1}, {"source": "Array", "target": 16, "value": 1}, {"source": "Two Pointers", "target": 16, "value": 1}, {"source": "Array", "target": 15, "value": 1}, {"source": "Two Pointers", "target": 15, "value": 1}, {"source": "String", "target": 14, "value": 1}, {"source": "Math", "target": 13, "value": 1}, {"source": "String", "target": 13, "value": 1}, {"source": "Math", "target": 12, "value": 1}, {"source": "String", "target": 12, "value": 1}, {"source": "Array", "target": 11, "value": 1}, {"source": "Two Pointers", "target": 11, "value": 1}, {"source": "String", "target": 10, "value": 1}, {"source": "Dynamic Programming", "target": 10, "value": 1}, {"source": "Backtracking", "target": 10, "value": 1}, {"source": "Math", "target": 9, "value": 1}, {"source": "Math", "target": 8, "value": 1}, {"source": "String", "target": 8, "value": 1}, {"source": "Math", "target": 7, "value": 1}, {"source": "String", "target": 6, "value": 1}, {"source": "String", "target": 5, "value": 1}, {"source": "Dynamic Programming", "target": 5, "value": 1}, {"source": "Array", "target": 4, "value": 1}, {"source": "Binary Search", "target": 4, "value": 1}, {"source": "Divide and Conquer", "target": 4, "value": 1}, {"source": "Hash Table", "target": 3, "value": 1}, {"source": "Two Pointers", "target": 3, "value": 1}, {"source": "String", "target": 3, "value": 1}, {"source": "Sliding Window", "target": 3, "value": 1}, {"source": "Linked List", "target": 2, "value": 1}, {"source": "Math", "target": 2, "value": 1}, {"source": "Recursion", "target": 2, "value": 1}, {"source": "Array", "target": 1, "value": 1}, {"source": "Hash Table", "target": 1, "value": 1}, {"source": "Topics", "target": "Divide and Conquer"}, {"source": "Topics", "target": "Sort"}, {"source": "Topics", "target": "Breadth-first Search"}, {"source": "Topics", "target": "Design"}, {"source": "Topics", "target": "Reservoir Sampling"}, {"source": "Topics", "target": "Backtracking"}, {"source": "Topics", "target": "String"}, {"source": "Topics", "target": "Minimax"}, {"source": "Topics", "target": "Binary Indexed Tree"}, {"source": "Topics", "target": "Random"}, {"source": "Topics", "target": "Union Find"}, {"source": "Topics", "target": "Uncategorized"}, {"source": "Topics", "target": "Suffix Array"}, {"source": "Topics", "target": "Rejection Sampling"}, {"source": "Topics", "target": "Geometry"}, {"source": "Topics", "target": "Recursion"}, {"source": "Topics", "target": "Stack"}, {"source": "Topics", "target": "Hash Table"}, {"source": "Topics", "target": "Depth-first Search"}, {"source": "Topics", "target": "Array"}, {"source": "Topics", "target": "Dynamic Programming"}, {"source": "Topics", "target": "Bit Manipulation"}, {"source": "Topics", "target": "Rolling Hash"}, {"source": "Topics", "target": "Brainteaser"}, {"source": "Topics", "target": "Heap"}, {"source": "Topics", "target": "Line Sweep"}, {"source": "Topics", "target": "Meet in the Middle"}, {"source": "Topics", "target": "Trie"}, {"source": "Topics", "target": "Binary Search Tree"}, {"source": "Topics", "target": "Greedy"}, {"source": "Topics", "target": "Topological Sort"}, {"source": "Topics", "target": "Tree"}, {"source": "Topics", "target": "Math"}, {"source": "Topics", "target": "Two Pointers"}, {"source": "Topics", "target": "Ordered Map"}, {"source": "Topics", "target": "Segment Tree"}, {"source": "Topics", "target": "Graph"}, {"source": "Topics", "target": "Memoization"}, {"source": "Topics", "target": "Queue"}, {"source": "Topics", "target": "Linked List"}, {"source": "Topics", "target": "Binary Search"}, {"source": "Topics", "target": "Dequeue"}, {"source": "Topics", "target": "Sliding Window"}]}