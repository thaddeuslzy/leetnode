{"nodes": [{"id": 1787, "name": "Make the XOR of All Segments Equal to Zero", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/make-the-xor-of-all-segments-equal-to-zero", "submissions": 4592, "accepted_subsmissions": 1607, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "109", "downvotes": "5"}, {"id": 1786, "name": "Number of Restricted Paths From First to Last Node", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/number-of-restricted-paths-from-first-to-last-node", "submissions": 13256, "accepted_subsmissions": 4749, "group": 2, "topics": ["Dynamic Programming", "Graph"], "upvotes": "201", "downvotes": "37"}, {"id": 1785, "name": "Minimum Elements to Add to Form a Given Sum", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/minimum-elements-to-add-to-form-a-given-sum", "submissions": 21041, "accepted_subsmissions": 8136, "group": 2, "topics": ["Greedy"], "upvotes": "68", "downvotes": "67"}, {"id": 1784, "name": "Check if Binary String Has at Most One Segment of Ones", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/check-if-binary-string-has-at-most-one-segment-of-ones", "submissions": 25617, "accepted_subsmissions": 10742, "group": 2, "topics": ["Greedy"], "upvotes": "55", "downvotes": "148"}, {"id": 1776, "name": "Car Fleet II", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/car-fleet-ii", "submissions": 6277, "accepted_subsmissions": 2757, "group": 2, "topics": ["Math"], "upvotes": "138", "downvotes": "3"}, {"id": 1775, "name": "Equal Sum Arrays With Minimum Number of Operations", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/equal-sum-arrays-with-minimum-number-of-operations", "submissions": 12672, "accepted_subsmissions": 6411, "group": 2, "topics": ["Greedy"], "upvotes": "190", "downvotes": "4"}, {"id": 1774, "name": "Closest Dessert Cost", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/closest-dessert-cost", "submissions": 16247, "accepted_subsmissions": 9700, "group": 2, "topics": ["Greedy"], "upvotes": "163", "downvotes": "24"}, {"id": 1773, "name": "Count Items Matching a Rule", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/count-items-matching-a-rule", "submissions": 21972, "accepted_subsmissions": 18957, "group": 2, "topics": ["Array", "String"], "upvotes": "117", "downvotes": "23"}, {"id": 1771, "name": "Maximize Palindrome Length From Subsequences", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/maximize-palindrome-length-from-subsequences", "submissions": 12220, "accepted_subsmissions": 4156, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "161", "downvotes": "5"}, {"id": 1770, "name": "Maximum Score from Performing Multiplication Operations", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/maximum-score-from-performing-multiplication-operations", "submissions": 26735, "accepted_subsmissions": 7732, "group": 2, "topics": ["Dynamic Programming"], "upvotes": "233", "downvotes": "77"}, {"id": 1769, "name": "Minimum Number of Operations to Move All Balls to Each Box", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/minimum-number-of-operations-to-move-all-balls-to-each-box", "submissions": 20510, "accepted_subsmissions": 17962, "group": 2, "topics": ["Array", "Greedy"], "upvotes": "221", "downvotes": "14"}, {"id": 1768, "name": "Merge Strings Alternately", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/merge-strings-alternately", "submissions": 21660, "accepted_subsmissions": 16734, "group": 2, "topics": ["String"], "upvotes": "121", "downvotes": "2"}, {"id": 1782, "name": "Count Pairs Of Nodes", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/count-pairs-of-nodes", "submissions": 5539, "accepted_subsmissions": 1718, "group": 2, "topics": ["Graph"], "upvotes": "87", "downvotes": "52"}, {"id": 1781, "name": "Sum of Beauty of All Substrings", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/sum-of-beauty-of-all-substrings", "submissions": 10422, "accepted_subsmissions": 5887, "group": 2, "topics": ["Hash Table", "String"], "upvotes": "91", "downvotes": "47"}, {"id": 1780, "name": "Check if Number is a Sum of Powers of Three", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/check-if-number-is-a-sum-of-powers-of-three", "submissions": 10037, "accepted_subsmissions": 6344, "group": 2, "topics": ["Math", "Backtracking", "Recursion"], "upvotes": "122", "downvotes": "5"}, {"id": 1779, "name": "Find Nearest Point That Has the Same X or Y Coordinate", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/find-nearest-point-that-has-the-same-x-or-y-coordinate", "submissions": 11821, "accepted_subsmissions": 8036, "group": 2, "topics": ["Array"], "upvotes": "47", "downvotes": "6"}, {"id": 1761, "name": "Minimum Degree of a Connected Trio in a Graph", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/minimum-degree-of-a-connected-trio-in-a-graph", "submissions": 14623, "accepted_subsmissions": 5449, "group": 2, "topics": ["Graph"], "upvotes": "62", "downvotes": "111"}, {"id": 1760, "name": "Minimum Limit of Balls in a Bag", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/minimum-limit-of-balls-in-a-bag", "submissions": 12857, "accepted_subsmissions": 6707, "group": 2, "topics": ["Binary Search", "Heap"], "upvotes": "327", "downvotes": "17"}, {"id": 1759, "name": "Count Number of Homogenous Substrings", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/count-number-of-homogenous-substrings", "submissions": 21963, "accepted_subsmissions": 9202, "group": 2, "topics": ["String", "Greedy"], "upvotes": "127", "downvotes": "17"}, {"id": 1758, "name": "Minimum Changes To Make Alternating Binary String", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/minimum-changes-to-make-alternating-binary-string", "submissions": 20745, "accepted_subsmissions": 12193, "group": 2, "topics": ["Array", "Greedy"], "upvotes": "149", "downvotes": "3"}, {"id": 1755, "name": "Closest Subsequence Sum", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/closest-subsequence-sum", "submissions": 11730, "accepted_subsmissions": 4176, "group": 2, "topics": ["Divide and Conquer", "Meet in the Middle"], "upvotes": "171", "downvotes": "40"}, {"id": 1754, "name": "Largest Merge Of Two Strings", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/largest-merge-of-two-strings", "submissions": 20318, "accepted_subsmissions": 8135, "group": 2, "topics": ["Greedy", "Suffix Array"], "upvotes": "157", "downvotes": "34"}, {"id": 1753, "name": "Maximum Score From Removing Stones", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/maximum-score-from-removing-stones", "submissions": 15764, "accepted_subsmissions": 9648, "group": 2, "topics": ["Math", "Heap"], "upvotes": "136", "downvotes": "17"}, {"id": 1752, "name": "Check if Array Is Sorted and Rotated", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/check-if-array-is-sorted-and-rotated", "submissions": 28604, "accepted_subsmissions": 18027, "group": 2, "topics": ["Array"], "upvotes": "145", "downvotes": "26"}, {"id": 1765, "name": "Map of Highest Peak", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/map-of-highest-peak", "submissions": 9536, "accepted_subsmissions": 5208, "group": 2, "topics": ["Breadth-first Search", "Graph"], "upvotes": "147", "downvotes": "11"}, {"id": 1766, "name": "Tree of Coprimes", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/tree-of-coprimes", "submissions": 6822, "accepted_subsmissions": 2503, "group": 2, "topics": ["Math", "Tree", "Depth-first Search", "Breadth-first Search"], "upvotes": "105", "downvotes": "8"}, {"id": 1764, "name": "Form Array by Concatenating Subarrays of Another Array", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/form-array-by-concatenating-subarrays-of-another-array", "submissions": 11231, "accepted_subsmissions": 6219, "group": 2, "topics": ["Array", "Greedy"], "upvotes": "91", "downvotes": "14"}, {"id": 1763, "name": "Longest Nice Substring", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/longest-nice-substring", "submissions": 12236, "accepted_subsmissions": 7548, "group": 2, "topics": ["String"], "upvotes": "110", "downvotes": "113"}, {"id": 1744, "name": "Can You Eat Your Favorite Candy on Your Favorite Day?", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/can-you-eat-your-favorite-candy-on-your-favorite-day", "submissions": 18503, "accepted_subsmissions": 5624, "group": 2, "topics": ["Math"], "upvotes": "53", "downvotes": "178"}, {"id": 1745, "name": "Palindrome Partitioning IV", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/palindrome-partitioning-iv", "submissions": 13957, "accepted_subsmissions": 6867, "group": 2, "topics": ["String", "Dynamic Programming"], "upvotes": "188", "downvotes": "3"}, {"id": 1743, "name": "Restore the Array From Adjacent Pairs", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/restore-the-array-from-adjacent-pairs", "submissions": 14638, "accepted_subsmissions": 9232, "group": 2, "topics": ["Greedy"], "upvotes": "211", "downvotes": "4"}, {"id": 1739, "name": "Building Boxes", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/building-boxes", "submissions": 6418, "accepted_subsmissions": 3184, "group": 2, "topics": ["Math", "Binary Search"], "upvotes": "124", "downvotes": "17"}, {"id": 1738, "name": "Find Kth Largest XOR Coordinate Value", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/find-kth-largest-xor-coordinate-value", "submissions": 12145, "accepted_subsmissions": 7540, "group": 2, "topics": ["Array"], "upvotes": "108", "downvotes": "19"}, {"id": 1737, "name": "Change Minimum Characters to Satisfy One of Three Conditions", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/change-minimum-characters-to-satisfy-one-of-three-conditions", "submissions": 19144, "accepted_subsmissions": 5654, "group": 2, "topics": ["String", "Greedy"], "upvotes": "133", "downvotes": "181"}, {"id": 1736, "name": "Latest Time by Replacing Hidden Digits", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/latest-time-by-replacing-hidden-digits", "submissions": 30412, "accepted_subsmissions": 12490, "group": 2, "topics": ["String", "Greedy"], "upvotes": "84", "downvotes": "49"}, {"id": 1751, "name": "Maximum Number of Events That Can Be Attended II", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/maximum-number-of-events-that-can-be-attended-ii", "submissions": 9034, "accepted_subsmissions": 4293, "group": 2, "topics": ["Binary Search", "Dynamic Programming"], "upvotes": "163", "downvotes": "4"}, {"id": 1750, "name": "Minimum Length of String After Deleting Similar Ends", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/minimum-length-of-string-after-deleting-similar-ends", "submissions": 16277, "accepted_subsmissions": 6923, "group": 2, "topics": ["Two Pointers"], "upvotes": "103", "downvotes": "9"}, {"id": 1749, "name": "Maximum Absolute Sum of Any Subarray", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/maximum-absolute-sum-of-any-subarray", "submissions": 14674, "accepted_subsmissions": 7585, "group": 2, "topics": ["Greedy"], "upvotes": "205", "downvotes": "5"}, {"id": 1748, "name": "Sum of Unique Elements", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/sum-of-unique-elements", "submissions": 25207, "accepted_subsmissions": 18983, "group": 2, "topics": ["Array", "Hash Table"], "upvotes": "157", "downvotes": "5"}, {"id": 1727, "name": "Largest Submatrix With Rearrangements", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/largest-submatrix-with-rearrangements", "submissions": 11733, "accepted_subsmissions": 6856, "group": 2, "topics": ["Greedy", "Sort"], "upvotes": "327", "downvotes": "9"}, {"id": 1742, "name": "Maximum Number of Balls in a Box", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/maximum-number-of-balls-in-a-box", "submissions": 22110, "accepted_subsmissions": 16472, "group": 2, "topics": ["Array"], "upvotes": "124", "downvotes": "15"}, {"id": 1725, "name": "Number Of Rectangles That Can Form The Largest Square", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/number-of-rectangles-that-can-form-the-largest-square", "submissions": 21838, "accepted_subsmissions": 16997, "group": 2, "topics": ["Greedy"], "upvotes": "127", "downvotes": "12"}, {"id": 1722, "name": "Minimize Hamming Distance After Swap Operations", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/minimize-hamming-distance-after-swap-operations", "submissions": 15732, "accepted_subsmissions": 8566, "group": 2, "topics": ["Greedy", "Depth-first Search", "Union Find"], "upvotes": "305", "downvotes": "11"}, {"id": 1720, "name": "Decode XORed Array", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/decode-xored-array", "submissions": 24129, "accepted_subsmissions": 20568, "group": 2, "topics": ["Bit Manipulation"], "upvotes": "175", "downvotes": "30"}, {"id": 1735, "name": "Count Ways to Make Array With Product", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/count-ways-to-make-array-with-product", "submissions": 4192, "accepted_subsmissions": 2022, "group": 2, "topics": ["Math"], "upvotes": "85", "downvotes": "18"}, {"id": 1734, "name": "Decode XORed Permutation", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/decode-xored-permutation", "submissions": 9193, "accepted_subsmissions": 4823, "group": 2, "topics": ["Bit Manipulation"], "upvotes": "246", "downvotes": "8"}, {"id": 1733, "name": "Minimum Number of People to Teach", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/minimum-number-of-people-to-teach", "submissions": 10033, "accepted_subsmissions": 3739, "group": 2, "topics": ["Array", "Greedy"], "upvotes": "78", "downvotes": "223"}, {"id": 1732, "name": "Find the Highest Altitude", "difficulty": 1, "is_paid": false, "url": "https://leetcode.com/problems/find-the-highest-altitude", "submissions": 27530, "accepted_subsmissions": 22188, "group": 2, "topics": ["Array"], "upvotes": "183", "downvotes": "23"}, {"id": 1713, "name": "Minimum Operations to Make a Subsequence", "difficulty": 3, "is_paid": false, "url": "https://leetcode.com/problems/minimum-operations-to-make-a-subsequence", "submissions": 8184, "accepted_subsmissions": 3727, "group": 2, "topics": ["Greedy"], "upvotes": "212", "downvotes": "3"}, {"id": 1712, "name": "Ways to Split Array Into Three Subarrays", "difficulty": 2, "is_paid": false, "url": "https://leetcode.com/problems/ways-to-split-array-into-three-subarrays", "submissions": 25423, "accepted_subsmissions": 7484, "group": 2, "topics": ["Two Pointers", "Binary Search"], "upvotes": "321", "downvotes": "39"}, {"id": "Topics", "name": "Topics", "group": 0}, {"id": "Two Pointers", "name": "Two Pointers", "group": 1}, {"id": "Hash Table", "name": "Hash Table", "group": 1}, {"id": "String", "name": "String", "group": 1}, {"id": "Heap", "name": "Heap", "group": 1}, {"id": "Uncategorized", "name": "Uncategorized", "group": 1}, {"id": "Depth-first Search", "name": "Depth-first Search", "group": 1}, {"id": "Greedy", "name": "Greedy", "group": 1}, {"id": "Graph", "name": "Graph", "group": 1}, {"id": "Breadth-first Search", "name": "Breadth-first Search", "group": 1}, {"id": "Recursion", "name": "Recursion", "group": 1}, {"id": "Suffix Array", "name": "Suffix Array", "group": 1}, {"id": "Union Find", "name": "Union Find", "group": 1}, {"id": "Backtracking", "name": "Backtracking", "group": 1}, {"id": "Sort", "name": "Sort", "group": 1}, {"id": "Meet in the Middle", "name": "Meet in the Middle", "group": 1}, {"id": "Divide and Conquer", "name": "Divide and Conquer", "group": 1}, {"id": "Tree", "name": "Tree", "group": 1}, {"id": "Dynamic Programming", "name": "Dynamic Programming", "group": 1}, {"id": "Bit Manipulation", "name": "Bit Manipulation", "group": 1}, {"id": "Array", "name": "Array", "group": 1}, {"id": "Binary Search", "name": "Binary Search", "group": 1}, {"id": "Math", "name": "Math", "group": 1}], "links": [{"source": "Dynamic Programming", "target": 1787, "value": 1}, {"source": "Dynamic Programming", "target": 1786, "value": 1}, {"source": "Graph", "target": 1786, "value": 1}, {"source": "Greedy", "target": 1785, "value": 1}, {"source": "Greedy", "target": 1784, "value": 1}, {"source": "Math", "target": 1776, "value": 1}, {"source": "Greedy", "target": 1775, "value": 1}, {"source": "Greedy", "target": 1774, "value": 1}, {"source": "Array", "target": 1773, "value": 1}, {"source": "String", "target": 1773, "value": 1}, {"source": "Dynamic Programming", "target": 1771, "value": 1}, {"source": "Dynamic Programming", "target": 1770, "value": 1}, {"source": "Array", "target": 1769, "value": 1}, {"source": "Greedy", "target": 1769, "value": 1}, {"source": "String", "target": 1768, "value": 1}, {"source": "Graph", "target": 1782, "value": 1}, {"source": "Hash Table", "target": 1781, "value": 1}, {"source": "String", "target": 1781, "value": 1}, {"source": "Math", "target": 1780, "value": 1}, {"source": "Backtracking", "target": 1780, "value": 1}, {"source": "Recursion", "target": 1780, "value": 1}, {"source": "Array", "target": 1779, "value": 1}, {"source": "Graph", "target": 1761, "value": 1}, {"source": "Binary Search", "target": 1760, "value": 1}, {"source": "Heap", "target": 1760, "value": 1}, {"source": "String", "target": 1759, "value": 1}, {"source": "Greedy", "target": 1759, "value": 1}, {"source": "Array", "target": 1758, "value": 1}, {"source": "Greedy", "target": 1758, "value": 1}, {"source": "Divide and Conquer", "target": 1755, "value": 1}, {"source": "Meet in the Middle", "target": 1755, "value": 1}, {"source": "Greedy", "target": 1754, "value": 1}, {"source": "Suffix Array", "target": 1754, "value": 1}, {"source": "Math", "target": 1753, "value": 1}, {"source": "Heap", "target": 1753, "value": 1}, {"source": "Array", "target": 1752, "value": 1}, {"source": "Breadth-first Search", "target": 1765, "value": 1}, {"source": "Graph", "target": 1765, "value": 1}, {"source": "Math", "target": 1766, "value": 1}, {"source": "Tree", "target": 1766, "value": 1}, {"source": "Depth-first Search", "target": 1766, "value": 1}, {"source": "Breadth-first Search", "target": 1766, "value": 1}, {"source": "Array", "target": 1764, "value": 1}, {"source": "Greedy", "target": 1764, "value": 1}, {"source": "String", "target": 1763, "value": 1}, {"source": "Math", "target": 1744, "value": 1}, {"source": "String", "target": 1745, "value": 1}, {"source": "Dynamic Programming", "target": 1745, "value": 1}, {"source": "Greedy", "target": 1743, "value": 1}, {"source": "Math", "target": 1739, "value": 1}, {"source": "Binary Search", "target": 1739, "value": 1}, {"source": "Array", "target": 1738, "value": 1}, {"source": "String", "target": 1737, "value": 1}, {"source": "Greedy", "target": 1737, "value": 1}, {"source": "String", "target": 1736, "value": 1}, {"source": "Greedy", "target": 1736, "value": 1}, {"source": "Binary Search", "target": 1751, "value": 1}, {"source": "Dynamic Programming", "target": 1751, "value": 1}, {"source": "Two Pointers", "target": 1750, "value": 1}, {"source": "Greedy", "target": 1749, "value": 1}, {"source": "Array", "target": 1748, "value": 1}, {"source": "Hash Table", "target": 1748, "value": 1}, {"source": "Greedy", "target": 1727, "value": 1}, {"source": "Sort", "target": 1727, "value": 1}, {"source": "Array", "target": 1742, "value": 1}, {"source": "Greedy", "target": 1725, "value": 1}, {"source": "Greedy", "target": 1722, "value": 1}, {"source": "Depth-first Search", "target": 1722, "value": 1}, {"source": "Union Find", "target": 1722, "value": 1}, {"source": "Bit Manipulation", "target": 1720, "value": 1}, {"source": "Math", "target": 1735, "value": 1}, {"source": "Bit Manipulation", "target": 1734, "value": 1}, {"source": "Array", "target": 1733, "value": 1}, {"source": "Greedy", "target": 1733, "value": 1}, {"source": "Array", "target": 1732, "value": 1}, {"source": "Greedy", "target": 1713, "value": 1}, {"source": "Two Pointers", "target": 1712, "value": 1}, {"source": "Binary Search", "target": 1712, "value": 1}, {"source": "Topics", "target": "Two Pointers"}, {"source": "Topics", "target": "Hash Table"}, {"source": "Topics", "target": "String"}, {"source": "Topics", "target": "Heap"}, {"source": "Topics", "target": "Uncategorized"}, {"source": "Topics", "target": "Depth-first Search"}, {"source": "Topics", "target": "Greedy"}, {"source": "Topics", "target": "Graph"}, {"source": "Topics", "target": "Breadth-first Search"}, {"source": "Topics", "target": "Recursion"}, {"source": "Topics", "target": "Suffix Array"}, {"source": "Topics", "target": "Union Find"}, {"source": "Topics", "target": "Backtracking"}, {"source": "Topics", "target": "Sort"}, {"source": "Topics", "target": "Meet in the Middle"}, {"source": "Topics", "target": "Divide and Conquer"}, {"source": "Topics", "target": "Tree"}, {"source": "Topics", "target": "Dynamic Programming"}, {"source": "Topics", "target": "Bit Manipulation"}, {"source": "Topics", "target": "Array"}, {"source": "Topics", "target": "Binary Search"}, {"source": "Topics", "target": "Math"}]}